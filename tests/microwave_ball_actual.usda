#usda 1.0
(
    defaultPrim = "world"
    kilogramsPerUnit = 1
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "world"
{
    def SphereLight "light"
    {
        float inputs:intensity = 300000
        float inputs:radius = 1
        float intensity = 300000
        float radius = 1
        quatf xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:translate = (0, 0, 10)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient"]
    }

    def Xform "table" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsMassAPI", "PhysicsFilteredPairsAPI"]
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient"]

        def Mesh "geometry_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [108, 44, 62, 54, 62, 44, 44, 62, 54, 62, 44, 108, 83, 75, 80, 72, 80, 75, 75, 80, 72, 80, 75, 83, 71, 68, 91, 88, 91, 68, 68, 91, 88, 91, 68, 71, 45, 42, 109, 106, 109, 42, 42, 109, 106, 109, 42, 45, 107, 61, 110, 64, 110, 61, 61, 110, 64, 110, 61, 107, 97, 94, 39, 36, 39, 94, 94, 39, 36, 39, 94, 97, 74, 77, 18, 21, 18, 77, 77, 18, 21, 18, 77, 74, 23, 76, 28, 82, 28, 76, 76, 28, 82, 28, 76, 23, 81, 78, 29, 56, 59, 60, 63, 60, 59, 26, 63, 59, 78, 63, 26, 29, 78, 26, 26, 78, 29, 26, 63, 78, 59, 63, 26, 59, 60, 63, 60, 59, 56, 29, 78, 81, 55, 43, 58, 46, 58, 43, 66, 58, 46, 69, 105, 66, 102, 66, 105, 58, 66, 102, 102, 66, 58, 105, 66, 102, 66, 105, 69, 46, 58, 66, 43, 58, 46, 58, 43, 55, 34, 104, 93, 70, 93, 104, 104, 93, 70, 93, 104, 34, 33, 92, 30, 89, 30, 92, 92, 30, 89, 30, 92, 33, 38, 96, 20, 73, 111, 79, 65, 79, 111, 12, 31, 96, 90, 96, 31, 67, 96, 90, 47, 96, 67, 20, 96, 47, 73, 20, 47, 111, 73, 47, 47, 73, 111, 47, 20, 73, 47, 96, 20, 67, 96, 47, 90, 96, 67, 31, 96, 90, 96, 31, 12, 111, 79, 65, 79, 111, 73, 20, 96, 38, 98, 17, 95, 14, 95, 17, 17, 95, 14, 95, 17, 98, 52, 15, 41, 99, 41, 15, 15, 41, 99, 41, 15, 52, 51, 40, 49, 37, 49, 40, 19, 49, 37, 22, 27, 19, 25, 19, 27, 49, 19, 25, 25, 19, 49, 27, 19, 25, 19, 27, 22, 37, 49, 19, 40, 49, 37, 49, 40, 51, 103, 32, 100, 50, 100, 32, 13, 50, 32, 16, 50, 13, 53, 50, 16, 32, 103, 35, 35, 103, 32, 16, 50, 53, 13, 50, 16, 32, 50, 13, 32, 100, 50, 100, 32, 103, 8, 85, 11, 87, 11, 85, 85, 11, 87, 11, 85, 8, 6, 9, 0, 3, 0, 9, 9, 0, 3, 0, 9, 6, 86, 115, 10, 5, 10, 115, 115, 10, 5, 10, 115, 86, 87, 85, 117, 114, 117, 85, 85, 117, 114, 117, 85, 87, 84, 48, 112, 1, 112, 48, 24, 1, 48, 57, 1, 24, 7, 101, 84, 48, 84, 101, 57, 101, 7, 1, 57, 7, 7, 57, 1, 7, 101, 57, 101, 84, 48, 84, 101, 7, 24, 1, 57, 48, 1, 24, 48, 112, 1, 112, 48, 84, 113, 2, 116, 4, 116, 2, 2, 116, 4, 116, 2, 113]
            rel material:binding = </world/table/material0000>
            point3f[] points = [(0.15393038, 0.67829263, 0.70600975), (0.15393038, 0.67829263, 0.70600975), (0.15393038, 0.67829263, 0.70600975), (0.15393038, 0.67829263, 0.72), (0.15393038, 0.67829263, 0.72), (0.15393038, 0.67829263, 0.72), (0.69444424, -0.03899254, 0.70600975), (0.69444424, -0.03899254, 0.70600975), (0.69444424, -0.03899254, 0.70600975), (0.69444424, -0.03899254, 0.72), (0.69444424, -0.03899254, 0.72), (0.69444424, -0.03899254, 0.72), (-0.6081564, -0.011089419, 0.60714984), (-0.6081564, -0.011089419, 0.60714984), (-0.6081564, -0.011089419, 0.60714984), (-0.6081564, -0.011089419, 0.000932642), (-0.6081564, -0.011089419, 0.000932642), (-0.6081564, -0.011089419, 0.000932642), (0.10309881, 0.5914338, 0.60714984), (0.10309881, 0.5914338, 0.60714984), (0.10309881, 0.5914338, 0.60714984), (0.10309881, 0.5914338, 0.000932642), (0.10309881, 0.5914338, 0.000932642), (0.10309881, 0.5914338, 0.000932642), (0.14629984, 0.6239967, 0.70600975), (0.14629984, 0.6239967, 0.70600975), (0.14629984, 0.6239967, 0.70600975), (0.14629984, 0.6239967, 0.000932642), (0.14629984, 0.6239967, 0.000932642), (0.14629984, 0.6239967, 0.000932642), (-0.17829542, -0.58153975, 0.60714984), (-0.17829542, -0.58153975, 0.60714984), (-0.17829542, -0.58153975, 0.60714984), (-0.17829542, -0.58153975, 0.000932642), (-0.17829542, -0.58153975, 0.000932642), (-0.17829542, -0.58153975, 0.000932642), (-0.59769315, 0.063355744, 0.60714984), (-0.59769315, 0.063355744, 0.60714984), (-0.59769315, 0.063355744, 0.60714984), (-0.59769315, 0.063355744, 0.000932642), (-0.59769315, 0.063355744, 0.000932642), (-0.59769315, 0.063355744, 0.000932642), (0.59693986, -0.06391196, 0), (0.59693986, -0.06391196, 0), (0.59693986, -0.06391196, 0), (0.59693986, -0.06391196, 0.60714984), (0.59693986, -0.06391196, 0.60714984), (0.59693986, -0.06391196, 0.60714984), (-0.6401483, 0.031363845, 0.70600975), (-0.6401483, 0.031363845, 0.70600975), (-0.6401483, 0.031363845, 0.70600975), (-0.6401483, 0.031363845, 0.000932642), (-0.6401483, 0.031363845, 0.000932642), (-0.6401483, 0.031363845, 0.000932642), (0.6401483, -0.03136753, 4.457143e-18), (0.6401483, -0.03136753, 4.457143e-18), (0.6401483, -0.03136753, 4.457143e-18), (0.6401483, -0.03136753, 0.70600975), (0.6401483, -0.03136753, 0.70600975), (0.6401483, -0.03136753, 0.70600975), (0.60758543, 0.01184087, 7.708013e-18), (0.60758543, 0.01184087, 7.708013e-18), (0.60758543, 0.01184087, 7.708013e-18), (0.60758543, 0.01184087, 0.60714984), (0.60758543, 0.01184087, 0.60714984), (0.60758543, 0.01184087, 0.60714984), (-0.10384658, -0.5920029, 0.60714984), (-0.10384658, -0.5920029, 0.60714984), (-0.10384658, -0.5920029, 0.60714984), (-0.10384658, -0.5920029, 0.000932642), (-0.10384658, -0.5920029, 0.000932642), (-0.10384658, -0.5920029, 0.000932642), (0.13565245, 0.5482439, 0.60714984), (0.13565245, 0.5482439, 0.60714984), (0.13565245, 0.5482439, 0.60714984), (0.13565245, 0.5482439, 0.000932642), (0.13565245, 0.5482439, 0.000932642), (0.13565245, 0.5482439, 0.000932642), (0.17885348, 0.5807883, 0.60714984), (0.17885348, 0.5807883, 0.60714984), (0.17885348, 0.5807883, 0.60714984), (0.17885348, 0.5807883, 0.000932642), (0.17885348, 0.5807883, 0.000932642), (0.17885348, 0.5807883, 0.000932642), (-0.15393406, -0.67829263, 0.70600975), (-0.15393406, -0.67829263, 0.70600975), (-0.15393406, -0.67829263, 0.72), (-0.15393406, -0.67829263, 0.72), (-0.13584031, -0.54954785, 0.60714984), (-0.13584031, -0.54954785, 0.60714984), (-0.13584031, -0.54954785, 0.60714984), (-0.13584031, -0.54954785, 0.000932642), (-0.13584031, -0.54954785, 0.000932642), (-0.13584031, -0.54954785, 0.000932642), (-0.5656994, 0.020902477, 0.60714984), (-0.5656994, 0.020902477, 0.60714984), (-0.5656994, 0.020902477, 0.60714984), (-0.5656994, 0.020902477, 0.000932642), (-0.5656994, 0.020902477, 0.000932642), (-0.5656994, 0.020902477, 0.000932642), (-0.14630169, -0.6239967, 0.70600975), (-0.14630169, -0.6239967, 0.70600975), (-0.14630169, -0.6239967, 0.70600975), (-0.14630169, -0.6239967, 0.000932642), (-0.14630169, -0.6239967, 0.000932642), (-0.14630169, -0.6239967, 0.000932642), (0.5643954, -0.020721981, 3.2508624e-18), (0.5643954, -0.020721981, 3.2508624e-18), (0.5643954, -0.020721981, 3.2508624e-18), (0.5643954, -0.020721981, 0.60714984), (0.5643954, -0.020721981, 0.60714984), (0.5643954, -0.020721981, 0.60714984), (-0.69444424, 0.03898886, 0.70600975), (-0.69444424, 0.03898886, 0.70600975), (-0.69444424, 0.03898886, 0.70600975), (-0.69444424, 0.03898886, 0.72), (-0.69444424, 0.03898886, 0.72), (-0.69444424, 0.03898886, 0.72)]
            float2[] primvars:st = [(0.574445, 0.451563), (-0.679432, 0.574445), (-0.679432, 0.451563), (0.574445, 0.460511), (-0.679432, 0.460511), (0.679432, 0.574445), (0, 0.451563), (-0.679432, 0), (0.679432, 0.451563), (0, 0.460511), (0.679432, 0), (0.679432, 0.460511), (-0.0247973, 0.515647), (-0.515647, 0.388332), (0.0247973, 0.388332), (-0.0247973, 0.515647), (-0.515647, 0.000596516), (0.0247973, 0.000596516), (-0.549648, 0.388332), (-0.620037, 0.388332), (-0.620037, 0.549648), (-0.549648, 0.000596516), (-0.620037, 0.000596516), (-0.620037, 0.549648), (-0.654635, 0.549648), (-0.654635, 0.451563), (0.549648, 0.451563), (-0.654635, 0.000596516), (-0.654635, 0.549648), (0.549648, 0.000596516), (-0.0247973, 0.388332), (-0.0247973, 0.0587987), (-0.0587987, 0.388332), (-0.0247973, 0.000596516), (-0.0247973, 0.0587987), (-0.0587987, 0.000596516), (0.549648, 0.388332), (-0.0587987, 0.388332), (-0.0587987, 0.549648), (0.549648, 0.000596516), (-0.0587987, 0.000596516), (-0.0587987, 0.549648), (-0.0247973, 0), (0.620037, 0), (-0.620037, 0.0247973), (-0.0247973, 0.388332), (0.620037, 0.388332), (-0.620037, 0.0247973), (-0.0247973, 0.549648), (-0.0247973, 0.451563), (-0.549648, 0.451563), (-0.0247973, 0.000596516), (-0.0247973, 0.549648), (-0.549648, 0.000596516), (-0.654635, 0.0247973), (0.654635, 0), (0.0247973, 0), (-0.654635, 0.0247973), (0.654635, 0.451563), (0.0247973, 0.451563), (0.0593952, 0), (-0.654635, 0), (-0.654635, 0.0593952), (0.0593952, 0.388332), (-0.654635, 0.388332), (-0.654635, 0.0593952), (0.0587987, 0.388332), (-0.0587987, 0.0247973), (0.0247973, 0.388332), (0.0587987, 0.000596516), (-0.0587987, 0.0247973), (0.0247973, 0.000596516), (0.620037, 0.388332), (-0.620037, 0.51505), (-0.51505, 0.388332), (0.620037, 0.000596516), (-0.620037, 0.51505), (-0.51505, 0.000596516), (0.51505, 0.388332), (-0.654635, 0.51505), (0.654635, 0.388332), (0.51505, 0.000596516), (-0.654635, 0.51505), (0.654635, 0.000596516), (0, 0), (0, 0.451563), (0, 0), (0, 0.460511), (0.0587987, 0.388332), (-0.0587987, 0.388332), (-0.0587987, 0.0587987), (0.0587987, 0.000596516), (-0.0587987, 0.000596516), (-0.0587987, 0.0587987), (0.515647, 0.388332), (0.0587987, 0.388332), (-0.0587987, 0.515647), (0.515647, 0.000596516), (0.0587987, 0.000596516), (-0.0587987, 0.515647), (-0.0247973, 0.451563), (-0.0247973, 0.0247973), (0.0247973, 0.451563), (-0.0247973, 0.000596516), (-0.0247973, 0.0247973), (0.0247973, 0.000596516), (-0.0593952, 0), (-0.620037, 0), (-0.620037, 0.0593952), (-0.0593952, 0.388332), (-0.620037, 0.388332), (-0.620037, 0.0593952), (0, 0.574445), (0, 0.451563), (-0.574445, 0.451563), (0, 0.574445), (0, 0.460511), (-0.574445, 0.460511)] (
                interpolation = "vertex"
            )
            custom bool singleSided = 1
        }

        def Material "material0000"
        {
            token outputs:displacement.connect = </world/table/material0000/Shader.outputs:displacement>
            token outputs:surface.connect = </world/table/material0000/Shader.outputs:surface>

            def Shader "Shader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.5, 0.5, 0.5)
                color3f inputs:diffuseColor.connect = </world/table/material0000/diffuse_texture.outputs:rgb>
                float inputs:metallic = 0
                normal3f inputs:normal
                float inputs:roughness = 0.5
                color3f inputs:specularColor = (0, 0, 0)
                int inputs:useSpecularWorkflow = 0
                token outputs:displacement
                token outputs:surface
            }

            def Shader "diffuse_texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @textures/texture0000diffuse.png@
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float outputs:b
                float outputs:g
                float outputs:r
                color3f outputs:rgb
            }
        }

        def PhysicsFixedJoint "world_fixed_joint" (
            prepend apiSchemas = ["PhysxJointAPI"]
        )
        {
            prepend rel physics:body0 = </world>
            prepend rel physics:body1 = </world/table>
            point3f physics:localPos0 = (0, 0, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (1, 0, 0, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
        }
    }

    def Xform "microwave" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsMassAPI", "PhysicsFilteredPairsAPI", "PhysicsArticulationRootAPI", "PhysxArticulationAPI"]
    )
    {
        custom string[] joint_names = ["joint_0"]
        custom double[] joint_positions = [0]
        quatf xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:translate = (0.0026824951489223814, 0.019704006272604546, 0.9208647708814715)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient"]

        def Xform "base"
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient"]
        }

        def Xform "link_1" (
            prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsMassAPI"]
        )
        {
            quatf xformOp:orient = (0.5, 0.5, -0.5, -0.5)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient"]

            def Mesh "frame_2" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [24, 104, 22, 23, 105, 25, 104, 24, 114, 115, 25, 105, 114, 24, 74, 75, 25, 115, 74, 24, 84, 85, 25, 75, 83, 77, 89, 88, 76, 82, 77, 83, 73, 72, 82, 76, 26, 80, 86, 87, 81, 27, 80, 26, 40, 41, 27, 81, 40, 26, 38, 39, 27, 41, 68, 42, 56, 57, 43, 69, 42, 68, 90, 91, 69, 43, 56, 42, 32, 33, 43, 57, 32, 42, 52, 53, 43, 33, 52, 42, 14, 15, 43, 53, 14, 42, 98, 99, 43, 15, 98, 42, 10, 11, 43, 99, 10, 42, 36, 37, 43, 11, 36, 42, 18, 19, 43, 37, 18, 42, 4, 5, 43, 19, 42, 90, 48, 49, 91, 43, 48, 90, 50, 51, 91, 49, 50, 90, 60, 61, 91, 51, 50, 60, 44, 45, 61, 51, 44, 60, 70, 71, 61, 45, 44, 70, 78, 79, 71, 45, 44, 78, 46, 47, 79, 45, 46, 78, 2, 3, 79, 47, 2, 78, 6, 7, 79, 3, 6, 78, 16, 17, 79, 7, 16, 78, 34, 35, 79, 17, 34, 78, 8, 9, 79, 35, 8, 78, 100, 101, 79, 9, 100, 78, 12, 13, 79, 101, 12, 78, 54, 55, 79, 13, 54, 78, 30, 31, 79, 55, 30, 78, 58, 59, 79, 31, 4, 0, 6, 7, 1, 5, 0, 4, 42, 43, 5, 1, 6, 0, 2, 3, 1, 7, 63, 97, 67, 66, 96, 62, 97, 63, 93, 92, 62, 96, 110, 64, 94, 95, 65, 111, 64, 110, 106, 107, 111, 65, 64, 106, 28, 29, 107, 65, 64, 28, 112, 113, 29, 65, 112, 28, 108, 109, 29, 113, 108, 28, 20, 21, 29, 109, 112, 108, 102, 103, 109, 113]
                rel material:binding = </world/microwave/link_1/material0001>
                point3f[] points = [(-0.30029595, -0.19086479, 0.13768242), (-0.30029595, -0.19086479, 0.13768242), (-0.30029595, 0.18913525, 0.13768242), (-0.30029595, 0.18913525, 0.13768242), (-0.31026182, -0.19358514, 0.13768242), (-0.31026182, -0.19358514, 0.13768242), (-0.31026182, 0.19185601, 0.13768242), (-0.31026182, 0.19185601, 0.13768242), (-0.3086837, 0.19559836, 0.13768242), (-0.3086837, 0.19559836, 0.13768242), (-0.3086837, -0.1973279, 0.13768242), (-0.3086837, -0.1973279, 0.13768242), (-0.30675948, 0.19752257, 0.13768242), (-0.30675948, 0.19752257, 0.13768242), (-0.30675948, -0.19925211, 0.13768242), (-0.30675948, -0.19925211, 0.13768242), (-0.30993155, 0.19318041, 0.13768242), (-0.30993155, 0.19318041, 0.13768242), (-0.30993155, -0.19490954, 0.13768242), (-0.30993155, -0.19490954, 0.13768242), (0.33970398, -0.1514206, 0.16268258), (0.33970398, -0.1514206, 0.16268258), (0.33970398, 0.15969104, 0.16268258), (0.33970398, 0.15969104, 0.16268258), (0.33970398, 0.19913523, 0.16268258), (0.33970398, 0.19913523, 0.16268258), (0.33970398, 0.19913523, 0.16268258), (0.33970398, 0.19913523, 0.16268258), (0.33970398, -0.18142094, 0.16268258), (0.33970398, -0.18142094, 0.16268258), (-0.3043411, 0.19877043, 0.13768242), (-0.3043411, 0.19877043, 0.13768242), (-0.3043411, -0.20049956, 0.13768242), (-0.3043411, -0.20049956, 0.13768242), (-0.3094012, 0.19443785, 0.13768242), (-0.3094012, 0.19443785, 0.13768242), (-0.3094012, -0.19616698, 0.13768242), (-0.3094012, -0.19616698, 0.13768242), (0.34242472, 0.1991007, 0.16268258), (0.34242472, 0.1991007, 0.16268258), (0.34242472, 0.19911776, 0.13768242), (0.34242472, 0.19911776, 0.13768242), (0.19470406, -0.19086479, 0.13768242), (0.19470406, -0.19086479, 0.13768242), (0.19470406, 0.1662835, 0.13768242), (0.19470406, 0.1662835, 0.13768242), (0.19470406, 0.18913525, 0.13768242), (0.19470406, 0.18913525, 0.13768242), (0.19470406, -0.18801342, 0.13768242), (0.19470406, -0.18801342, 0.13768242), (0.19470406, -0.15801348, 0.13768242), (0.19470406, -0.15801348, 0.13768242), (-0.30559856, -0.19996963, 0.13768242), (-0.30559856, -0.19996963, 0.13768242), (-0.30559856, 0.19824009, 0.13768242), (-0.30559856, 0.19824009, 0.13768242), (-0.30301714, -0.20082983, 0.13768242), (-0.30301714, -0.20082983, 0.13768242), (-0.30301714, 0.1991007, 0.13768242), (-0.30301714, 0.1991007, 0.13768242), (0.19970384, -0.1578367, 0.13768242), (0.19970384, -0.1578367, 0.13768242), (0.19970384, -0.1578367, 0.13768242), (0.19970384, -0.1578367, 0.13768242), (0.19970384, -0.1578367, 0.16268258), (0.19970384, -0.1578367, 0.16268258), (0.19970384, -0.1578367, 0.16268258), (0.19970384, -0.1578367, 0.16268258), (0.19970384, -0.20086478, 0.13768242), (0.19970384, -0.20086478, 0.13768242), (0.19970384, 0.16610672, 0.13768242), (0.19970384, 0.16610672, 0.13768242), (0.19970384, 0.16610672, 0.13768242), (0.19970384, 0.16610672, 0.13768242), (0.19970384, 0.16610672, 0.16268258), (0.19970384, 0.16610672, 0.16268258), (0.19970384, 0.16610672, 0.16268258), (0.19970384, 0.16610672, 0.16268258), (0.19970384, 0.19913523, 0.13768242), (0.19970384, 0.19913523, 0.13768242), (0.19970384, 0.19913523, 0.13768242), (0.19970384, 0.19913523, 0.13768242), (0.19970384, 0.19913523, 0.13768242), (0.19970384, 0.19913523, 0.13768242), (0.19970384, 0.19913523, 0.16268258), (0.19970384, 0.19913523, 0.16268258), (0.19970384, 0.19913523, 0.16268258), (0.19970384, 0.19913523, 0.16268258), (0.19970384, 0.19913523, 0.16268258), (0.19970384, 0.19913523, 0.16268258), (0.19970384, -0.18783663, 0.13768242), (0.19970384, -0.18783663, 0.13768242), (0.19970384, -0.18783663, 0.13768242), (0.19970384, -0.18783663, 0.13768242), (0.19970384, -0.18783663, 0.16268258), (0.19970384, -0.18783663, 0.16268258), (0.19970384, -0.18783663, 0.16268258), (0.19970384, -0.18783663, 0.16268258), (-0.30779603, -0.19836447, 0.13768242), (-0.30779603, -0.19836447, 0.13768242), (-0.30779603, 0.19663534, 0.13768242), (-0.30779603, 0.19663534, 0.13768242), (0.2697037, -0.15505895, 0.16268258), (0.2697037, -0.15505895, 0.16268258), (0.29475543, 0.1621901, 0.16268258), (0.29475543, 0.1621901, 0.16268258), (0.29475543, -0.1839196, 0.16268258), (0.29475543, -0.1839196, 0.16268258), (0.29475543, -0.15391965, 0.16268258), (0.29475543, -0.15391965, 0.16268258), (0.23977862, -0.18641947, 0.16268258), (0.23977862, -0.18641947, 0.16268258), (0.23977862, -0.15641955, 0.16268258), (0.23977862, -0.15641955, 0.16268258), (0.23977862, 0.16468997, 0.16268258), (0.23977862, 0.16468997, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0001"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0001/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0001/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "frame_2_2BEC41AF2F53" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts
                int[] faceVertexIndices = [482, 334, 1342, 1343, 335, 483, 334, 482, 344, 345, 483, 335, 344, 482, 56, 57, 483, 345, 344, 56, 940, 941, 57, 345, 344, 940, 218, 219, 941, 345, 344, 218, 1044, 1045, 219, 345, 344, 1044, 1482, 1483, 1045, 345, 344, 1482, 1870, 1871, 1483, 345, 344, 1870, 1236, 1237, 1871, 345, 344, 1236, 1568, 1569, 1237, 345, 344, 1568, 396, 397, 1569, 345, 344, 396, 400, 401, 397, 345, 344, 400, 338, 339, 401, 345, 338, 400, 340, 341, 401, 339, 340, 400, 342, 343, 401, 341, 342, 400, 1556, 1557, 401, 343, 342, 1556, 1246, 1247, 1557, 343, 342, 1246, 1860, 1861, 1247, 343, 342, 1860, 1472, 1473, 1861, 343, 342, 1472, 1054, 1055, 1473, 343, 342, 1054, 208, 209, 1055, 343, 342, 208, 950, 951, 209, 343, 342, 950, 46, 47, 951, 343, 342, 46, 468, 469, 47, 343, 1426, 144, 580, 581, 145, 1427, 144, 1426, 308, 309, 1427, 145, 308, 1426, 348, 349, 1427, 309, 348, 1426, 494, 495, 1427, 349, 348, 494, 1500, 1501, 495, 349, 1500, 494, 1398, 1399, 495, 1501, 1500, 1398, 654, 655, 1399, 1501, 654, 1398, 1064, 1065, 1399, 655, 654, 1064, 1704, 1705, 1065, 655, 1704, 1064, 1632, 1633, 1065, 1705, 1704, 1632, 1278, 1279, 1633, 1705, 1278, 1632, 1536, 1537, 1633, 1279, 1278, 1536, 516, 517, 1537, 1279, 516, 1536, 1282, 1283, 1537, 517, 1282, 1536, 1628, 1629, 1537, 1283, 1282, 1628, 1706, 1707, 1629, 1283, 1706, 1628, 1060, 1061, 1629, 1707, 1706, 1060, 658, 659, 1061, 1707, 658, 1060, 1388, 1389, 1061, 659, 658, 1388, 1498, 1499, 1389, 659, 1498, 1388, 502, 503, 1389, 1499, 1498, 502, 360, 361, 503, 1499, 360, 502, 1418, 1419, 503, 361, 360, 1418, 298, 299, 1419, 361, 298, 1418, 596, 597, 1419, 299, 298, 596, 156, 157, 597, 299, 156, 596, 1376, 1377, 597, 157, 1364, 278, 836, 837, 279, 1365, 278, 1364, 1192, 1193, 1365, 279, 278, 1192, 1106, 1107, 1193, 279, 278, 1106, 992, 993, 1107, 279, 992, 1106, 26, 27, 1107, 993, 992, 26, 1102, 1103, 27, 993, 1102, 26, 744, 745, 27, 1103, 1102, 744, 1316, 1317, 745, 1103, 1316, 744, 1754, 1755, 745, 1317, 1316, 1754, 1162, 1163, 1755, 1317, 1162, 1754, 258, 259, 1755, 1163, 1162, 258, 1916, 1917, 259, 1163, 1916, 258, 924, 925, 259, 1917, 1916, 924, 886, 887, 925, 1917, 886, 924, 262, 263, 925, 887, 886, 262, 1908, 1909, 263, 887, 1908, 262, 1170, 1171, 263, 1909, 1170, 262, 1756, 1757, 263, 1171, 1170, 1756, 1312, 1313, 1757, 1171, 1312, 1756, 748, 749, 1757, 1313, 1312, 748, 1090, 1091, 749, 1313, 1090, 748, 24, 25, 749, 1091, 1090, 24, 1002, 1003, 25, 1091, 1002, 24, 1118, 1119, 25, 1003, 1002, 1118, 268, 269, 1119, 1003, 268, 1118, 1182, 1183, 1119, 269, 268, 1182, 852, 853, 1183, 269, 852, 1182, 1376, 1377, 1183, 853, 852, 1376, 596, 597, 1377, 853, 144, 1364, 836, 837, 1365, 145, 1364, 144, 1216, 1217, 145, 1365, 1364, 1216, 1588, 1589, 1217, 1365, 1588, 1216, 1830, 1831, 1217, 1589, 1588, 1830, 1600, 1601, 1831, 1589, 1600, 1830, 778, 779, 1831, 1601, 1600, 778, 1946, 1947, 779, 1601, 1946, 778, 700, 701, 779, 1947, 1946, 700, 1878, 1879, 701, 1947, 1878, 700, 534, 535, 701, 1879, 1878, 534, 898, 899, 535, 1879, 898, 534, 1796, 1797, 535, 899, 898, 1796, 1690, 1691, 1797, 899, 1690, 1796, 1736, 1737, 1797, 1691, 1736, 1796, 1656, 1657, 1797, 1737, 1736, 1656, 1800, 1801, 1657, 1737, 1736, 1800, 1694, 1695, 1801, 1737, 1694, 1800, 536, 537, 1801, 1695, 1694, 536, 900, 901, 537, 1695, 900, 536, 704, 705, 537, 901, 900, 704, 1882, 1883, 705, 901, 1882, 704, 776, 777, 705, 1883, 1882, 776, 1944, 1945, 777, 1883, 1944, 776, 1842, 1843, 777, 1945, 1944, 1842, 1612, 1613, 1843, 1945, 1612, 1842, 1206, 1207, 1843, 1613, 1612, 1206, 1578, 1579, 1207, 1613, 1578, 1206, 156, 157, 1207, 1579, 1578, 156, 1376, 1377, 157, 1579, 440, 162, 602, 603, 163, 441, 162, 440, 300, 301, 441, 163, 300, 440, 362, 363, 441, 301, 362, 440, 444, 445, 441, 363, 362, 444, 1494, 1495, 445, 363, 1494, 444, 392, 393, 445, 1495, 1494, 392, 672, 673, 393, 1495, 672, 392, 198, 199, 393, 673, 672, 198, 1720, 1721, 199, 673, 1720, 198, 388, 389, 199, 1721, 1720, 388, 1274, 1275, 389, 1721, 1274, 388, 1528, 1529, 389, 1275, 1274, 1528, 512, 513, 1529, 1275, 512, 1528, 552, 553, 1529, 513, 512, 552, 1544, 1545, 553, 513, 512, 1544, 1272, 1273, 1545, 513, 1272, 1544, 386, 387, 1545, 1273, 1272, 386, 1700, 1701, 387, 1273, 1700, 386, 196, 197, 387, 1701, 1700, 196, 650, 651, 197, 1701, 650, 196, 390, 391, 197, 651, 650, 390, 1502, 1503, 391, 651, 1502, 390, 446, 447, 391, 1503, 1502, 446, 354, 355, 447, 1503, 354, 446, 442, 443, 447, 355, 354, 442, 316, 317, 443, 355, 316, 442, 586, 587, 443, 317, 316, 586, 146, 147, 587, 317, 146, 586, 1366, 1367, 587, 147, 1178, 854, 1378, 1379, 855, 1179, 854, 1178, 286, 287, 1179, 855, 286, 1178, 1114, 1115, 1179, 287, 286, 1114, 998, 999, 1115, 287, 998, 1114, 16, 17, 1115, 999, 998, 16, 1092, 1093, 17, 999, 1092, 16, 758, 759, 17, 1093, 1092, 758, 1324, 1325, 759, 1093, 1324, 758, 1764, 1765, 759, 1325, 1324, 1764, 1172, 1173, 1765, 1325, 1172, 1764, 248, 249, 1765, 1173, 1172, 248, 1926, 1927, 249, 1173, 1926, 248, 930, 931, 249, 1927, 1926, 930, 890, 891, 931, 1927, 890, 930, 250, 251, 931, 891, 890, 250, 1924, 1925, 251, 891, 1924, 250, 1158, 1159, 251, 1925, 1158, 250, 1768, 1769, 251, 1159, 1158, 1768, 1322, 1323, 1769, 1159, 1322, 1768, 760, 761, 1769, 1323, 1322, 760, 1086, 1087, 761, 1323, 1086, 760, 22, 23, 761, 1087, 1086, 22, 1000, 1001, 23, 1087, 1000, 22, 1108, 1109, 23, 1001, 1000, 1108, 282, 283, 1109, 1001, 282, 1108, 1194, 1195, 1109, 283, 282, 1194, 832, 833, 1195, 283, 832, 1194, 1360, 1361, 1195, 833, 1202, 1378, 158, 159, 1379, 1203, 1378, 1202, 1574, 1575, 1203, 1379, 1574, 1202, 1838, 1839, 1203, 1575, 1574, 1838, 1608, 1609, 1839, 1575, 1608, 1838, 768, 769, 1839, 1609, 1608, 768, 1936, 1937, 769, 1609, 1936, 768, 714, 715, 769, 1937, 1936, 714, 1892, 1893, 715, 1937, 1892, 714, 544, 545, 715, 1893, 1892, 544, 908, 909, 545, 1893, 908, 544, 1786, 1787, 545, 909, 908, 1786, 1680, 1681, 1787, 909, 1680, 1786, 1742, 1743, 1787, 1681, 1742, 1786, 1662, 1663, 1787, 1743, 1742, 1662, 1788, 1789, 1663, 1743, 1742, 1788, 1682, 1683, 1789, 1743, 1682, 1788, 548, 549, 1789, 1683, 1682, 548, 912, 913, 549, 1683, 912, 548, 716, 717, 549, 913, 912, 716, 1894, 1895, 717, 913, 1894, 716, 774, 775, 717, 1895, 1894, 774, 1942, 1943, 775, 1895, 1942, 774, 1832, 1833, 775, 1943, 1942, 1832, 1602, 1603, 1833, 1943, 1602, 1832, 1218, 1219, 1833, 1603, 1602, 1218, 1590, 1591, 1219, 1603, 1590, 1218, 140, 141, 1219, 1591, 1590, 140, 1360, 1361, 141, 1591, 1414, 158, 598, 599, 159, 1415, 158, 1414, 294, 295, 1415, 159, 294, 1414, 356, 357, 1415, 295, 356, 1414, 506, 507, 1415, 357, 356, 506, 1490, 1491, 507, 357, 1490, 506, 1384, 1385, 507, 1491, 1490, 1384, 668, 669, 1385, 1491, 668, 1384, 1062, 1063, 1385, 669, 668, 1062, 1714, 1715, 1063, 669, 1714, 1062, 1642, 1643, 1063, 1715, 1714, 1642, 1268, 1269, 1643, 1715, 1268, 1642, 1542, 1543, 1643, 1269, 1268, 1542, 522, 523, 1543, 1269, 522, 1542, 1640, 1641, 1543, 523, 522, 1640, 1270, 1271, 1641, 523, 1270, 1640, 1718, 1719, 1641, 1271, 1718, 1640, 1074, 1075, 1641, 1719, 1718, 1074, 670, 671, 1075, 1719, 670, 1074, 1400, 1401, 1075, 671, 670, 1400, 1496, 1497, 1401, 671, 1496, 1400, 510, 511, 1401, 1497, 1496, 510, 350, 351, 511, 1497, 350, 510, 1408, 1409, 511, 351, 350, 1408, 310, 311, 1409, 351, 310, 1408, 576, 577, 1409, 311, 310, 576, 140, 141, 577, 311, 858, 1382, 270, 271, 1383, 859, 1382, 858, 602, 603, 859, 1383, 1382, 602, 162, 163, 603, 1383, 270, 1382, 1184, 1185, 1383, 271, 270, 1184, 1120, 1121, 1185, 271, 270, 1120, 984, 985, 1121, 271, 984, 1120, 20, 21, 1121, 985, 984, 20, 1098, 1099, 21, 985, 1098, 20, 762, 763, 21, 1099, 1098, 762, 1308, 1309, 763, 1099, 1308, 762, 1770, 1771, 763, 1309, 1308, 1770, 1176, 1177, 1771, 1309, 1176, 1770, 254, 255, 1771, 1177, 1176, 254, 1904, 1905, 255, 1177, 1904, 254, 920, 921, 255, 1905, 1904, 920, 882, 883, 921, 1905, 882, 920, 252, 253, 921, 883, 882, 252, 1928, 1929, 253, 883, 1928, 252, 1164, 1165, 253, 1929, 1164, 252, 1750, 1751, 253, 1165, 1164, 1750, 1306, 1307, 1751, 1165, 1306, 1750, 740, 741, 1751, 1307, 1306, 740, 1094, 1095, 741, 1307, 1094, 740, 28, 29, 741, 1095, 1094, 28, 986, 987, 29, 1095, 986, 28, 1112, 1113, 29, 987, 986, 1112, 284, 285, 1113, 987, 284, 1112, 1200, 1201, 1113, 285, 284, 1200, 842, 843, 1201, 285, 842, 1200, 1366, 1367, 1201, 843, 842, 1366, 586, 587, 1367, 843, 1208, 1382, 162, 163, 1383, 1209, 1382, 1208, 1580, 1581, 1209, 1383, 1580, 1208, 1614, 1615, 1209, 1581, 1614, 1208, 1844, 1845, 1209, 1615, 1614, 1844, 772, 773, 1845, 1615, 1614, 772, 1940, 1941, 773, 1615, 1940, 772, 718, 719, 773, 1941, 1940, 718, 1896, 1897, 719, 1941, 1896, 718, 914, 915, 719, 1897, 914, 718, 550, 551, 719, 915, 914, 550, 1792, 1793, 551, 915, 914, 1792, 1686, 1687, 1793, 915, 1686, 1792, 1732, 1733, 1793, 1687, 1732, 1792, 1652, 1653, 1793, 1733, 1732, 1652, 1790, 1791, 1653, 1733, 1732, 1790, 1684, 1685, 1791, 1733, 1684, 1790, 530, 531, 1791, 1685, 1684, 530, 894, 895, 531, 1685, 894, 530, 696, 697, 531, 895, 894, 696, 1874, 1875, 697, 895, 1874, 696, 780, 781, 697, 1875, 1874, 780, 1948, 1949, 781, 1875, 1948, 780, 1836, 1837, 781, 1949, 1948, 1836, 1606, 1607, 1837, 1949, 1606, 1836, 1224, 1225, 1837, 1607, 1606, 1224, 1596, 1597, 1225, 1607, 1596, 1224, 146, 147, 1225, 1597, 1596, 146, 1366, 1367, 147, 1597, 1410, 148, 588, 589, 149, 1411, 148, 1410, 312, 313, 1411, 149, 312, 1410, 352, 353, 1411, 313, 352, 1410, 498, 499, 1411, 353, 352, 498, 1506, 1507, 499, 353, 1506, 498, 1402, 1403, 499, 1507, 1506, 1402, 660, 661, 1403, 1507, 660, 1402, 1078, 1079, 1403, 661, 660, 1078, 1708, 1709, 1079, 661, 1708, 1078, 1636, 1637, 1079, 1709, 1708, 1636, 1256, 1257, 1637, 1709, 1256, 1636, 1538, 1539, 1637, 1257, 1256, 1538, 518, 519, 1539, 1257, 518, 1538, 1634, 1635, 1539, 519, 518, 1634, 1260, 1261, 1635, 519, 1260, 1634, 1710, 1711, 1635, 1261, 1710, 1634, 1066, 1067, 1635, 1711, 1710, 1066, 664, 665, 1067, 1711, 664, 1066, 1390, 1391, 1067, 665, 664, 1390, 1492, 1493, 1391, 665, 1492, 1390, 508, 509, 1391, 1493, 1492, 508, 366, 367, 509, 1493, 366, 508, 1420, 1421, 509, 367, 366, 1420, 304, 305, 1421, 367, 304, 1420, 600, 601, 1421, 305, 304, 600, 160, 161, 601, 305, 160, 600, 1380, 1381, 601, 161, 1380, 600, 856, 857, 601, 1381, 844, 1368, 132, 133, 1369, 845, 1368, 844, 588, 589, 845, 1369, 1368, 588, 148, 149, 589, 1369, 132, 1368, 1196, 1197, 1369, 133, 132, 1196, 1110, 1111, 1197, 133, 132, 1110, 932, 933, 1111, 133, 932, 1110, 32, 33, 1111, 933, 932, 32, 138, 139, 33, 933, 138, 32, 750, 751, 33, 139, 138, 750, 422, 423, 751, 139, 422, 750, 1758, 1759, 751, 423, 422, 1758, 1808, 1809, 1759, 423, 1808, 1758, 236, 237, 1759, 1809, 1808, 236, 1920, 1921, 237, 1809, 1920, 236, 926, 927, 237, 1921, 1920, 926, 240, 241, 927, 1921, 1920, 240, 1806, 1807, 241, 1921, 1806, 240, 1760, 1761, 241, 1807, 1806, 1760, 420, 421, 1761, 1807, 420, 1760, 754, 755, 1761, 421, 420, 754, 136, 137, 755, 421, 136, 754, 18, 19, 755, 137, 136, 18, 934, 935, 19, 137, 934, 18, 1124, 1125, 19, 935, 934, 1124, 134, 135, 1125, 935, 134, 1124, 1188, 1189, 1125, 135, 134, 1188, 856, 857, 1189, 135, 856, 1188, 1380, 1381, 1189, 857, 1220, 1368, 148, 149, 1369, 1221, 1368, 1220, 1592, 1593, 1221, 1369, 1592, 1220, 1834, 1835, 1221, 1593, 1592, 1834, 1604, 1605, 1835, 1593, 1604, 1834, 784, 785, 1835, 1605, 1604, 784, 1952, 1953, 785, 1605, 1952, 784, 1884, 1885, 785, 1953, 1884, 784, 706, 707, 785, 1885, 1884, 706, 538, 539, 707, 1885, 1884, 538, 902, 903, 539, 1885, 902, 538, 1774, 1775, 539, 903, 902, 1774, 1668, 1669, 1775, 903, 1668, 1774, 1658, 1659, 1775, 1669, 1668, 1658, 1738, 1739, 1659, 1669, 1738, 1658, 1778, 1779, 1659, 1739, 1738, 1778, 1672, 1673, 1779, 1739, 1672, 1778, 540, 541, 1779, 1673, 1672, 540, 904, 905, 541, 1673, 904, 540, 710, 711, 541, 905, 904, 710, 1888, 1889, 711, 905, 1888, 710, 770, 771, 711, 1889, 1888, 770, 1938, 1939, 771, 1889, 1938, 770, 1848, 1849, 771, 1939, 1938, 1848, 1618, 1619, 1849, 1939, 1618, 1848, 1212, 1213, 1849, 1619, 1618, 1212, 1584, 1585, 1213, 1619, 1584, 1212, 160, 161, 1213, 1585, 1584, 160, 1380, 1381, 161, 1585, 1424, 142, 578, 579, 143, 1425, 142, 1424, 306, 307, 1425, 143, 306, 1424, 346, 347, 1425, 307, 346, 1424, 492, 493, 1425, 347, 346, 492, 1488, 1489, 493, 347, 1488, 492, 1396, 1397, 493, 1489, 1488, 1396, 652, 653, 1397, 1489, 652, 1396, 1076, 1077, 1397, 653, 652, 1076, 1702, 1703, 1077, 653, 1702, 1076, 1630, 1631, 1077, 1703, 1702, 1630, 1276, 1277, 1631, 1703, 1276, 1630, 1534, 1535, 1631, 1277, 1276, 1534, 514, 515, 1535, 1277, 514, 1534, 1626, 1627, 1535, 515, 514, 1626, 1280, 1281, 1627, 515, 1280, 1626, 1716, 1717, 1627, 1281, 1716, 1626, 1070, 1071, 1627, 1717, 1716, 1070, 656, 657, 1071, 1717, 656, 1070, 1386, 1387, 1071, 657, 656, 1386, 1486, 1487, 1387, 657, 1486, 1386, 504, 505, 1387, 1487, 1486, 504, 358, 359, 505, 1487, 358, 504, 1416, 1417, 505, 359, 358, 1416, 296, 297, 1417, 359, 296, 1416, 594, 595, 1417, 297, 296, 594, 154, 155, 595, 297, 154, 594, 1374, 1375, 595, 155, 1374, 594, 850, 851, 595, 1375, 338, 970, 590, 591, 971, 339, 970, 338, 620, 621, 339, 971, 620, 338, 1012, 1013, 339, 621, 1012, 338, 174, 175, 339, 1013, 174, 338, 804, 805, 339, 175, 804, 338, 874, 875, 339, 805, 874, 338, 340, 341, 339, 875, 874, 340, 796, 797, 341, 875, 796, 340, 168, 169, 341, 797, 168, 340, 606, 607, 341, 169, 168, 606, 870, 871, 607, 169, 168, 870, 104, 105, 871, 169, 168, 104, 1010, 1011, 105, 169, 1010, 104, 616, 617, 105, 1011, 616, 104, 226, 227, 105, 617, 616, 226, 982, 983, 227, 617, 982, 226, 72, 73, 227, 983, 982, 72, 592, 593, 73, 983, 592, 72, 730, 731, 73, 593, 592, 730, 4, 5, 731, 593, 592, 4, 152, 153, 5, 593, 152, 4, 580, 581, 5, 153, 152, 580, 1372, 1373, 581, 153, 1372, 580, 848, 849, 581, 1373, 606, 340, 866, 867, 341, 607, 866, 340, 108, 109, 341, 867, 108, 340, 222, 223, 341, 109, 222, 340, 862, 863, 341, 223, 222, 862, 794, 795, 863, 223, 222, 794, 66, 67, 795, 223, 66, 794, 738, 739, 795, 67, 738, 794, 170, 171, 795, 739, 738, 170, 0, 1, 171, 739, 0, 170, 1004, 1005, 171, 1, 0, 1004, 596, 597, 1005, 1, 596, 1004, 624, 625, 1005, 597, 596, 624, 976, 977, 625, 597, 596, 976, 602, 603, 977, 597, 596, 602, 852, 853, 603, 597, 852, 602, 858, 859, 603, 853, 862, 340, 792, 793, 341, 863, 792, 340, 176, 177, 341, 793, 176, 340, 110, 111, 341, 177, 176, 110, 1018, 1019, 111, 177, 1018, 110, 612, 613, 111, 1019, 612, 110, 232, 233, 111, 613, 612, 232, 972, 973, 233, 613, 972, 232, 68, 69, 233, 973, 972, 68, 586, 587, 69, 973, 586, 68, 734, 735, 69, 587, 586, 734, 10, 11, 735, 587, 586, 10, 598, 599, 11, 587, 586, 598, 842, 843, 599, 587, 110, 340, 878, 879, 341, 111, 878, 340, 608, 609, 341, 879, 608, 340, 876, 877, 341, 609, 876, 340, 100, 101, 341, 877, 100, 340, 230, 231, 341, 101, 230, 340, 62, 63, 341, 231, 62, 340, 802, 803, 341, 63, 62, 802, 736, 737, 803, 63, 736, 802, 178, 179, 803, 737, 736, 178, 8, 9, 179, 737, 8, 178, 1014, 1015, 179, 9, 8, 1014, 576, 577, 1015, 9, 576, 1014, 618, 619, 1015, 577, 576, 618, 968, 969, 619, 577, 576, 968, 588, 589, 969, 577, 576, 588, 140, 141, 589, 577, 140, 588, 1360, 1361, 589, 141, 1360, 588, 832, 833, 589, 1361, 832, 588, 844, 845, 589, 833, 802, 340, 872, 873, 341, 803, 872, 340, 800, 801, 341, 873, 800, 340, 166, 167, 341, 801, 166, 340, 1008, 1009, 341, 167, 1008, 340, 102, 103, 341, 1009, 1008, 102, 622, 623, 103, 1009, 622, 102, 224, 225, 103, 623, 622, 224, 980, 981, 225, 623, 980, 224, 64, 65, 225, 981, 980, 64, 600, 601, 65, 981, 600, 64, 728, 729, 65, 601, 600, 728, 2, 3, 729, 601, 600, 2, 578, 579, 3, 601, 600, 578, 1362, 1363, 579, 601, 102, 340, 868, 869, 341, 103, 868, 340, 604, 605, 341, 869, 604, 340, 864, 865, 341, 605, 864, 340, 106, 107, 341, 865, 106, 340, 228, 229, 341, 107, 228, 340, 70, 71, 341, 229, 70, 340, 798, 799, 341, 71, 70, 798, 732, 733, 799, 71, 732, 798, 172, 173, 799, 733, 732, 172, 6, 7, 173, 733, 6, 172, 1006, 1007, 173, 7, 6, 1006, 594, 595, 1007, 7, 594, 1006, 614, 615, 1007, 595, 594, 614, 974, 975, 615, 595, 594, 974, 582, 583, 975, 595, 798, 340, 860, 861, 341, 799, 860, 340, 790, 791, 341, 861, 790, 340, 164, 165, 341, 791, 164, 340, 1016, 1017, 341, 165, 1016, 340, 610, 611, 341, 1017, 610, 340, 722, 723, 341, 611, 610, 722, 1744, 1745, 723, 611, 610, 1744, 978, 979, 1745, 611, 978, 1744, 526, 527, 1745, 979, 978, 526, 584, 585, 527, 979, 584, 526, 1430, 1431, 527, 585, 584, 1430, 1532, 1533, 1431, 585, 1532, 1430, 1404, 1405, 1431, 1533, 1532, 1404, 1266, 1267, 1405, 1533, 1266, 1404, 1784, 1785, 1405, 1267, 1784, 1404, 1678, 1679, 1405, 1785, 1678, 1404, 1230, 1231, 1405, 1679, 1678, 1230, 246, 247, 1231, 1679, 246, 1230, 1912, 1913, 1231, 247, 1912, 1230, 840, 841, 1231, 1913, 840, 1230, 1546, 1547, 1231, 841, 722, 340, 1644, 1645, 341, 723, 1644, 340, 720, 721, 341, 1645, 720, 340, 1746, 1747, 341, 721, 1746, 340, 524, 525, 341, 1747, 524, 340, 1428, 1429, 341, 525, 1428, 340, 1406, 1407, 341, 1429, 1406, 340, 1228, 1229, 341, 1407, 1228, 340, 1526, 1527, 341, 1229, 1526, 340, 1254, 1255, 341, 1527, 1254, 340, 1622, 1623, 341, 1255, 1254, 1622, 94, 95, 1623, 1255, 1254, 94, 406, 407, 95, 1255, 1254, 406, 1772, 1773, 407, 1255, 1772, 406, 1666, 1667, 407, 1773, 1666, 406, 266, 267, 407, 1667, 1666, 266, 292, 293, 267, 1667, 1666, 292, 234, 235, 293, 1667, 234, 292, 1902, 1903, 293, 235, 1902, 292, 1726, 1727, 293, 1903, 1902, 1726, 288, 289, 1727, 1903, 288, 1726, 404, 405, 1727, 289, 288, 404, 788, 789, 405, 289, 1622, 340, 1252, 1253, 341, 1623, 1252, 340, 1226, 1227, 341, 1253, 1226, 340, 958, 959, 341, 1227, 958, 340, 1852, 1853, 341, 959, 1852, 340, 830, 831, 341, 1853, 830, 340, 60, 61, 341, 831, 60, 340, 1664, 1665, 341, 61, 1664, 340, 394, 395, 341, 1665, 394, 340, 690, 691, 341, 395, 690, 340, 1548, 1549, 341, 691, 1548, 340, 644, 645, 341, 1549, 644, 340, 200, 201, 341, 645, 200, 340, 460, 461, 341, 201, 460, 340, 956, 957, 341, 461, 956, 340, 488, 489, 341, 957, 1130, 826, 1146, 1147, 827, 1131, 826, 1130, 1438, 1439, 1131, 827, 1438, 1130, 1824, 1825, 1131, 1439, 1438, 1824, 1286, 1287, 1825, 1439, 1286, 1824, 1450, 1451, 1825, 1287, 1450, 1824, 1358, 1359, 1825, 1451, 1450, 1358, 680, 681, 1359, 1451, 680, 1358, 1650, 1651, 1359, 681, 680, 1650, 1512, 1513, 1651, 681, 1512, 1650, 338, 339, 1651, 1513, 1512, 338, 846, 847, 339, 1513, 846, 338, 590, 591, 339, 847, 846, 590, 150, 151, 591, 847, 846, 150, 1370, 1371, 151, 847, 826, 1438, 570, 571, 1439, 827, 1146, 826, 564, 565, 827, 1147, 1146, 564, 1446, 1447, 565, 1147, 1146, 1446, 1294, 1295, 1447, 1147, 1146, 1294, 822, 823, 1295, 1147, 822, 1294, 1434, 1435, 1295, 823, 1434, 1294, 1458, 1459, 1295, 1435, 1434, 1458, 674, 675, 1459, 1435, 1434, 674, 1290, 1291, 675, 1435, 1290, 674, 1516, 1517, 675, 1291, 1290, 1516, 1460, 1461, 1517, 1291, 1460, 1516, 848, 849, 1517, 1461, 1460, 848, 676, 677, 849, 1461, 676, 848, 1518, 1519, 849, 677, 1518, 848, 836, 837, 849, 1519, 836, 848, 580, 581, 849, 837, 836, 580, 144, 145, 581, 837, 822, 1434, 562, 563, 1435, 823, 1146, 822, 558, 559, 823, 1147, 1146, 558, 1440, 1441, 559, 1147, 1146, 1440, 1288, 1289, 1441, 1147, 1146, 1288, 556, 557, 1289, 1147, 556, 1288, 1814, 1815, 1289, 557, 1814, 1288, 1454, 1455, 1289, 1815, 1814, 1454, 688, 689, 1455, 1815, 1814, 688, 1348, 1349, 689, 1815, 1348, 688, 1510, 1511, 689, 1349, 1348, 1510, 410, 411, 1511, 1349, 410, 1510, 852, 853, 1511, 411, 410, 852, 820, 821, 853, 411, 820, 852, 454, 455, 853, 821, 454, 852, 858, 859, 853, 455, 1146, 556, 1812, 1813, 557, 1147, 1146, 1812, 1356, 1357, 1813, 1147, 1146, 1356, 1442, 1443, 1357, 1147, 1442, 1356, 418, 419, 1357, 1443, 1442, 418, 814, 815, 419, 1443, 1442, 814, 1300, 1301, 815, 1443, 1300, 814, 448, 449, 815, 1301, 1300, 448, 1456, 1457, 449, 1301, 1456, 448, 842, 843, 449, 1457, 1456, 842, 684, 685, 843, 1457, 684, 842, 1524, 1525, 843, 685, 1524, 842, 854, 855, 843, 1525, 854, 842, 598, 599, 843, 855, 854, 598, 158, 159, 599, 855, 854, 158, 1378, 1379, 159, 855, 1146, 1442, 574, 575, 1443, 1147, 1146, 574, 828, 829, 575, 1147, 1146, 828, 572, 573, 829, 1147, 1146, 572, 1432, 1433, 573, 1147, 1146, 1432, 1298, 1299, 1433, 1147, 1146, 1298, 1436, 1437, 1299, 1147, 1436, 1298, 1452, 1453, 1299, 1437, 1436, 1452, 686, 687, 1453, 1437, 1436, 686, 1296, 1297, 687, 1437, 1296, 686, 1520, 1521, 687, 1297, 1296, 1520, 1448, 1449, 1521, 1297, 1448, 1520, 832, 833, 1521, 1449, 1448, 832, 678, 679, 833, 1449, 678, 832, 1522, 1523, 833, 679, 1522, 832, 844, 845, 833, 1523, 1146, 1436, 568, 569, 1437, 1147, 1146, 568, 824, 825, 569, 1147, 1146, 824, 566, 567, 825, 1147, 1146, 566, 1444, 1445, 567, 1147, 1146, 1444, 1292, 1293, 1445, 1147, 1146, 1292, 1462, 1463, 1293, 1147, 1146, 1462, 1818, 1819, 1463, 1147, 1818, 1462, 682, 683, 1463, 1819, 1818, 682, 1354, 1355, 683, 1819, 1354, 682, 1514, 1515, 683, 1355, 1354, 1514, 414, 415, 1515, 1355, 414, 1514, 856, 857, 1515, 415, 414, 856, 810, 811, 857, 415, 810, 856, 458, 459, 857, 811, 458, 856, 834, 835, 857, 459, 834, 856, 600, 601, 857, 835, 834, 600, 1362, 1363, 601, 835, 1146, 1818, 560, 561, 1819, 1147, 1146, 560, 1816, 1817, 561, 1147, 1146, 1816, 1352, 1353, 1817, 1147, 1146, 1352, 408, 409, 1353, 1147, 1146, 408, 1820, 1821, 409, 1147, 1820, 408, 818, 819, 409, 1821, 1820, 818, 1350, 1351, 819, 1821, 1350, 818, 450, 451, 819, 1351, 1350, 450, 412, 413, 451, 1351, 412, 450, 850, 851, 451, 413, 412, 850, 816, 817, 851, 413, 816, 850, 452, 453, 851, 817, 452, 850, 838, 839, 851, 453, 838, 850, 594, 595, 851, 839, 838, 594, 582, 583, 595, 839, 838, 582, 1530, 1531, 583, 839, 838, 1530, 1264, 1265, 1531, 839, 838, 1264, 1782, 1783, 1265, 839, 838, 1782, 1676, 1677, 1783, 839, 838, 1676, 244, 245, 1677, 839, 838, 244, 1910, 1911, 245, 839, 1146, 1820, 554, 555, 1821, 1147, 1146, 554, 1810, 1811, 555, 1147, 1146, 1810, 1346, 1347, 1811, 1147, 1146, 1346, 416, 417, 1347, 1147, 1146, 416, 812, 813, 417, 1147, 1146, 812, 694, 695, 813, 1147, 694, 812, 1722, 1723, 813, 695, 1722, 812, 456, 457, 813, 1723, 1722, 456, 918, 919, 457, 1723, 918, 456, 840, 841, 457, 919, 918, 840, 98, 99, 841, 919, 98, 840, 112, 113, 841, 99, 112, 840, 290, 291, 841, 113, 290, 840, 264, 265, 841, 291, 264, 840, 1546, 1547, 841, 265, 264, 1546, 1464, 1465, 1547, 265, 264, 1464, 1802, 1803, 1465, 265, 264, 1802, 1696, 1697, 1803, 265, 290, 264, 1930, 1931, 265, 291, 1146, 694, 1804, 1805, 695, 1147, 1146, 1804, 692, 693, 1805, 1147, 1146, 692, 1724, 1725, 693, 1147, 1146, 1724, 916, 917, 1725, 1147, 1146, 916, 96, 97, 917, 1147, 1146, 96, 114, 115, 97, 1147, 1146, 114, 288, 289, 115, 1147, 1146, 288, 726, 727, 289, 1147, 726, 288, 1898, 1899, 289, 727, 1898, 288, 808, 809, 289, 1899, 808, 288, 1302, 1303, 289, 809, 1302, 288, 960, 961, 289, 1303, 960, 288, 490, 491, 289, 961, 490, 288, 880, 881, 289, 491, 880, 288, 788, 789, 289, 881, 1146, 726, 1080, 1081, 727, 1147, 1146, 1080, 1728, 1729, 1081, 1147, 1146, 1728, 646, 647, 1729, 1147, 1146, 646, 642, 643, 647, 1147, 1146, 642, 648, 649, 643, 1147, 1146, 648, 1730, 1731, 649, 1147, 1146, 1730, 1082, 1083, 1731, 1147, 1146, 1082, 724, 725, 1083, 1147, 1146, 724, 1900, 1901, 725, 1147, 1146, 1900, 806, 807, 1901, 1147, 1146, 806, 1304, 1305, 807, 1147, 1146, 1304, 962, 963, 1305, 1147, 1146, 962, 488, 489, 963, 1147, 1146, 488, 340, 341, 489, 1147, 1146, 340, 1646, 1647, 341, 1147, 1146, 1646, 1826, 1827, 1647, 1147, 234, 1930, 264, 265, 1931, 235, 1930, 234, 1902, 1903, 235, 1931, 1772, 1696, 1802, 1803, 1697, 1773, 1696, 1772, 1666, 1667, 1773, 1697, 1546, 1284, 1464, 1465, 1285, 1547, 1284, 1546, 1526, 1527, 1547, 1285, 1284, 1526, 1254, 1255, 1527, 1285, 246, 1910, 244, 245, 1911, 247, 1910, 246, 1912, 1913, 247, 1911, 1784, 1676, 1782, 1783, 1677, 1785, 1676, 1784, 1678, 1679, 1785, 1677, 1532, 1264, 1530, 1531, 1265, 1533, 1264, 1532, 1266, 1267, 1533, 1265, 1190, 834, 1362, 1363, 835, 1191, 834, 1190, 276, 277, 1191, 835, 276, 1190, 1104, 1105, 1191, 277, 276, 1104, 990, 991, 1105, 277, 990, 1104, 14, 15, 1105, 991, 990, 14, 1088, 1089, 15, 991, 1088, 14, 742, 743, 15, 1089, 1088, 742, 1314, 1315, 743, 1089, 1314, 742, 1752, 1753, 743, 1315, 1314, 1752, 1160, 1161, 1753, 1315, 1160, 1752, 256, 257, 1753, 1161, 1160, 256, 1914, 1915, 257, 1161, 1914, 256, 922, 923, 257, 1915, 1914, 922, 884, 885, 923, 1915, 884, 922, 1906, 1907, 923, 885, 1906, 922, 260, 261, 923, 1907, 1906, 260, 1168, 1169, 261, 1907, 1168, 260, 1766, 1767, 261, 1169, 1168, 1766, 1320, 1321, 1767, 1169, 1320, 1766, 746, 747, 1767, 1321, 1320, 746, 1100, 1101, 747, 1321, 1100, 746, 12, 13, 747, 1101, 1100, 12, 994, 995, 13, 1101, 994, 12, 1116, 1117, 13, 995, 994, 1116, 280, 281, 1117, 995, 280, 1116, 1180, 1181, 1117, 281, 280, 1180, 850, 851, 1181, 281, 850, 1180, 1374, 1375, 1181, 851, 1362, 142, 1586, 1587, 143, 1363, 142, 1362, 578, 579, 1363, 143, 1586, 142, 1214, 1215, 143, 1587, 1586, 1214, 1828, 1829, 1215, 1587, 1586, 1828, 1598, 1599, 1829, 1587, 1598, 1828, 766, 767, 1829, 1599, 1598, 766, 1934, 1935, 767, 1599, 1934, 766, 698, 699, 767, 1935, 1934, 698, 1876, 1877, 699, 1935, 1876, 698, 532, 533, 699, 1877, 1876, 532, 896, 897, 533, 1877, 896, 532, 1794, 1795, 533, 897, 896, 1794, 1688, 1689, 1795, 897, 1688, 1794, 1654, 1655, 1795, 1689, 1688, 1654, 1734, 1735, 1655, 1689, 1734, 1654, 1798, 1799, 1655, 1735, 1734, 1798, 1692, 1693, 1799, 1735, 1692, 1798, 546, 547, 1799, 1693, 1692, 546, 910, 911, 547, 1693, 910, 546, 702, 703, 547, 911, 910, 702, 1880, 1881, 703, 911, 1880, 702, 764, 765, 703, 1881, 1880, 764, 1932, 1933, 765, 1881, 1932, 764, 1840, 1841, 765, 1933, 1932, 1840, 1610, 1611, 1841, 1933, 1610, 1840, 1204, 1205, 1841, 1611, 1610, 1204, 1576, 1577, 1205, 1611, 1576, 1204, 154, 155, 1205, 1577, 1576, 154, 1374, 1375, 155, 1577, 1198, 846, 1370, 1371, 847, 1199, 846, 1198, 272, 273, 1199, 847, 272, 1198, 1126, 1127, 1199, 273, 272, 1126, 996, 997, 1127, 273, 996, 1126, 34, 35, 1127, 997, 996, 34, 1084, 1085, 35, 997, 1084, 34, 752, 753, 35, 1085, 1084, 752, 1310, 1311, 753, 1085, 1310, 752, 1748, 1749, 753, 1311, 1310, 1748, 1166, 1167, 1749, 1311, 1166, 1748, 238, 239, 1749, 1167, 1166, 238, 1922, 1923, 239, 1167, 1922, 238, 928, 929, 239, 1923, 1922, 928, 888, 889, 929, 1923, 888, 928, 242, 243, 929, 889, 888, 242, 1918, 1919, 243, 889, 1918, 242, 1174, 1175, 243, 1919, 1174, 242, 1762, 1763, 243, 1175, 1174, 1762, 1318, 1319, 1763, 1175, 1318, 1762, 756, 757, 1763, 1319, 1318, 756, 1096, 1097, 757, 1319, 1096, 756, 30, 31, 757, 1097, 1096, 30, 988, 989, 31, 1097, 988, 30, 1122, 1123, 31, 989, 988, 1122, 274, 275, 1123, 989, 274, 1122, 1186, 1187, 1123, 275, 274, 1186, 848, 849, 1187, 275, 848, 1186, 1372, 1373, 1187, 849, 1222, 1370, 150, 151, 1371, 1223, 1370, 1222, 1594, 1595, 1223, 1371, 1594, 1222, 1850, 1851, 1223, 1595, 1594, 1850, 1620, 1621, 1851, 1595, 1620, 1850, 786, 787, 1851, 1621, 1620, 786, 1954, 1955, 787, 1621, 1954, 786, 708, 709, 787, 1955, 1954, 708, 1886, 1887, 709, 1955, 1886, 708, 528, 529, 709, 1887, 1886, 528, 892, 893, 529, 1887, 892, 528, 1776, 1777, 529, 893, 892, 1776, 1670, 1671, 1777, 893, 1670, 1776, 1660, 1661, 1777, 1671, 1670, 1660, 1740, 1741, 1661, 1671, 1740, 1660, 1780, 1781, 1661, 1741, 1740, 1780, 1674, 1675, 1781, 1741, 1674, 1780, 542, 543, 1781, 1675, 1674, 542, 906, 907, 543, 1675, 906, 542, 712, 713, 543, 907, 906, 712, 1890, 1891, 713, 907, 1890, 712, 782, 783, 713, 1891, 1890, 782, 1950, 1951, 783, 1891, 1950, 782, 1846, 1847, 783, 1951, 1950, 1846, 1616, 1617, 1847, 1951, 1616, 1846, 1210, 1211, 1847, 1617, 1616, 1210, 1582, 1583, 1211, 1617, 1582, 1210, 152, 153, 1211, 1583, 1582, 152, 1372, 1373, 153, 1583, 1412, 150, 590, 591, 151, 1413, 150, 1412, 314, 315, 1413, 151, 314, 1412, 368, 369, 1413, 315, 368, 1412, 500, 501, 1413, 369, 368, 500, 1508, 1509, 501, 369, 1508, 500, 1394, 1395, 501, 1509, 1508, 1394, 662, 663, 1395, 1509, 662, 1394, 1072, 1073, 1395, 663, 662, 1072, 1698, 1699, 1073, 663, 1698, 1072, 1638, 1639, 1073, 1699, 1698, 1638, 1258, 1259, 1639, 1699, 1258, 1638, 1540, 1541, 1639, 1259, 1258, 1540, 520, 521, 1541, 1259, 520, 1540, 1624, 1625, 1541, 521, 520, 1624, 1262, 1263, 1625, 521, 1262, 1624, 1712, 1713, 1625, 1263, 1712, 1624, 1068, 1069, 1625, 1713, 1712, 1068, 666, 667, 1069, 1713, 666, 1068, 1392, 1393, 1069, 667, 666, 1392, 1504, 1505, 1393, 667, 1504, 1392, 496, 497, 1393, 1505, 1504, 496, 364, 365, 497, 1505, 364, 496, 1422, 1423, 497, 365, 364, 1422, 302, 303, 1423, 365, 302, 1422, 592, 593, 1423, 303, 302, 592, 152, 153, 593, 303, 344, 1138, 334, 335, 1139, 345, 1138, 344, 1648, 1649, 345, 1139, 1138, 1648, 1822, 1823, 1649, 1139, 1138, 1822, 1154, 1155, 1823, 1139, 967, 1021, 1027, 1026, 1020, 966, 1021, 967, 1135, 1134, 966, 1020, 1135, 967, 479, 478, 966, 1134, 1135, 479, 1141, 1140, 478, 1134, 1141, 479, 337, 336, 478, 1140, 337, 479, 1345, 1344, 478, 336, 1345, 479, 485, 484, 478, 1344, 54, 486, 480, 481, 487, 55, 486, 54, 58, 59, 55, 487, 938, 58, 54, 55, 59, 939, 58, 938, 942, 943, 939, 59, 216, 942, 938, 939, 943, 217, 942, 216, 220, 221, 217, 943, 1042, 220, 216, 217, 221, 1043, 220, 1042, 1046, 1047, 1043, 221, 1042, 1484, 1046, 1047, 1485, 1043, 1484, 1042, 1480, 1481, 1043, 1485, 1480, 1872, 1484, 1485, 1873, 1481, 1872, 1480, 1868, 1869, 1481, 1873, 1868, 1238, 1872, 1873, 1239, 1869, 1238, 1868, 1234, 1235, 1869, 1239, 1234, 1570, 1238, 1239, 1573, 1235, 1570, 1234, 1564, 1567, 1235, 1573, 1565, 398, 1571, 1572, 399, 1566, 398, 1565, 402, 403, 1566, 399, 402, 1565, 1559, 1560, 1566, 403, 1559, 1565, 1553, 1554, 1566, 1560, 1552, 1249, 1558, 1561, 1250, 1555, 1249, 1552, 1243, 1244, 1555, 1250, 1242, 1863, 1248, 1251, 1864, 1245, 1863, 1242, 1857, 1858, 1245, 1864, 1856, 1475, 1862, 1865, 1476, 1859, 1475, 1856, 1469, 1470, 1859, 1476, 1468, 1057, 1474, 1477, 1058, 1471, 1057, 1468, 1051, 1052, 1471, 1058, 1056, 205, 211, 212, 206, 1059, 205, 1056, 1050, 1053, 1059, 206, 210, 947, 953, 954, 948, 213, 947, 210, 204, 207, 213, 948, 952, 43, 49, 50, 44, 955, 43, 952, 946, 949, 955, 44, 48, 474, 470, 471, 475, 51, 474, 48, 466, 467, 51, 475, 466, 48, 42, 45, 51, 467, 1145, 1133, 1149, 1148, 1132, 1144, 1133, 1145, 1129, 1128, 1144, 1132, 1153, 1143, 1157, 1156, 1142, 1152, 1143, 1153, 1137, 1136, 1152, 1142, 1029, 381, 385, 384, 380, 1028, 381, 1029, 1023, 1022, 1028, 380, 1025, 477, 965, 964, 476, 1024, 477, 1025, 53, 52, 1024, 476, 53, 1025, 383, 382, 1024, 52, 53, 383, 937, 936, 382, 52, 937, 383, 629, 628, 382, 936, 937, 629, 215, 214, 628, 936, 215, 629, 193, 192, 628, 214, 215, 193, 1041, 1040, 192, 214, 1041, 193, 1329, 1328, 192, 1040, 1041, 1329, 1479, 1478, 1328, 1040, 1479, 1329, 129, 128, 1328, 1478, 1479, 129, 1867, 1866, 128, 1478, 1867, 129, 437, 436, 128, 1866, 1867, 437, 1233, 1232, 436, 1866, 1233, 437, 331, 330, 436, 1232, 1233, 331, 1563, 1562, 330, 1232, 1563, 331, 79, 78, 330, 1562, 1563, 79, 1551, 1550, 78, 1562, 1551, 79, 37, 36, 78, 1550, 1551, 37, 89, 88, 36, 1550, 1551, 89, 323, 322, 88, 1550, 1551, 323, 1241, 1240, 322, 1550, 1241, 323, 429, 428, 322, 1240, 1241, 429, 1855, 1854, 428, 1240, 1855, 429, 121, 120, 428, 1854, 1855, 121, 1467, 1466, 120, 1854, 1467, 121, 1337, 1336, 120, 1466, 1467, 1337, 1049, 1048, 1336, 1466, 1049, 1337, 185, 184, 1336, 1048, 1049, 185, 203, 202, 184, 1048, 203, 185, 637, 636, 184, 202, 203, 637, 945, 944, 636, 202, 945, 637, 375, 374, 636, 944, 945, 375, 41, 40, 374, 944, 41, 375, 1035, 1034, 374, 40, 41, 1035, 463, 462, 1034, 40, 1150, 1036, 1030, 1031, 1037, 1151, 1036, 1150, 464, 465, 1151, 1037, 464, 1150, 472, 473, 1151, 465, 385, 627, 631, 630, 626, 384, 627, 385, 381, 380, 384, 626, 92, 76, 86, 85, 75, 91, 76, 92, 82, 81, 91, 75, 82, 92, 39, 38, 91, 81, 326, 87, 320, 319, 84, 325, 87, 326, 93, 90, 325, 84, 432, 321, 426, 425, 318, 431, 321, 432, 327, 324, 431, 318, 124, 427, 118, 117, 424, 123, 427, 124, 433, 430, 123, 424, 1340, 119, 1334, 1333, 116, 1339, 119, 1340, 125, 122, 1339, 116, 182, 1341, 1335, 1332, 1338, 181, 1341, 182, 188, 187, 181, 1338, 634, 189, 183, 180, 186, 633, 189, 634, 640, 639, 633, 186, 372, 641, 635, 632, 638, 371, 641, 372, 378, 377, 371, 638, 1033, 379, 373, 370, 376, 1032, 379, 1033, 1039, 1038, 1032, 376, 631, 191, 195, 194, 190, 630, 191, 631, 627, 626, 630, 190, 195, 1327, 1331, 1330, 1326, 194, 1327, 195, 191, 190, 194, 1326, 131, 1327, 127, 126, 1326, 130, 1327, 131, 1331, 1330, 130, 1326, 439, 127, 435, 434, 126, 438, 127, 439, 131, 130, 438, 126, 333, 435, 329, 328, 434, 332, 435, 333, 439, 438, 332, 434, 83, 329, 77, 74, 328, 80, 329, 83, 333, 332, 80, 328]
                rel material:binding = </world/microwave/link_1/material0002>
                point3f[] points = [(0.30750072, -0.072069645, 0.16268258), (0.30750072, -0.072069645, 0.16268258), (0.30750072, 0.014371669, 0.16268258), (0.30750072, 0.014371669, 0.16268258), (0.30750072, -0.09272515, 0.16268258), (0.30750072, -0.09272515, 0.16268258), (0.30750072, 0.03502759, 0.16268258), (0.30750072, 0.03502759, 0.16268258), (0.30750072, -0.018521238, 0.16268258), (0.30750072, -0.018521238, 0.16268258), (0.30750072, -0.03917674, 0.16268258), (0.30750072, -0.03917674, 0.16268258), (0.2500523, 0.03239792, 0.16268258), (0.2500523, 0.03239792, 0.16268258), (0.2500523, 0.017001336, 0.16268258), (0.2500523, 0.017001336, 0.16268258), (0.2500523, -0.03654749, 0.16268258), (0.2500523, -0.03654749, 0.16268258), (0.2500523, 0.0056237145, 0.16268258), (0.2500523, 0.0056237145, 0.16268258), (0.2500523, -0.063321695, 0.16268258), (0.2500523, -0.063321695, 0.16268258), (0.2500523, -0.02115049, 0.16268258), (0.2500523, -0.02115049, 0.16268258), (0.2500523, -0.07469932, 0.16268258), (0.2500523, -0.07469932, 0.16268258), (0.2500523, -0.0900959, 0.16268258), (0.2500523, -0.0900959, 0.16268258), (0.2500523, -0.047924694, 0.16268258), (0.2500523, -0.047924694, 0.16268258), (0.2500523, -0.10147352, 0.16268258), (0.2500523, -0.10147352, 0.16268258), (0.2500523, -0.009773283, 0.16268258), (0.2500523, -0.009773283, 0.16268258), (0.2500523, -0.116870105, 0.16268258), (0.2500523, -0.116870105, 0.16268258), (-0.31029594, -0.19320454, -0.1573176), (-0.31029594, -0.19320454, -0.1573176), (-0.31029594, -0.19320454, -0.1573176), (-0.31029594, -0.19320454, -0.1573176), (0.34374914, 0.19877043, -0.1573176), (0.34374914, 0.19877043, -0.1573176), (0.34374914, 0.19877043, -0.1573176), (0.34374914, 0.19877043, -0.1573176), (0.34374914, 0.19877043, -0.1573176), (0.34374914, 0.19877043, -0.1573176), (0.34374914, 0.19877043, 0.16268258), (0.34374914, 0.19877043, 0.16268258), (0.34374914, 0.19877043, 0.16268258), (0.34374914, 0.19877043, 0.16268258), (0.34374914, 0.19877043, 0.16268258), (0.34374914, 0.19877043, 0.16268258), (0.34374914, -0.20049998, -0.1573176), (0.34374914, -0.20049998, -0.1573176), (0.34374914, -0.20049998, -0.1573176), (0.34374914, -0.20049998, -0.1573176), (0.34374914, -0.20049998, 0.16268258), (0.34374914, -0.20049998, 0.16268258), (0.34374914, -0.20049998, 0.16268258), (0.34374914, -0.20049998, 0.16268258), (0.3046693, 0.14185612, 0.16268258), (0.3046693, 0.14185612, 0.16268258), (0.31198055, -0.021457465, 0.16268258), (0.31198055, -0.021457465, 0.16268258), (0.31198055, 0.017308312, 0.16268258), (0.31198055, 0.017308312, 0.16268258), (0.31198055, -0.07500629, 0.16268258), (0.31198055, -0.07500629, 0.16268258), (0.31198055, -0.036240514, 0.16268258), (0.31198055, -0.036240514, 0.16268258), (0.31198055, 0.032090943, 0.16268258), (0.31198055, 0.032090943, 0.16268258), (0.31198055, -0.08978892, 0.16268258), (0.31198055, -0.08978892, 0.16268258), (-0.31026182, -0.19358514, 0.13768242), (-0.31026182, -0.19358514, 0.13768242), (-0.31026182, -0.19358514, 0.13768242), (-0.31026182, -0.19358514, 0.13768242), (-0.31026182, -0.19358514, -0.1573176), (-0.31026182, -0.19358514, -0.1573176), (-0.31026182, -0.19358514, -0.1573176), (-0.31026182, -0.19358514, -0.1573176), (-0.31026182, -0.19358514, -0.1573176), (-0.31026182, -0.19358514, -0.1573176), (-0.31026182, 0.19185601, 0.13768242), (-0.31026182, 0.19185601, 0.13768242), (-0.31026182, 0.19185601, 0.13768242), (-0.31026182, 0.19185601, 0.13768242), (-0.31026182, 0.19185601, -0.1573176), (-0.31026182, 0.19185601, -0.1573176), (-0.31026182, 0.19185601, -0.1573176), (-0.31026182, 0.19185601, -0.1573176), (-0.31026182, 0.19185601, -0.1573176), (-0.31026182, 0.19185601, -0.1573176), (0.3017751, 0.11206416, 0.16268258), (0.3017751, 0.11206416, 0.16268258), (0.23051031, 0.087676704, 0.16268258), (0.23051031, 0.087676704, 0.16268258), (0.23051031, 0.068819374, 0.16268258), (0.23051031, 0.068819374, 0.16268258), (0.31452662, -0.026170654, 0.16268258), (0.31452662, -0.026170654, 0.16268258), (0.31452662, 0.022021085, 0.16268258), (0.31452662, 0.022021085, 0.16268258), (0.31452662, -0.085075736, 0.16268258), (0.31452662, -0.085075736, 0.16268258), (0.31452662, 0.027377756, 0.16268258), (0.31452662, 0.027377756, 0.16268258), (0.31452662, -0.07971907, 0.16268258), (0.31452662, -0.07971907, 0.16268258), (0.31452662, -0.031527326, 0.16268258), (0.31452662, -0.031527326, 0.16268258), (0.23313624, 0.067732066, 0.16268258), (0.23313624, 0.067732066, 0.16268258), (0.23313624, 0.08876401, 0.16268258), (0.23313624, 0.08876401, 0.16268258), (-0.3086837, 0.19559836, 0.13768242), (-0.3086837, 0.19559836, 0.13768242), (-0.3086837, 0.19559836, 0.13768242), (-0.3086837, 0.19559836, 0.13768242), (-0.3086837, 0.19559836, -0.1573176), (-0.3086837, 0.19559836, -0.1573176), (-0.3086837, 0.19559836, -0.1573176), (-0.3086837, 0.19559836, -0.1573176), (-0.3086837, 0.19559836, -0.1573176), (-0.3086837, 0.19559836, -0.1573176), (-0.3086837, -0.1973279, 0.13768242), (-0.3086837, -0.1973279, 0.13768242), (-0.3086837, -0.1973279, -0.1573176), (-0.3086837, -0.1973279, -0.1573176), (-0.3086837, -0.1973279, -0.1573176), (-0.3086837, -0.1973279, -0.1573176), (0.23715603, -0.012370092, 0.16268258), (0.23715603, -0.012370092, 0.16268258), (0.23715603, 0.008220523, 0.16268258), (0.23715603, 0.008220523, 0.16268258), (0.24156557, 0.005263913, 0.16268258), (0.24156557, 0.005263913, 0.16268258), (0.24156557, -0.009413483, 0.16268258), (0.24156557, -0.009413483, 0.16268258), (0.281657, -0.017961778, 0.16268258), (0.281657, -0.017961778, 0.16268258), (0.281657, 0.013812209, 0.16268258), (0.281657, 0.013812209, 0.16268258), (0.281657, -0.093284614, 0.16268258), (0.281657, -0.093284614, 0.16268258), (0.281657, -0.044735983, 0.16268258), (0.281657, -0.044735983, 0.16268258), (0.281657, -0.012961996, 0.16268258), (0.281657, -0.012961996, 0.16268258), (0.281657, -0.12005882, 0.16268258), (0.281657, -0.12005882, 0.16268258), (0.281657, -0.09828481, 0.16268258), (0.281657, -0.09828481, 0.16268258), (0.281657, 0.035586633, 0.16268258), (0.281657, 0.035586633, 0.16268258), (0.281657, -0.07151019, 0.16268258), (0.281657, -0.07151019, 0.16268258), (0.281657, -0.0397362, 0.16268258), (0.281657, -0.0397362, 0.16268258), (0.281657, 0.0088124275, 0.16268258), (0.281657, 0.0088124275, 0.16268258), (0.281657, -0.06651041, 0.16268258), (0.281657, -0.06651041, 0.16268258), (0.313416, 0.056624398, 0.16268258), (0.313416, 0.056624398, 0.16268258), (0.313416, 0.003075573, 0.16268258), (0.313416, 0.003075573, 0.16268258), (0.313416, -0.104021244, 0.16268258), (0.313416, -0.104021244, 0.16268258), (0.313416, -0.06077355, 0.16268258), (0.313416, -0.06077355, 0.16268258), (0.313416, 0.04632327, 0.16268258), (0.313416, 0.04632327, 0.16268258), (0.313416, -0.11432238, 0.16268258), (0.313416, -0.11432238, 0.16268258), (0.313416, -0.050472837, 0.16268258), (0.313416, -0.050472837, 0.16268258), (0.313416, -0.007225142, 0.16268258), (0.313416, -0.007225142, 0.16268258), (-0.30675948, 0.19752257, 0.13768242), (-0.30675948, 0.19752257, 0.13768242), (-0.30675948, 0.19752257, 0.13768242), (-0.30675948, 0.19752257, 0.13768242), (-0.30675948, 0.19752257, -0.1573176), (-0.30675948, 0.19752257, -0.1573176), (-0.30675948, 0.19752257, -0.1573176), (-0.30675948, 0.19752257, -0.1573176), (-0.30675948, 0.19752257, -0.1573176), (-0.30675948, 0.19752257, -0.1573176), (-0.30675948, -0.19925211, 0.13768242), (-0.30675948, -0.19925211, 0.13768242), (-0.30675948, -0.19925211, -0.1573176), (-0.30675948, -0.19925211, -0.1573176), (-0.30675948, -0.19925211, -0.1573176), (-0.30675948, -0.19925211, -0.1573176), (0.296173, -0.050429992, 0.16268258), (0.296173, -0.050429992, 0.16268258), (0.296173, -0.060816396, 0.16268258), (0.296173, -0.060816396, 0.16268258), (0.30000645, 0.1482402, 0.16268258), (0.30000645, 0.1482402, 0.16268258), (0.3461675, 0.19752257, -0.1573176), (0.3461675, 0.19752257, -0.1573176), (0.3461675, 0.19752257, -0.1573176), (0.3461675, 0.19752257, -0.1573176), (0.3461675, 0.19752257, -0.1573176), (0.3461675, 0.19752257, -0.1573176), (0.3461675, 0.19752257, 0.16268258), (0.3461675, 0.19752257, 0.16268258), (0.3461675, 0.19752257, 0.16268258), (0.3461675, 0.19752257, 0.16268258), (0.3461675, 0.19752257, 0.16268258), (0.3461675, 0.19752257, 0.16268258), (0.3461675, -0.19925253, -0.1573176), (0.3461675, -0.19925253, -0.1573176), (0.3461675, -0.19925253, -0.1573176), (0.3461675, -0.19925253, -0.1573176), (0.3461675, -0.19925253, 0.16268258), (0.3461675, -0.19925253, 0.16268258), (0.3461675, -0.19925253, 0.16268258), (0.3461675, -0.19925253, 0.16268258), (0.31354704, -0.0772042, 0.16268258), (0.31354704, -0.0772042, 0.16268258), (0.31354704, 0.01950622, 0.16268258), (0.31354704, 0.01950622, 0.16268258), (0.31354704, -0.0875906, 0.16268258), (0.31354704, -0.0875906, 0.16268258), (0.31354704, 0.029893037, 0.16268258), (0.31354704, 0.029893037, 0.16268258), (0.31354704, -0.023655789, 0.16268258), (0.31354704, -0.023655789, 0.16268258), (0.31354704, -0.03404219, 0.16268258), (0.31354704, -0.03404219, 0.16268258), (0.24704744, 0.08913504, 0.16268258), (0.24704744, 0.08913504, 0.16268258), (0.24704744, -0.003472394, 0.16268258), (0.24704744, -0.003472394, 0.16268258), (0.24704744, -0.11056922, 0.16268258), (0.24704744, -0.11056922, 0.16268258), (0.24704744, -0.00067717506, 0.16268258), (0.24704744, -0.00067717506, 0.16268258), (0.24704744, -0.107774, 0.16268258), (0.24704744, -0.107774, 0.16268258), (0.24704744, 0.04058683, 0.16268258), (0.24704744, 0.04058683, 0.16268258), (0.24704744, 0.062360838, 0.16268258), (0.24704744, 0.062360838, 0.16268258), (0.24704744, -0.030246599, 0.16268258), (0.24704744, -0.030246599, 0.16268258), (0.24704744, -0.02745138, 0.16268258), (0.24704744, -0.02745138, 0.16268258), (0.24704744, -0.054225586, 0.16268258), (0.24704744, -0.054225586, 0.16268258), (0.24704744, -0.057020806, 0.16268258), (0.24704744, -0.057020806, 0.16268258), (0.24704744, 0.02330181, 0.16268258), (0.24704744, 0.02330181, 0.16268258), (0.24704744, -0.08379501, 0.16268258), (0.24704744, -0.08379501, 0.16268258), (0.24704744, 0.02609703, 0.16268258), (0.24704744, 0.02609703, 0.16268258), (0.24704744, -0.08099979, 0.16268258), (0.24704744, -0.08099979, 0.16268258), (0.24704744, 0.067361034, 0.16268258), (0.24704744, 0.067361034, 0.16268258), (0.29970405, 0.110474795, 0.16268258), (0.29970405, 0.110474795, 0.16268258), (0.23718806, -0.072069645, 0.16268258), (0.23718806, -0.072069645, 0.16268258), (0.23718806, -0.065950945, 0.16268258), (0.23718806, -0.065950945, 0.16268258), (0.23718806, -0.11949977, 0.16268258), (0.23718806, -0.11949977, 0.16268258), (0.23718806, -0.09884385, 0.16268258), (0.23718806, -0.09884385, 0.16268258), (0.23718806, 0.014371669, 0.16268258), (0.23718806, 0.014371669, 0.16268258), (0.23718806, -0.09272515, 0.16268258), (0.23718806, -0.09272515, 0.16268258), (0.23718806, 0.03502759, 0.16268258), (0.23718806, 0.03502759, 0.16268258), (0.23718806, -0.018521238, 0.16268258), (0.23718806, -0.018521238, 0.16268258), (0.23718806, -0.045295443, 0.16268258), (0.23718806, -0.045295443, 0.16268258), (0.23718806, -0.03917674, 0.16268258), (0.23718806, -0.03917674, 0.16268258), (0.23595393, 0.08913504, 0.16268258), (0.23595393, 0.08913504, 0.16268258), (0.23595393, 0.067361034, 0.16268258), (0.23595393, 0.067361034, 0.16268258), (0.29853064, 0.1098962, 0.16268258), (0.29853064, 0.1098962, 0.16268258), (0.28447467, -0.03936517, 0.16268258), (0.28447467, -0.03936517, 0.16268258), (0.28447467, 0.0352156, 0.16268258), (0.28447467, 0.0352156, 0.16268258), (0.28447467, -0.07188122, 0.16268258), (0.28447467, -0.07188122, 0.16268258), (0.28447467, -0.06613938, 0.16268258), (0.28447467, -0.06613938, 0.16268258), (0.28447467, -0.098655425, 0.16268258), (0.28447467, -0.098655425, 0.16268258), (0.28447467, 0.008441395, 0.16268258), (0.28447467, 0.008441395, 0.16268258), (0.28447467, 0.014183241, 0.16268258), (0.28447467, 0.014183241, 0.16268258), (0.28447467, -0.092913575, 0.16268258), (0.28447467, -0.092913575, 0.16268258), (0.28447467, -0.01833281, 0.16268258), (0.28447467, -0.01833281, 0.16268258), (0.28447467, -0.012590964, 0.16268258), (0.28447467, -0.012590964, 0.16268258), (0.28447467, -0.11968778, 0.16268258), (0.28447467, -0.11968778, 0.16268258), (0.28447467, -0.045107014, 0.16268258), (0.28447467, -0.045107014, 0.16268258), (-0.30993155, 0.19318041, 0.13768242), (-0.30993155, 0.19318041, 0.13768242), (-0.30993155, 0.19318041, 0.13768242), (-0.30993155, 0.19318041, 0.13768242), (-0.30993155, 0.19318041, -0.1573176), (-0.30993155, 0.19318041, -0.1573176), (-0.30993155, 0.19318041, -0.1573176), (-0.30993155, 0.19318041, -0.1573176), (-0.30993155, 0.19318041, -0.1573176), (-0.30993155, 0.19318041, -0.1573176), (-0.30993155, -0.19490954, 0.13768242), (-0.30993155, -0.19490954, 0.13768242), (-0.30993155, -0.19490954, -0.1573176), (-0.30993155, -0.19490954, -0.1573176), (-0.30993155, -0.19490954, -0.1573176), (-0.30993155, -0.19490954, -0.1573176), (0.33970398, -0.20086478, 0.16268258), (0.33970398, -0.20086478, 0.16268258), (0.33970398, -0.20086478, 0.16268258), (0.33970398, -0.20086478, 0.16268258), (0.33970398, -0.1514206, 0.16268258), (0.33970398, -0.1514206, 0.16268258), (0.33970398, 0.15969104, 0.16268258), (0.33970398, 0.15969104, 0.16268258), (0.33970398, 0.19913523, 0.16268258), (0.33970398, 0.19913523, 0.16268258), (0.33970398, -0.18142094, 0.16268258), (0.33970398, -0.18142094, 0.16268258), (0.2871006, 0.015270963, 0.16268258), (0.2871006, 0.015270963, 0.16268258), (0.2871006, -0.09182586, 0.16268258), (0.2871006, -0.09182586, 0.16268258), (0.2871006, -0.019420533, 0.16268258), (0.2871006, -0.019420533, 0.16268258), (0.2871006, -0.011503241, 0.16268258), (0.2871006, -0.011503241, 0.16268258), (0.2871006, -0.046194736, 0.16268258), (0.2871006, -0.046194736, 0.16268258), (0.2871006, -0.038277447, 0.16268258), (0.2871006, -0.038277447, 0.16268258), (0.2871006, 0.034127876, 0.16268258), (0.2871006, 0.034127876, 0.16268258), (0.2871006, -0.072968945, 0.16268258), (0.2871006, -0.072968945, 0.16268258), (0.2871006, -0.06505165, 0.16268258), (0.2871006, -0.06505165, 0.16268258), (0.2871006, -0.09974315, 0.16268258), (0.2871006, -0.09974315, 0.16268258), (0.2871006, 0.0073536723, 0.16268258), (0.2871006, 0.0073536723, 0.16268258), (0.2871006, -0.11860048, 0.16268258), (0.2871006, -0.11860048, 0.16268258), (-0.3043411, 0.19877043, 0.13768242), (-0.3043411, 0.19877043, 0.13768242), (-0.3043411, 0.19877043, 0.13768242), (-0.3043411, 0.19877043, 0.13768242), (-0.3043411, 0.19877043, -0.1573176), (-0.3043411, 0.19877043, -0.1573176), (-0.3043411, 0.19877043, -0.1573176), (-0.3043411, 0.19877043, -0.1573176), (-0.3043411, 0.19877043, -0.1573176), (-0.3043411, 0.19877043, -0.1573176), (-0.3043411, -0.20049956, 0.13768242), (-0.3043411, -0.20049956, 0.13768242), (-0.3043411, -0.20049956, -0.1573176), (-0.3043411, -0.20049956, -0.1573176), (-0.3043411, -0.20049956, -0.1573176), (-0.3043411, -0.20049956, -0.1573176), (0.29519343, -0.052944858, 0.16268258), (0.29519343, -0.052944858, 0.16268258), (0.29519343, -0.05830153, 0.16268258), (0.29519343, -0.05830153, 0.16268258), (0.2977395, -0.04823167, 0.16268258), (0.2977395, -0.04823167, 0.16268258), (0.2977395, -0.063014716, 0.16268258), (0.2977395, -0.063014716, 0.16268258), (0.3038091, 0.14443754, 0.16268258), (0.3038091, 0.14443754, 0.16268258), (0.34970394, -0.19320412, 0.16268258), (0.34970394, -0.19320412, 0.16268258), (0.34970394, -0.19320412, 0.16268258), (0.34970394, -0.19320412, 0.16268258), (0.34970394, 0.16913529, 0.16268258), (0.34970394, 0.16913529, 0.16268258), (0.34970394, 0.16913529, 0.16268258), (0.34970394, 0.16913529, 0.16268258), (0.29600912, 0.10922068, 0.16268258), (0.29600912, 0.10922068, 0.16268258), (0.30079135, 0.111201465, 0.16268258), (0.30079135, 0.111201465, 0.16268258), (0.22753, 0.03203812, 0.16268258), (0.22753, 0.03203812, 0.16268258), (0.22753, -0.06296189, 0.16268258), (0.22753, -0.06296189, 0.16268258), (0.22753, 0.044134926, 0.16268258), (0.22753, 0.044134926, 0.16268258), (0.22753, 0.017360723, 0.16268258), (0.22753, 0.017360723, 0.16268258), (0.22753, 0.058812324, 0.16268258), (0.22753, 0.058812324, 0.16268258), (0.22753, -0.048284497, 0.16268258), (0.22753, -0.048284497, 0.16268258), (0.24310336, 0.003075573, 0.16268258), (0.24310336, 0.003075573, 0.16268258), (0.24310336, -0.007225142, 0.16268258), (0.24310336, -0.007225142, 0.16268258), (-0.3094012, 0.19443785, 0.13768242), (-0.3094012, 0.19443785, 0.13768242), (-0.3094012, 0.19443785, 0.13768242), (-0.3094012, 0.19443785, 0.13768242), (-0.3094012, 0.19443785, -0.1573176), (-0.3094012, 0.19443785, -0.1573176), (-0.3094012, 0.19443785, -0.1573176), (-0.3094012, 0.19443785, -0.1573176), (-0.3094012, 0.19443785, -0.1573176), (-0.3094012, 0.19443785, -0.1573176), (-0.3094012, -0.19616698, 0.13768242), (-0.3094012, -0.19616698, 0.13768242), (-0.3094012, -0.19616698, -0.1573176), (-0.3094012, -0.19616698, -0.1573176), (-0.3094012, -0.19616698, -0.1573176), (-0.3094012, -0.19616698, -0.1573176), (0.30221933, -0.065950945, 0.16268258), (0.30221933, -0.065950945, 0.16268258), (0.30221933, -0.045295443, 0.16268258), (0.30221933, -0.045295443, 0.16268258), (0.29979682, -0.06476173, 0.16268258), (0.29979682, -0.06476173, 0.16268258), (0.29979682, -0.04648466, 0.16268258), (0.29979682, -0.04648466, 0.16268258), (0.23193954, -0.045327887, 0.16268258), (0.23193954, -0.045327887, 0.16268258), (0.23193954, 0.03499473, 0.16268258), (0.23193954, 0.03499473, 0.16268258), (0.23193954, 0.04117832, 0.16268258), (0.23193954, 0.04117832, 0.16268258), (0.23193954, -0.065918505, 0.16268258), (0.23193954, -0.065918505, 0.16268258), (0.23193954, 0.061769348, 0.16268258), (0.23193954, 0.061769348, 0.16268258), (0.23193954, 0.014404113, 0.16268258), (0.23193954, 0.014404113, 0.16268258), (0.298749, 0.14877054, 0.16268258), (0.298749, 0.14877054, 0.16268258), (0.34242472, 0.1991007, -0.1573176), (0.34242472, 0.1991007, -0.1573176), (0.34242472, 0.1991007, -0.1573176), (0.34242472, 0.1991007, -0.1573176), (0.34242472, 0.1991007, -0.1573176), (0.34242472, 0.1991007, -0.1573176), (0.34242472, 0.1991007, 0.16268258), (0.34242472, 0.1991007, 0.16268258), (0.34242472, 0.1991007, 0.16268258), (0.34242472, 0.1991007, 0.16268258), (0.34242472, 0.19911776, 0.13768242), (0.34242472, 0.19911776, 0.13768242), (0.34242472, 0.19911776, 0.13768242), (0.34242472, 0.19911776, 0.13768242), (0.34242472, -0.20083025, -0.1573176), (0.34242472, -0.20083025, -0.1573176), (0.34242472, -0.20083025, -0.1573176), (0.34242472, -0.20083025, -0.1573176), (0.34242472, -0.20083025, -0.1573176), (0.34242472, -0.20083025, -0.1573176), (0.34242472, -0.20083025, 0.16268258), (0.34242472, -0.20083025, 0.16268258), (0.34242472, -0.20083025, 0.16268258), (0.34242472, -0.20083025, 0.16268258), (0.34242472, -0.20083025, 0.16268258), (0.34242472, -0.20083025, 0.16268258), (0.24198319, 0.14910081, 0.16268258), (0.24198319, 0.14910081, 0.16268258), (0.24198319, 0.10916953, 0.16268258), (0.24198319, 0.10916953, 0.16268258), (0.29986504, 0.015610799, 0.16268258), (0.29986504, 0.015610799, 0.16268258), (0.29986504, -0.09148602, 0.16268258), (0.29986504, -0.09148602, 0.16268258), (0.29986504, -0.100083396, 0.16268258), (0.29986504, -0.100083396, 0.16268258), (0.29986504, -0.011163406, 0.16268258), (0.29986504, -0.011163406, 0.16268258), (0.29986504, -0.11826023, 0.16268258), (0.29986504, -0.11826023, 0.16268258), (0.29986504, -0.07330878, 0.16268258), (0.29986504, -0.07330878, 0.16268258), (0.29986504, 0.03378804, 0.16268258), (0.29986504, 0.03378804, 0.16268258), (0.29986504, -0.03793761, 0.16268258), (0.29986504, -0.03793761, 0.16268258), (0.29986504, 0.007013837, 0.16268258), (0.29986504, 0.007013837, 0.16268258), (0.29986504, -0.019760368, 0.16268258), (0.29986504, -0.019760368, 0.16268258), (0.29254422, -0.055623196, 0.16268258), (0.29254422, -0.055623196, 0.16268258), (0.29254422, 0.02469942, 0.16268258), (0.29254422, 0.02469942, 0.16268258), (0.29254422, -0.0823974, 0.16268258), (0.29254422, -0.0823974, 0.16268258), (0.29254422, -0.0020747846, 0.16268258), (0.29254422, -0.0020747846, 0.16268258), (0.29254422, -0.10917161, 0.16268258), (0.29254422, -0.10917161, 0.16268258), (0.29254422, -0.028848989, 0.16268258), (0.29254422, -0.028848989, 0.16268258), (0.31115237, 0.08594633, 0.16268258), (0.31115237, 0.08594633, 0.16268258), (0.31115237, 0.07054975, 0.16268258), (0.31115237, 0.07054975, 0.16268258), (0.2711408, -0.1119897, 0.16268258), (0.2711408, -0.1119897, 0.16268258), (0.2711408, -0.052805513, 0.16268258), (0.2711408, -0.052805513, 0.16268258), (0.2711408, 0.02188174, 0.16268258), (0.2711408, 0.02188174, 0.16268258), (0.2711408, -0.08521508, 0.16268258), (0.2711408, -0.08521508, 0.16268258), (0.2711408, -0.07957972, 0.16268258), (0.2711408, -0.07957972, 0.16268258), (0.2711408, -0.004892465, 0.16268258), (0.2711408, -0.004892465, 0.16268258), (0.2711408, 0.000742896, 0.16268258), (0.2711408, 0.000742896, 0.16268258), (0.2711408, -0.10635392, 0.16268258), (0.2711408, -0.10635392, 0.16268258), (0.2711408, -0.03166667, 0.16268258), (0.2711408, -0.03166667, 0.16268258), (0.2711408, 0.027517516, 0.16268258), (0.2711408, 0.027517516, 0.16268258), (0.2711408, -0.02603131, 0.16268258), (0.2711408, -0.02603131, 0.16268258), (0.2711408, -0.058440875, 0.16268258), (0.2711408, -0.058440875, 0.16268258), (0.29486024, -0.055623196, 0.16268258), (0.29486024, -0.055623196, 0.16268258), (0.224704, 0.051473625, 0.16268258), (0.224704, 0.051473625, 0.16268258), (0.224704, -0.055623196, 0.16268258), (0.224704, -0.055623196, 0.16268258), (0.224704, -0.081142046, 0.16268258), (0.224704, -0.081142046, 0.16268258), (0.224704, 0.02469942, 0.16268258), (0.224704, 0.02469942, 0.16268258), (0.224704, -0.08365275, 0.16268258), (0.224704, -0.08365275, 0.16268258), (0.224704, -0.10791625, 0.16268258), (0.224704, -0.10791625, 0.16268258), (0.224704, -0.0008194318, 0.16268258), (0.224704, -0.0008194318, 0.16268258), (0.224704, -0.0033301373, 0.16268258), (0.224704, -0.0033301373, 0.16268258), (0.224704, -0.110426955, 0.16268258), (0.224704, -0.110426955, 0.16268258), (0.224704, -0.027593637, 0.16268258), (0.224704, -0.027593637, 0.16268258), (0.224704, -0.030104343, 0.16268258), (0.224704, -0.030104343, 0.16268258), (0.30486023, -0.017961778, 0.16268258), (0.30486023, -0.017961778, 0.16268258), (0.30486023, 0.013812209, 0.16268258), (0.30486023, 0.013812209, 0.16268258), (0.30486023, -0.093284614, 0.16268258), (0.30486023, -0.093284614, 0.16268258), (0.30486023, 0.04058683, 0.16268258), (0.30486023, 0.04058683, 0.16268258), (0.30486023, 0.062360838, 0.16268258), (0.30486023, 0.062360838, 0.16268258), (0.30486023, -0.044735983, 0.16268258), (0.30486023, -0.044735983, 0.16268258), (0.30486023, -0.012961996, 0.16268258), (0.30486023, -0.012961996, 0.16268258), (0.30486023, -0.12005882, 0.16268258), (0.30486023, -0.12005882, 0.16268258), (0.30486023, -0.09828481, 0.16268258), (0.30486023, -0.09828481, 0.16268258), (0.30486023, 0.035586633, 0.16268258), (0.30486023, 0.035586633, 0.16268258), (0.30486023, -0.07151019, 0.16268258), (0.30486023, -0.07151019, 0.16268258), (0.30486023, -0.0397362, 0.16268258), (0.30486023, -0.0397362, 0.16268258), (0.30486023, 0.0088124275, 0.16268258), (0.30486023, 0.0088124275, 0.16268258), (0.30486023, -0.06651041, 0.16268258), (0.30486023, -0.06651041, 0.16268258), (0.3148602, 0.02469942, 0.16268258), (0.3148602, 0.02469942, 0.16268258), (0.3148602, -0.0823974, 0.16268258), (0.3148602, -0.0823974, 0.16268258), (0.3148602, -0.028848989, 0.16268258), (0.3148602, -0.028848989, 0.16268258), (0.30985543, 0.060562246, 0.16268258), (0.30985543, 0.060562246, 0.16268258), (0.30985543, -0.04653457, 0.16268258), (0.30985543, -0.04653457, 0.16268258), (0.30985543, 0.04238542, 0.16268258), (0.30985543, 0.04238542, 0.16268258), (0.30985543, -0.100083396, 0.16268258), (0.30985543, -0.100083396, 0.16268258), (0.30985543, -0.011163406, 0.16268258), (0.30985543, -0.011163406, 0.16268258), (0.30985543, -0.11826023, 0.16268258), (0.30985543, -0.11826023, 0.16268258), (0.30985543, 0.007013837, 0.16268258), (0.30985543, 0.007013837, 0.16268258), (0.30985543, -0.06471182, 0.16268258), (0.30985543, -0.06471182, 0.16268258), (-0.30559856, -0.19996963, 0.13768242), (-0.30559856, -0.19996963, 0.13768242), (-0.30559856, -0.19996963, -0.1573176), (-0.30559856, -0.19996963, -0.1573176), (-0.30559856, -0.19996963, -0.1573176), (-0.30559856, -0.19996963, -0.1573176), (-0.30559856, 0.19824009, 0.13768242), (-0.30559856, 0.19824009, 0.13768242), (-0.30559856, 0.19824009, 0.13768242), (-0.30559856, 0.19824009, 0.13768242), (-0.30559856, 0.19824009, -0.1573176), (-0.30559856, 0.19824009, -0.1573176), (-0.30559856, 0.19824009, -0.1573176), (-0.30559856, 0.19824009, -0.1573176), (-0.30559856, 0.19824009, -0.1573176), (-0.30559856, 0.19824009, -0.1573176), (0.23470397, 0.11679606, 0.16268258), (0.23470397, 0.11679606, 0.16268258), (0.30116737, 0.14752267, 0.16268258), (0.30116737, 0.14752267, 0.16268258), (0.23473808, 0.11641422, 0.16268258), (0.23473808, 0.11641422, 0.16268258), (0.23473808, 0.14185612, 0.16268258), (0.23473808, 0.14185612, 0.16268258), (0.29108545, -0.05017959, 0.16268258), (0.29108545, -0.05017959, 0.16268258), (0.29108545, 0.019255815, 0.16268258), (0.29108545, 0.019255815, 0.16268258), (0.29108545, -0.087841004, 0.16268258), (0.29108545, -0.087841004, 0.16268258), (0.29108545, 0.030143026, 0.16268258), (0.29108545, 0.030143026, 0.16268258), (0.29108545, -0.07695379, 0.16268258), (0.29108545, -0.07695379, 0.16268258), (0.29108545, -0.00751839, 0.16268258), (0.29108545, -0.00751839, 0.16268258), (0.29108545, -0.11461521, 0.16268258), (0.29108545, -0.11461521, 0.16268258), (0.29108545, 0.0033688212, 0.16268258), (0.29108545, 0.0033688212, 0.16268258), (0.29108545, -0.103728, 0.16268258), (0.29108545, -0.103728, 0.16268258), (0.29108545, -0.034292594, 0.16268258), (0.29108545, -0.034292594, 0.16268258), (0.29108545, -0.023405384, 0.16268258), (0.29108545, -0.023405384, 0.16268258), (0.29108545, -0.0610668, 0.16268258), (0.29108545, -0.0610668, 0.16268258), (0.22948416, -0.100033484, 0.16268258), (0.22948416, -0.100033484, 0.16268258), (0.22948416, -0.09153593, 0.16268258), (0.22948416, -0.09153593, 0.16268258), (0.22948416, -0.01121332, 0.16268258), (0.22948416, -0.01121332, 0.16268258), (0.22948416, -0.11831014, 0.16268258), (0.22948416, -0.11831014, 0.16268258), (0.22948416, 0.0070637516, 0.16268258), (0.22948416, 0.0070637516, 0.16268258), (0.22948416, -0.037987527, 0.16268258), (0.22948416, -0.037987527, 0.16268258), (0.22948416, -0.019710453, 0.16268258), (0.22948416, -0.019710453, 0.16268258), (0.22948416, -0.07325928, 0.16268258), (0.22948416, -0.07325928, 0.16268258), (0.3030916, 0.14559847, 0.16268258), (0.3030916, 0.14559847, 0.16268258), (0.22543775, 0.08106593, 0.16268258), (0.22543775, 0.08106593, 0.16268258), (0.22543775, 0.07543015, 0.16268258), (0.22543775, 0.07543015, 0.16268258), (0.27222812, -0.05017959, 0.16268258), (0.27222812, -0.05017959, 0.16268258), (0.27222812, 0.019255815, 0.16268258), (0.27222812, 0.019255815, 0.16268258), (0.27222812, -0.087841004, 0.16268258), (0.27222812, -0.087841004, 0.16268258), (0.27222812, 0.030143026, 0.16268258), (0.27222812, 0.030143026, 0.16268258), (0.27222812, -0.07695379, 0.16268258), (0.27222812, -0.07695379, 0.16268258), (0.27222812, -0.00751839, 0.16268258), (0.27222812, -0.00751839, 0.16268258), (0.27222812, -0.11461521, 0.16268258), (0.27222812, -0.11461521, 0.16268258), (0.27222812, 0.0033688212, 0.16268258), (0.27222812, 0.0033688212, 0.16268258), (0.27222812, -0.103728, 0.16268258), (0.27222812, -0.103728, 0.16268258), (0.27222812, -0.034292594, 0.16268258), (0.27222812, -0.034292594, 0.16268258), (0.27222812, -0.023405384, 0.16268258), (0.27222812, -0.023405384, 0.16268258), (0.27222812, -0.0610668, 0.16268258), (0.27222812, -0.0610668, 0.16268258), (0.31397006, 0.08106593, 0.16268258), (0.31397006, 0.08106593, 0.16268258), (0.31397006, 0.07543015, 0.16268258), (0.31397006, 0.07543015, 0.16268258), (0.23631622, 0.14559847, 0.16268258), (0.23631622, 0.14559847, 0.16268258), (0.23631622, 0.11267187, 0.16268258), (0.23631622, 0.11267187, 0.16268258), (0.30992365, 0.015560884, 0.16268258), (0.30992365, 0.015560884, 0.16268258), (0.30992365, -0.09153593, 0.16268258), (0.30992365, -0.09153593, 0.16268258), (0.30992365, 0.033837955, 0.16268258), (0.30992365, 0.033837955, 0.16268258), (0.30992365, -0.037987527, 0.16268258), (0.30992365, -0.037987527, 0.16268258), (0.30992365, -0.019710453, 0.16268258), (0.30992365, -0.019710453, 0.16268258), (0.30992365, -0.07325928, 0.16268258), (0.30992365, -0.07325928, 0.16268258), (0.24832235, -0.05017959, 0.16268258), (0.24832235, -0.05017959, 0.16268258), (0.24832235, 0.019255815, 0.16268258), (0.24832235, 0.019255815, 0.16268258), (0.24832235, -0.087841004, 0.16268258), (0.24832235, -0.087841004, 0.16268258), (0.24832235, 0.030143026, 0.16268258), (0.24832235, 0.030143026, 0.16268258), (0.24832235, -0.07695379, 0.16268258), (0.24832235, -0.07695379, 0.16268258), (0.24832235, -0.00751839, 0.16268258), (0.24832235, -0.00751839, 0.16268258), (0.24832235, -0.11461521, 0.16268258), (0.24832235, -0.11461521, 0.16268258), (0.24832235, 0.0033688212, 0.16268258), (0.24832235, 0.0033688212, 0.16268258), (0.24832235, -0.103728, 0.16268258), (0.24832235, -0.103728, 0.16268258), (0.24832235, -0.034292594, 0.16268258), (0.24832235, -0.034292594, 0.16268258), (0.24832235, -0.023405384, 0.16268258), (0.24832235, -0.023405384, 0.16268258), (0.24832235, -0.0610668, 0.16268258), (0.24832235, -0.0610668, 0.16268258), (0.2739585, 0.03239792, 0.16268258), (0.2739585, 0.03239792, 0.16268258), (0.2739585, 0.017001336, 0.16268258), (0.2739585, 0.017001336, 0.16268258), (0.2739585, -0.03654749, 0.16268258), (0.2739585, -0.03654749, 0.16268258), (0.2739585, 0.0056237145, 0.16268258), (0.2739585, 0.0056237145, 0.16268258), (0.2739585, -0.063321695, 0.16268258), (0.2739585, -0.063321695, 0.16268258), (0.2739585, -0.02115049, 0.16268258), (0.2739585, -0.02115049, 0.16268258), (0.2739585, -0.07469932, 0.16268258), (0.2739585, -0.07469932, 0.16268258), (0.2739585, -0.0900959, 0.16268258), (0.2739585, -0.0900959, 0.16268258), (0.2739585, -0.047924694, 0.16268258), (0.2739585, -0.047924694, 0.16268258), (0.2739585, -0.10147352, 0.16268258), (0.2739585, -0.10147352, 0.16268258), (0.2739585, -0.009773283, 0.16268258), (0.2739585, -0.009773283, 0.16268258), (0.2739585, -0.116870105, 0.16268258), (0.2739585, -0.116870105, 0.16268258), (0.29470384, 0.109135, 0.16268258), (0.29470384, 0.109135, 0.16268258), (0.31437686, 0.054128252, 0.16268258), (0.31437686, 0.054128252, 0.16268258), (0.31437686, -0.05296857, 0.16268258), (0.31437686, -0.05296857, 0.16268258), (0.31437686, -0.05827782, 0.16268258), (0.31437686, -0.05827782, 0.16268258), (0.31437686, -0.1065174, 0.16268258), (0.31437686, -0.1065174, 0.16268258), (0.31437686, 0.048819415, 0.16268258), (0.31437686, 0.048819415, 0.16268258), (0.31437686, 0.00057984155, 0.16268258), (0.31437686, 0.00057984155, 0.16268258), (0.31437686, -0.0047294106, 0.16268258), (0.31437686, -0.0047294106, 0.16268258), (0.31437686, -0.11182623, 0.16268258), (0.31437686, -0.11182623, 0.16268258), (0.23824042, 0.14752267, 0.16268258), (0.23824042, 0.14752267, 0.16268258), (0.23824042, 0.11074766, 0.16268258), (0.23824042, 0.11074766, 0.16268258), (0.22955237, 0.015610799, 0.16268258), (0.22955237, 0.015610799, 0.16268258), (0.22955237, 0.060562246, 0.16268258), (0.22955237, 0.060562246, 0.16268258), (0.22955237, -0.04653457, 0.16268258), (0.22955237, -0.04653457, 0.16268258), (0.22955237, 0.04238542, 0.16268258), (0.22955237, 0.04238542, 0.16268258), (0.22955237, 0.03378804, 0.16268258), (0.22955237, 0.03378804, 0.16268258), (0.22955237, -0.06471182, 0.16268258), (0.22955237, -0.06471182, 0.16268258), (0.2245476, -0.0823974, 0.16268258), (0.2245476, -0.0823974, 0.16268258), (0.2245476, -0.0020747846, 0.16268258), (0.2245476, -0.0020747846, 0.16268258), (0.2245476, -0.10917161, 0.16268258), (0.2245476, -0.10917161, 0.16268258), (0.2245476, -0.028848989, 0.16268258), (0.2245476, -0.028848989, 0.16268258), (0.30470383, 0.11913498, 0.16268258), (0.30470383, 0.11913498, 0.16268258), (0.23454757, -0.017961778, 0.16268258), (0.23454757, -0.017961778, 0.16268258), (0.23454757, 0.013812209, 0.16268258), (0.23454757, 0.013812209, 0.16268258), (0.23454757, -0.093284614, 0.16268258), (0.23454757, -0.093284614, 0.16268258), (0.23454757, 0.04058683, 0.16268258), (0.23454757, 0.04058683, 0.16268258), (0.23454757, 0.062360838, 0.16268258), (0.23454757, 0.062360838, 0.16268258), (0.23454757, -0.044735983, 0.16268258), (0.23454757, -0.044735983, 0.16268258), (0.23454757, -0.012961996, 0.16268258), (0.23454757, -0.012961996, 0.16268258), (0.23454757, -0.12005882, 0.16268258), (0.23454757, -0.12005882, 0.16268258), (0.23454757, -0.09828481, 0.16268258), (0.23454757, -0.09828481, 0.16268258), (0.23454757, 0.035586633, 0.16268258), (0.23454757, 0.035586633, 0.16268258), (0.23454757, -0.07151019, 0.16268258), (0.23454757, -0.07151019, 0.16268258), (0.23454757, -0.0397362, 0.16268258), (0.23454757, -0.0397362, 0.16268258), (0.23454757, 0.0088124275, 0.16268258), (0.23454757, 0.0088124275, 0.16268258), (0.23454757, -0.06651041, 0.16268258), (0.23454757, -0.06651041, 0.16268258), (0.31470382, 0.051473625, 0.16268258), (0.31470382, 0.051473625, 0.16268258), (0.31470382, -0.055623196, 0.16268258), (0.31470382, -0.055623196, 0.16268258), (0.31470382, 0.025954774, 0.16268258), (0.31470382, 0.025954774, 0.16268258), (0.31470382, -0.081142046, 0.16268258), (0.31470382, -0.081142046, 0.16268258), (0.31470382, 0.023444068, 0.16268258), (0.31470382, 0.023444068, 0.16268258), (0.31470382, -0.08365275, 0.16268258), (0.31470382, -0.08365275, 0.16268258), (0.31470382, -0.0020747846, 0.16268258), (0.31470382, -0.0020747846, 0.16268258), (0.31470382, -0.10917161, 0.16268258), (0.31470382, -0.10917161, 0.16268258), (0.31470382, -0.027593637, 0.16268258), (0.31470382, -0.027593637, 0.16268258), (0.31470382, -0.030104343, 0.16268258), (0.31470382, -0.030104343, 0.16268258), (0.24236462, 0.109135, 0.16268258), (0.24236462, 0.109135, 0.16268258), (0.24454756, -0.055623196, 0.16268258), (0.24454756, -0.055623196, 0.16268258), (0.24454756, 0.02469942, 0.16268258), (0.24454756, 0.02469942, 0.16268258), (0.24454756, -0.0823974, 0.16268258), (0.24454756, -0.0823974, 0.16268258), (0.24454756, -0.10917161, 0.16268258), (0.24454756, -0.10917161, 0.16268258), (0.24454756, -0.028848989, 0.16268258), (0.24454756, -0.028848989, 0.16268258), (0.26826698, -0.1119897, 0.16268258), (0.26826698, -0.1119897, 0.16268258), (0.26826698, -0.052805513, 0.16268258), (0.26826698, -0.052805513, 0.16268258), (0.26826698, 0.02188174, 0.16268258), (0.26826698, 0.02188174, 0.16268258), (0.26826698, -0.08521508, 0.16268258), (0.26826698, -0.08521508, 0.16268258), (0.26826698, -0.07957972, 0.16268258), (0.26826698, -0.07957972, 0.16268258), (0.26826698, -0.004892465, 0.16268258), (0.26826698, -0.004892465, 0.16268258), (0.26826698, 0.000742896, 0.16268258), (0.26826698, 0.000742896, 0.16268258), (0.26826698, -0.10635392, 0.16268258), (0.26826698, -0.10635392, 0.16268258), (0.26826698, -0.03166667, 0.16268258), (0.26826698, -0.03166667, 0.16268258), (0.26826698, 0.027517516, 0.16268258), (0.26826698, 0.027517516, 0.16268258), (0.26826698, -0.02603131, 0.16268258), (0.26826698, -0.02603131, 0.16268258), (0.26826698, -0.058440875, 0.16268258), (0.26826698, -0.058440875, 0.16268258), (0.22825542, 0.08594633, 0.16268258), (0.22825542, 0.08594633, 0.16268258), (0.22825542, 0.07054975, 0.16268258), (0.22825542, 0.07054975, 0.16268258), (0.24686359, -0.055623196, 0.16268258), (0.24686359, -0.055623196, 0.16268258), (0.24686359, 0.02469942, 0.16268258), (0.24686359, 0.02469942, 0.16268258), (0.24686359, -0.0823974, 0.16268258), (0.24686359, -0.0823974, 0.16268258), (0.24686359, -0.0020747846, 0.16268258), (0.24686359, -0.0020747846, 0.16268258), (0.24686359, -0.10917161, 0.16268258), (0.24686359, -0.10917161, 0.16268258), (0.24686359, -0.028848989, 0.16268258), (0.24686359, -0.028848989, 0.16268258), (0.23954278, -0.011163406, 0.16268258), (0.23954278, -0.011163406, 0.16268258), (0.23954278, 0.007013837, 0.16268258), (0.23954278, 0.007013837, 0.16268258), (0.34500614, -0.19997005, -0.1573176), (0.34500614, -0.19997005, -0.1573176), (0.34500614, -0.19997005, -0.1573176), (0.34500614, -0.19997005, -0.1573176), (0.34500614, -0.19997005, 0.16268258), (0.34500614, -0.19997005, 0.16268258), (0.34500614, -0.19997005, 0.16268258), (0.34500614, -0.19997005, 0.16268258), (0.34500614, 0.19824009, -0.1573176), (0.34500614, 0.19824009, -0.1573176), (0.34500614, 0.19824009, -0.1573176), (0.34500614, 0.19824009, -0.1573176), (0.34500614, 0.19824009, -0.1573176), (0.34500614, 0.19824009, -0.1573176), (0.34500614, 0.19824009, 0.16268258), (0.34500614, 0.19824009, 0.16268258), (0.34500614, 0.19824009, 0.16268258), (0.34500614, 0.19824009, 0.16268258), (0.34500614, 0.19824009, 0.16268258), (0.34500614, 0.19824009, 0.16268258), (0.2974246, 0.14910081, 0.16268258), (0.2974246, 0.14910081, 0.16268258), (0.30436316, 0.11654691, 0.16268258), (0.30436316, 0.11654691, 0.16268258), (0.24065879, 0.10949979, 0.16268258), (0.24065879, 0.10949979, 0.16268258), (0.24065879, 0.14877054, 0.16268258), (0.24065879, 0.14877054, 0.16268258), (-0.30263487, -0.20086436, -0.1573176), (-0.30263487, -0.20086436, -0.1573176), (-0.30263487, -0.20086436, -0.1573176), (-0.30263487, -0.20086436, -0.1573176), (0.30746827, -0.012370092, 0.16268258), (0.30746827, -0.012370092, 0.16268258), (0.30746827, -0.11946691, 0.16268258), (0.30746827, -0.11946691, 0.16268258), (0.30746827, -0.045327887, 0.16268258), (0.30746827, -0.045327887, 0.16268258), (0.30746827, 0.04117832, 0.16268258), (0.30746827, 0.04117832, 0.16268258), (0.30746827, -0.065918505, 0.16268258), (0.30746827, -0.065918505, 0.16268258), (0.30746827, 0.061769348, 0.16268258), (0.30746827, 0.061769348, 0.16268258), (0.30746827, 0.008220523, 0.16268258), (0.30746827, 0.008220523, 0.16268258), (0.30746827, -0.0988763, 0.16268258), (0.30746827, -0.0988763, 0.16268258), (0.239611, -0.06476173, 0.16268258), (0.239611, -0.06476173, 0.16268258), (0.239611, -0.04648466, 0.16268258), (0.239611, -0.04648466, 0.16268258), (0.239611, -0.100033484, 0.16268258), (0.239611, -0.100033484, 0.16268258), (0.239611, 0.015560884, 0.16268258), (0.239611, 0.015560884, 0.16268258), (0.239611, -0.09153593, 0.16268258), (0.239611, -0.09153593, 0.16268258), (0.239611, 0.033837955, 0.16268258), (0.239611, 0.033837955, 0.16268258), (0.239611, -0.11831014, 0.16268258), (0.239611, -0.11831014, 0.16268258), (0.239611, -0.037987527, 0.16268258), (0.239611, -0.037987527, 0.16268258), (0.239611, -0.019710453, 0.16268258), (0.239611, -0.019710453, 0.16268258), (0.239611, -0.07325928, 0.16268258), (0.239611, -0.07325928, 0.16268258), (0.31187782, -0.06296189, 0.16268258), (0.31187782, -0.06296189, 0.16268258), (0.31187782, 0.044134926, 0.16268258), (0.31187782, 0.044134926, 0.16268258), (0.31187782, 0.005263913, 0.16268258), (0.31187782, 0.005263913, 0.16268258), (0.31187782, -0.101832904, 0.16268258), (0.31187782, -0.101832904, 0.16268258), (0.31187782, -0.11651072, 0.16268258), (0.31187782, -0.11651072, 0.16268258), (0.31187782, -0.009413483, 0.16268258), (0.31187782, -0.009413483, 0.16268258), (0.31187782, 0.058812324, 0.16268258), (0.31187782, 0.058812324, 0.16268258), (0.31187782, -0.048284497, 0.16268258), (0.31187782, -0.048284497, 0.16268258), (-0.30301714, -0.20082983, 0.13768242), (-0.30301714, -0.20082983, 0.13768242), (-0.30301714, -0.20082983, 0.13768242), (-0.30301714, -0.20082983, 0.13768242), (-0.30301714, -0.20082983, -0.1573176), (-0.30301714, -0.20082983, -0.1573176), (-0.30301714, -0.20082983, -0.1573176), (-0.30301714, -0.20082983, -0.1573176), (-0.30301714, -0.20082983, -0.1573176), (-0.30301714, -0.20082983, -0.1573176), (-0.30301714, 0.1991007, 0.13768242), (-0.30301714, 0.1991007, 0.13768242), (-0.30301714, 0.1991007, 0.13768242), (-0.30301714, 0.1991007, 0.13768242), (-0.30301714, 0.1991007, -0.1573176), (-0.30301714, 0.1991007, -0.1573176), (-0.30301714, 0.1991007, -0.1573176), (-0.30301714, 0.1991007, -0.1573176), (-0.30301714, 0.1991007, -0.1573176), (-0.30301714, 0.1991007, -0.1573176), (0.34720406, -0.19836488, -0.1573176), (0.34720406, -0.19836488, -0.1573176), (0.34720406, -0.19836488, -0.1573176), (0.34720406, -0.19836488, -0.1573176), (0.34720406, -0.19836488, 0.16268258), (0.34720406, -0.19836488, 0.16268258), (0.34720406, -0.19836488, 0.16268258), (0.34720406, -0.19836488, 0.16268258), (0.34720406, 0.19663534, -0.1573176), (0.34720406, 0.19663534, -0.1573176), (0.34720406, 0.19663534, -0.1573176), (0.34720406, 0.19663534, -0.1573176), (0.34720406, 0.19663534, -0.1573176), (0.34720406, 0.19663534, -0.1573176), (0.34720406, 0.19663534, 0.16268258), (0.34720406, 0.19663534, 0.16268258), (0.34720406, 0.19663534, 0.16268258), (0.34720406, 0.19663534, 0.16268258), (0.34720406, 0.19663534, 0.16268258), (0.34720406, 0.19663534, 0.16268258), (0.29630443, -0.07724704, 0.16268258), (0.29630443, -0.07724704, 0.16268258), (0.29630443, -0.033999346, 0.16268258), (0.29630443, -0.033999346, 0.16268258), (0.29630443, -0.087548174, 0.16268258), (0.29630443, -0.087548174, 0.16268258), (0.29630443, 0.003075573, 0.16268258), (0.29630443, 0.003075573, 0.16268258), (0.29630443, -0.104021244, 0.16268258), (0.29630443, -0.104021244, 0.16268258), (0.29630443, 0.029850194, 0.16268258), (0.29630443, 0.029850194, 0.16268258), (0.29630443, -0.11432238, 0.16268258), (0.29630443, -0.11432238, 0.16268258), (0.29630443, -0.023698632, 0.16268258), (0.29630443, -0.023698632, 0.16268258), (0.29630443, 0.019549062, 0.16268258), (0.29630443, 0.019549062, 0.16268258), (0.29630443, -0.007225142, 0.16268258), (0.29630443, -0.007225142, 0.16268258), (0.2355987, 0.1138328, 0.16268258), (0.2355987, 0.1138328, 0.16268258), (0.2355987, 0.14443754, 0.16268258), (0.2355987, 0.14443754, 0.16268258), (0.24166831, -0.11656313, 0.16268258), (0.24166831, -0.11656313, 0.16268258), (0.24166831, -0.021457465, 0.16268258), (0.24166831, -0.021457465, 0.16268258), (0.24166831, 0.017308312, 0.16268258), (0.24166831, 0.017308312, 0.16268258), (0.24166831, -0.07500629, 0.16268258), (0.24166831, -0.07500629, 0.16268258), (0.24166831, -0.036240514, 0.16268258), (0.24166831, -0.036240514, 0.16268258), (0.24166831, -0.04823167, 0.16268258), (0.24166831, -0.04823167, 0.16268258), (0.24166831, -0.1017805, 0.16268258), (0.24166831, -0.1017805, 0.16268258), (0.24166831, -0.063014716, 0.16268258), (0.24166831, -0.063014716, 0.16268258), (0.24166831, 0.032090943, 0.16268258), (0.24166831, 0.032090943, 0.16268258), (0.24166831, -0.08978892, 0.16268258), (0.24166831, -0.08978892, 0.16268258), (0.2523072, 0.015270963, 0.16268258), (0.2523072, 0.015270963, 0.16268258), (0.2523072, -0.09182586, 0.16268258), (0.2523072, -0.09182586, 0.16268258), (0.2523072, -0.019420533, 0.16268258), (0.2523072, -0.019420533, 0.16268258), (0.2523072, -0.011503241, 0.16268258), (0.2523072, -0.011503241, 0.16268258), (0.2523072, -0.046194736, 0.16268258), (0.2523072, -0.046194736, 0.16268258), (0.2523072, -0.038277447, 0.16268258), (0.2523072, -0.038277447, 0.16268258), (0.2523072, 0.034127876, 0.16268258), (0.2523072, 0.034127876, 0.16268258), (0.2523072, -0.072968945, 0.16268258), (0.2523072, -0.072968945, 0.16268258), (0.2523072, -0.06505165, 0.16268258), (0.2523072, -0.06505165, 0.16268258), (0.2523072, -0.09974315, 0.16268258), (0.2523072, -0.09974315, 0.16268258), (0.2523072, 0.0073536723, 0.16268258), (0.2523072, 0.0073536723, 0.16268258), (0.2523072, -0.11860048, 0.16268258), (0.2523072, -0.11860048, 0.16268258), (0.19970384, -0.1578367, 0.13768242), (0.19970384, -0.1578367, 0.13768242), (0.19970384, -0.1578367, 0.16268258), (0.19970384, -0.1578367, 0.16268258), (0.19970384, -0.1578367, 0.16268258), (0.19970384, -0.1578367, 0.16268258), (0.19970384, -0.20086478, 0.13768242), (0.19970384, -0.20086478, 0.13768242), (0.19970384, -0.20086478, 0.13768242), (0.19970384, -0.20086478, 0.13768242), (0.19970384, -0.20086478, 0.16268258), (0.19970384, -0.20086478, 0.16268258), (0.19970384, -0.20086478, 0.16268258), (0.19970384, -0.20086478, 0.16268258), (0.19970384, -0.20086478, 0.16268258), (0.19970384, -0.20086478, 0.16268258), (0.19970384, 0.16610672, 0.13768242), (0.19970384, 0.16610672, 0.13768242), (0.19970384, 0.16610672, 0.16268258), (0.19970384, 0.16610672, 0.16268258), (0.19970384, 0.16610672, 0.16268258), (0.19970384, 0.16610672, 0.16268258), (0.19970384, 0.19913523, 0.13768242), (0.19970384, 0.19913523, 0.13768242), (0.19970384, -0.18783663, 0.13768242), (0.19970384, -0.18783663, 0.13768242), (0.19970384, -0.18783663, 0.16268258), (0.19970384, -0.18783663, 0.16268258), (0.19970384, -0.18783663, 0.16268258), (0.19970384, -0.18783663, 0.16268258), (0.24421437, -0.026170654, 0.16268258), (0.24421437, -0.026170654, 0.16268258), (0.24421437, 0.022021085, 0.16268258), (0.24421437, 0.022021085, 0.16268258), (0.24421437, -0.085075736, 0.16268258), (0.24421437, -0.085075736, 0.16268258), (0.24421437, -0.052944858, 0.16268258), (0.24421437, -0.052944858, 0.16268258), (0.24421437, -0.11184994, 0.16268258), (0.24421437, -0.11184994, 0.16268258), (0.24421437, 0.027377756, 0.16268258), (0.24421437, 0.027377756, 0.16268258), (0.24421437, -0.07971907, 0.16268258), (0.24421437, -0.07971907, 0.16268258), (0.24421437, -0.031527326, 0.16268258), (0.24421437, -0.031527326, 0.16268258), (0.24421437, -0.10649327, 0.16268258), (0.24421437, -0.10649327, 0.16268258), (0.24421437, -0.05830153, 0.16268258), (0.24421437, -0.05830153, 0.16268258), (0.25493312, -0.03936517, 0.16268258), (0.25493312, -0.03936517, 0.16268258), (0.25493312, 0.0352156, 0.16268258), (0.25493312, 0.0352156, 0.16268258), (0.25493312, -0.07188122, 0.16268258), (0.25493312, -0.07188122, 0.16268258), (0.25493312, -0.06613938, 0.16268258), (0.25493312, -0.06613938, 0.16268258), (0.25493312, -0.098655425, 0.16268258), (0.25493312, -0.098655425, 0.16268258), (0.25493312, 0.008441395, 0.16268258), (0.25493312, 0.008441395, 0.16268258), (0.25493312, 0.014183241, 0.16268258), (0.25493312, 0.014183241, 0.16268258), (0.25493312, -0.092913575, 0.16268258), (0.25493312, -0.092913575, 0.16268258), (0.25493312, -0.01833281, 0.16268258), (0.25493312, -0.01833281, 0.16268258), (0.25493312, -0.012590964, 0.16268258), (0.25493312, -0.012590964, 0.16268258), (0.25493312, -0.11968778, 0.16268258), (0.25493312, -0.11968778, 0.16268258), (0.25493312, -0.045107014, 0.16268258), (0.25493312, -0.045107014, 0.16268258), (0.2788389, -0.03936517, 0.16268258), (0.2788389, -0.03936517, 0.16268258), (0.2788389, 0.0352156, 0.16268258), (0.2788389, 0.0352156, 0.16268258), (0.2788389, -0.07188122, 0.16268258), (0.2788389, -0.07188122, 0.16268258), (0.2788389, -0.06613938, 0.16268258), (0.2788389, -0.06613938, 0.16268258), (0.2788389, -0.098655425, 0.16268258), (0.2788389, -0.098655425, 0.16268258), (0.2788389, 0.008441395, 0.16268258), (0.2788389, 0.008441395, 0.16268258), (0.2788389, 0.014183241, 0.16268258), (0.2788389, 0.014183241, 0.16268258), (0.2788389, -0.092913575, 0.16268258), (0.2788389, -0.092913575, 0.16268258), (0.2788389, -0.01833281, 0.16268258), (0.2788389, -0.01833281, 0.16268258), (0.2788389, -0.012590964, 0.16268258), (0.2788389, -0.012590964, 0.16268258), (0.2788389, -0.11968778, 0.16268258), (0.2788389, -0.11968778, 0.16268258), (0.2788389, -0.045107014, 0.16268258), (0.2788389, -0.045107014, 0.16268258), (0.30394262, 0.11530819, 0.16268258), (0.30394262, 0.11530819, 0.16268258), (0.3034539, 0.08913504, 0.16268258), (0.3034539, 0.08913504, 0.16268258), (0.3034539, 0.067361034, 0.16268258), (0.3034539, 0.067361034, 0.16268258), (0.34933916, -0.19490996, -0.1573176), (0.34933916, -0.19490996, -0.1573176), (0.34933916, -0.19490996, -0.1573176), (0.34933916, -0.19490996, -0.1573176), (0.34933916, -0.19490996, 0.16268258), (0.34933916, -0.19490996, 0.16268258), (0.34933916, -0.19490996, 0.16268258), (0.34933916, -0.19490996, 0.16268258), (0.34933916, 0.19318041, -0.1573176), (0.34933916, 0.19318041, -0.1573176), (0.34933916, 0.19318041, -0.1573176), (0.34933916, 0.19318041, -0.1573176), (0.34933916, 0.19318041, -0.1573176), (0.34933916, 0.19318041, -0.1573176), (0.34933916, 0.19318041, 0.16268258), (0.34933916, 0.19318041, 0.16268258), (0.34933916, 0.19318041, 0.16268258), (0.34933916, 0.19318041, 0.16268258), (0.34933916, 0.19318041, 0.16268258), (0.34933916, 0.19318041, 0.16268258), (0.30336446, 0.1141352, 0.16268258), (0.30336446, 0.1141352, 0.16268258), (0.29236037, 0.08913504, 0.16268258), (0.29236037, 0.08913504, 0.16268258), (0.29236037, -0.003472394, 0.16268258), (0.29236037, -0.003472394, 0.16268258), (0.29236037, -0.11056922, 0.16268258), (0.29236037, -0.11056922, 0.16268258), (0.29236037, -0.00067717506, 0.16268258), (0.29236037, -0.00067717506, 0.16268258), (0.29236037, -0.107774, 0.16268258), (0.29236037, -0.107774, 0.16268258), (0.29236037, 0.04058683, 0.16268258), (0.29236037, 0.04058683, 0.16268258), (0.29236037, 0.062360838, 0.16268258), (0.29236037, 0.062360838, 0.16268258), (0.29236037, -0.030246599, 0.16268258), (0.29236037, -0.030246599, 0.16268258), (0.29236037, -0.02745138, 0.16268258), (0.29236037, -0.02745138, 0.16268258), (0.29236037, -0.054225586, 0.16268258), (0.29236037, -0.054225586, 0.16268258), (0.29236037, -0.057020806, 0.16268258), (0.29236037, -0.057020806, 0.16268258), (0.29236037, 0.02330181, 0.16268258), (0.29236037, 0.02330181, 0.16268258), (0.29236037, -0.08379501, 0.16268258), (0.29236037, -0.08379501, 0.16268258), (0.29236037, 0.02609703, 0.16268258), (0.29236037, 0.02609703, 0.16268258), (0.29236037, -0.08099979, 0.16268258), (0.29236037, -0.08099979, 0.16268258), (0.29236037, 0.067361034, 0.16268258), (0.29236037, 0.067361034, 0.16268258), (0.22586077, -0.11436522, 0.16268258), (0.22586077, -0.11436522, 0.16268258), (0.22586077, -0.0772042, 0.16268258), (0.22586077, -0.0772042, 0.16268258), (0.22586077, -0.0875906, 0.16268258), (0.22586077, -0.0875906, 0.16268258), (0.22586077, 0.0031184163, 0.16268258), (0.22586077, 0.0031184163, 0.16268258), (0.22586077, -0.1039784, 0.16268258), (0.22586077, -0.1039784, 0.16268258), (0.22586077, -0.0072679855, 0.16268258), (0.22586077, -0.0072679855, 0.16268258), (0.22586077, -0.023655789, 0.16268258), (0.22586077, -0.023655789, 0.16268258), (0.22586077, -0.03404219, 0.16268258), (0.22586077, -0.03404219, 0.16268258), (0.23940136, 0.11003014, 0.16268258), (0.23940136, 0.11003014, 0.16268258), (0.23940136, 0.1482402, 0.16268258), (0.23940136, 0.1482402, 0.16268258), (0.2432348, -0.050429992, 0.16268258), (0.2432348, -0.050429992, 0.16268258), (0.2432348, -0.060816396, 0.16268258), (0.2432348, -0.060816396, 0.16268258), (0.2432348, -0.11436522, 0.16268258), (0.2432348, -0.11436522, 0.16268258), (0.2432348, -0.0772042, 0.16268258), (0.2432348, -0.0772042, 0.16268258), (0.2432348, 0.01950622, 0.16268258), (0.2432348, 0.01950622, 0.16268258), (0.2432348, -0.0875906, 0.16268258), (0.2432348, -0.0875906, 0.16268258), (0.2432348, -0.1039784, 0.16268258), (0.2432348, -0.1039784, 0.16268258), (0.2432348, 0.029893037, 0.16268258), (0.2432348, 0.029893037, 0.16268258), (0.2432348, -0.023655789, 0.16268258), (0.2432348, -0.023655789, 0.16268258), (0.2432348, -0.03404219, 0.16268258), (0.2432348, -0.03404219, 0.16268258), (-0.30779603, -0.19836447, 0.13768242), (-0.30779603, -0.19836447, 0.13768242), (-0.30779603, -0.19836447, -0.1573176), (-0.30779603, -0.19836447, -0.1573176), (-0.30779603, -0.19836447, -0.1573176), (-0.30779603, -0.19836447, -0.1573176), (-0.30779603, 0.19663534, 0.13768242), (-0.30779603, 0.19663534, 0.13768242), (-0.30779603, 0.19663534, 0.13768242), (-0.30779603, 0.19663534, 0.13768242), (-0.30779603, 0.19663534, -0.1573176), (-0.30779603, 0.19663534, -0.1573176), (-0.30779603, 0.19663534, -0.1573176), (-0.30779603, 0.19663534, -0.1573176), (-0.30779603, 0.19663534, -0.1573176), (-0.30779603, 0.19663534, -0.1573176), (0.3420429, -0.20086478, 0.16268258), (0.3420429, -0.20086478, 0.16268258), (0.3420429, -0.20086478, 0.16268258), (0.3420429, -0.20086478, 0.16268258), (0.2259918, 0.056624398, 0.16268258), (0.2259918, 0.056624398, 0.16268258), (0.2259918, -0.06077355, 0.16268258), (0.2259918, -0.06077355, 0.16268258), (0.2259918, 0.04632327, 0.16268258), (0.2259918, 0.04632327, 0.16268258), (0.2259918, 0.029850194, 0.16268258), (0.2259918, 0.029850194, 0.16268258), (0.2259918, 0.019549062, 0.16268258), (0.2259918, 0.019549062, 0.16268258), (0.2259918, -0.050472837, 0.16268258), (0.2259918, -0.050472837, 0.16268258), (0.2697037, -0.15505895, 0.16268258), (0.2697037, -0.15505895, 0.16268258), (0.2577508, -0.017961778, 0.16268258), (0.2577508, -0.017961778, 0.16268258), (0.2577508, 0.013812209, 0.16268258), (0.2577508, 0.013812209, 0.16268258), (0.2577508, -0.093284614, 0.16268258), (0.2577508, -0.093284614, 0.16268258), (0.2577508, -0.044735983, 0.16268258), (0.2577508, -0.044735983, 0.16268258), (0.2577508, -0.012961996, 0.16268258), (0.2577508, -0.012961996, 0.16268258), (0.2577508, -0.12005882, 0.16268258), (0.2577508, -0.12005882, 0.16268258), (0.2577508, -0.09828481, 0.16268258), (0.2577508, -0.09828481, 0.16268258), (0.2577508, 0.035586633, 0.16268258), (0.2577508, 0.035586633, 0.16268258), (0.2577508, -0.07151019, 0.16268258), (0.2577508, -0.07151019, 0.16268258), (0.2577508, -0.0397362, 0.16268258), (0.2577508, -0.0397362, 0.16268258), (0.2577508, 0.0088124275, 0.16268258), (0.2577508, 0.0088124275, 0.16268258), (0.2577508, -0.06651041, 0.16268258), (0.2577508, -0.06651041, 0.16268258), (0.29784223, -0.036187686, 0.16268258), (0.29784223, -0.036187686, 0.16268258), (0.29784223, 0.03203812, 0.16268258), (0.29784223, 0.03203812, 0.16268258), (0.29784223, -0.0750587, 0.16268258), (0.29784223, -0.0750587, 0.16268258), (0.29784223, 0.005263913, 0.16268258), (0.29784223, 0.005263913, 0.16268258), (0.29784223, -0.101832904, 0.16268258), (0.29784223, -0.101832904, 0.16268258), (0.29784223, -0.11651072, 0.16268258), (0.29784223, -0.11651072, 0.16268258), (0.29784223, 0.017360723, 0.16268258), (0.29784223, 0.017360723, 0.16268258), (0.29784223, -0.0897361, 0.16268258), (0.29784223, -0.0897361, 0.16268258), (0.29784223, -0.021510292, 0.16268258), (0.29784223, -0.021510292, 0.16268258), (0.29784223, -0.009413483, 0.16268258), (0.29784223, -0.009413483, 0.16268258), (0.30627155, 0.067732066, 0.16268258), (0.30627155, 0.067732066, 0.16268258), (0.30627155, 0.08876401, 0.16268258), (0.30627155, 0.08876401, 0.16268258), (0.3022518, -0.018553682, 0.16268258), (0.3022518, -0.018553682, 0.16268258), (0.3022518, -0.012370092, 0.16268258), (0.3022518, -0.012370092, 0.16268258), (0.3022518, -0.11946691, 0.16268258), (0.3022518, -0.11946691, 0.16268258), (0.3022518, -0.039144296, 0.16268258), (0.3022518, -0.039144296, 0.16268258), (0.3022518, 0.03499473, 0.16268258), (0.3022518, 0.03499473, 0.16268258), (0.3022518, -0.07210209, 0.16268258), (0.3022518, -0.07210209, 0.16268258), (0.3022518, 0.008220523, 0.16268258), (0.3022518, 0.008220523, 0.16268258), (0.3022518, -0.0988763, 0.16268258), (0.3022518, -0.0988763, 0.16268258), (0.3022518, 0.014404113, 0.16268258), (0.3022518, 0.014404113, 0.16268258), (0.3022518, -0.09269271, 0.16268258), (0.3022518, -0.09269271, 0.16268258), (0.3088975, 0.087676704, 0.16268258), (0.3088975, 0.087676704, 0.16268258), (0.3088975, 0.068819374, 0.16268258), (0.3088975, 0.068819374, 0.16268258), (0.22488119, -0.026170654, 0.16268258), (0.22488119, -0.026170654, 0.16268258), (0.22488119, -0.085075736, 0.16268258), (0.22488119, -0.085075736, 0.16268258), (0.22488119, -0.0047531202, 0.16268258), (0.22488119, -0.0047531202, 0.16268258), (0.22488119, -0.11184994, 0.16268258), (0.22488119, -0.11184994, 0.16268258), (0.22488119, -0.07971907, 0.16268258), (0.22488119, -0.07971907, 0.16268258), (0.22488119, -0.031527326, 0.16268258), (0.22488119, -0.031527326, 0.16268258), (0.22488119, 0.000603551, 0.16268258), (0.22488119, 0.000603551, 0.16268258), (0.22488119, -0.10649327, 0.16268258), (0.22488119, -0.10649327, 0.16268258), (0.22742726, -0.009466309, 0.16268258), (0.22742726, -0.009466309, 0.16268258), (0.22742726, -0.11656313, 0.16268258), (0.22742726, -0.11656313, 0.16268258), (0.22742726, -0.021457465, 0.16268258), (0.22742726, -0.021457465, 0.16268258), (0.22742726, -0.07500629, 0.16268258), (0.22742726, -0.07500629, 0.16268258), (0.22742726, -0.036240514, 0.16268258), (0.22742726, -0.036240514, 0.16268258), (0.22742726, -0.1017805, 0.16268258), (0.22742726, -0.1017805, 0.16268258), (0.22742726, -0.08978892, 0.16268258), (0.22742726, -0.08978892, 0.16268258), (0.22742726, 0.0053167394, 0.16268258), (0.22742726, 0.0053167394, 0.16268258), (0.28220397, 0.067361034, 0.16268258), (0.28220397, 0.067361034, 0.16268258), (0.34809127, 0.19559836, -0.1573176), (0.34809127, 0.19559836, -0.1573176), (0.34809127, 0.19559836, -0.1573176), (0.34809127, 0.19559836, -0.1573176), (0.34809127, 0.19559836, -0.1573176), (0.34809127, 0.19559836, -0.1573176), (0.34809127, 0.19559836, 0.16268258), (0.34809127, 0.19559836, 0.16268258), (0.34809127, 0.19559836, 0.16268258), (0.34809127, 0.19559836, 0.16268258), (0.34809127, 0.19559836, 0.16268258), (0.34809127, 0.19559836, 0.16268258), (0.34809127, -0.19732831, -0.1573176), (0.34809127, -0.19732831, -0.1573176), (0.34809127, -0.19732831, -0.1573176), (0.34809127, -0.19732831, -0.1573176), (0.34809127, -0.19732831, 0.16268258), (0.34809127, -0.19732831, 0.16268258), (0.34809127, -0.19732831, 0.16268258), (0.34809127, -0.19732831, 0.16268258), (0.2893555, 0.03239792, 0.16268258), (0.2893555, 0.03239792, 0.16268258), (0.2893555, 0.017001336, 0.16268258), (0.2893555, 0.017001336, 0.16268258), (0.2893555, -0.03654749, 0.16268258), (0.2893555, -0.03654749, 0.16268258), (0.2893555, 0.0056237145, 0.16268258), (0.2893555, 0.0056237145, 0.16268258), (0.2893555, -0.063321695, 0.16268258), (0.2893555, -0.063321695, 0.16268258), (0.2893555, -0.02115049, 0.16268258), (0.2893555, -0.02115049, 0.16268258), (0.2893555, -0.07469932, 0.16268258), (0.2893555, -0.07469932, 0.16268258), (0.2893555, -0.0900959, 0.16268258), (0.2893555, -0.0900959, 0.16268258), (0.2893555, -0.047924694, 0.16268258), (0.2893555, -0.047924694, 0.16268258), (0.2893555, -0.10147352, 0.16268258), (0.2893555, -0.10147352, 0.16268258), (0.2893555, -0.009773283, 0.16268258), (0.2893555, -0.009773283, 0.16268258), (0.2893555, -0.116870105, 0.16268258), (0.2893555, -0.116870105, 0.16268258), (0.2319071, -0.072069645, 0.16268258), (0.2319071, -0.072069645, 0.16268258), (0.2319071, -0.11949977, 0.16268258), (0.2319071, -0.11949977, 0.16268258), (0.2319071, 0.008252967, 0.16268258), (0.2319071, 0.008252967, 0.16268258), (0.2319071, -0.09884385, 0.16268258), (0.2319071, -0.09884385, 0.16268258), (0.2319071, -0.09272515, 0.16268258), (0.2319071, -0.09272515, 0.16268258), (0.2319071, -0.018521238, 0.16268258), (0.2319071, -0.018521238, 0.16268258), (0.2319071, -0.012402536, 0.16268258), (0.2319071, -0.012402536, 0.16268258), (0.2319071, -0.03917674, 0.16268258), (0.2319071, -0.03917674, 0.16268258), (0.29501623, 0.08913504, 0.16268258), (0.29501623, 0.08913504, 0.16268258), (0.29501623, -0.056878548, 0.16268258), (0.29501623, -0.056878548, 0.16268258), (0.29501623, 0.04058683, 0.16268258), (0.29501623, 0.04058683, 0.16268258), (0.29501623, 0.062360838, 0.16268258), (0.29501623, 0.062360838, 0.16268258), (0.29501623, 0.02469942, 0.16268258), (0.29501623, 0.02469942, 0.16268258), (0.29501623, -0.0823974, 0.16268258), (0.29501623, -0.0823974, 0.16268258), (0.29501623, -0.0020747846, 0.16268258), (0.29501623, -0.0020747846, 0.16268258), (0.29501623, -0.10917161, 0.16268258), (0.29501623, -0.10917161, 0.16268258), (0.29501623, -0.028848989, 0.16268258), (0.29501623, -0.028848989, 0.16268258), (0.29501623, -0.05436784, 0.16268258), (0.29501623, -0.05436784, 0.16268258), (0.29501623, 0.067361034, 0.16268258), (0.29501623, 0.067361034, 0.16268258), (0.30220395, 0.14663503, 0.16268258), (0.30220395, 0.14663503, 0.16268258), (0.34966943, 0.19185601, -0.1573176), (0.34966943, 0.19185601, -0.1573176), (0.34966943, 0.19185601, -0.1573176), (0.34966943, 0.19185601, -0.1573176), (0.34966943, 0.19185601, -0.1573176), (0.34966943, 0.19185601, -0.1573176), (0.34966943, 0.19185601, 0.16268258), (0.34966943, 0.19185601, 0.16268258), (0.34966943, 0.19185601, 0.16268258), (0.34966943, 0.19185601, 0.16268258), (0.34966943, 0.19185601, 0.16268258), (0.34966943, 0.19185601, 0.16268258), (0.34966943, -0.19358598, -0.1573176), (0.34966943, -0.19358598, -0.1573176), (0.34966943, -0.19358598, -0.1573176), (0.34966943, -0.19358598, -0.1573176), (0.34966943, -0.19358598, -0.1573176), (0.34966943, -0.19358598, -0.1573176), (0.34966943, -0.19358598, 0.16268258), (0.34966943, -0.19358598, 0.16268258), (0.34966943, -0.19358598, 0.16268258), (0.34966943, -0.19358598, 0.16268258), (0.34966943, -0.19358598, 0.16268258), (0.34966943, -0.19358598, 0.16268258), (0.2605685, -0.03936517, 0.16268258), (0.2605685, -0.03936517, 0.16268258), (0.2605685, 0.0352156, 0.16268258), (0.2605685, 0.0352156, 0.16268258), (0.2605685, -0.07188122, 0.16268258), (0.2605685, -0.07188122, 0.16268258), (0.2605685, -0.06613938, 0.16268258), (0.2605685, -0.06613938, 0.16268258), (0.2605685, -0.098655425, 0.16268258), (0.2605685, -0.098655425, 0.16268258), (0.2605685, 0.008441395, 0.16268258), (0.2605685, 0.008441395, 0.16268258), (0.2605685, 0.014183241, 0.16268258), (0.2605685, 0.014183241, 0.16268258), (0.2605685, -0.092913575, 0.16268258), (0.2605685, -0.092913575, 0.16268258), (0.2605685, -0.01833281, 0.16268258), (0.2605685, -0.01833281, 0.16268258), (0.2605685, -0.012590964, 0.16268258), (0.2605685, -0.012590964, 0.16268258), (0.2605685, -0.11968778, 0.16268258), (0.2605685, -0.11968778, 0.16268258), (0.2605685, -0.045107014, 0.16268258), (0.2605685, -0.045107014, 0.16268258), (0.2631944, 0.015270963, 0.16268258), (0.2631944, 0.015270963, 0.16268258), (0.2631944, -0.09182586, 0.16268258), (0.2631944, -0.09182586, 0.16268258), (0.2631944, -0.019420533, 0.16268258), (0.2631944, -0.019420533, 0.16268258), (0.2631944, -0.011503241, 0.16268258), (0.2631944, -0.011503241, 0.16268258), (0.2631944, -0.046194736, 0.16268258), (0.2631944, -0.046194736, 0.16268258), (0.2631944, -0.038277447, 0.16268258), (0.2631944, -0.038277447, 0.16268258), (0.2631944, 0.034127876, 0.16268258), (0.2631944, 0.034127876, 0.16268258), (0.2631944, -0.072968945, 0.16268258), (0.2631944, -0.072968945, 0.16268258), (0.2631944, -0.06505165, 0.16268258), (0.2631944, -0.06505165, 0.16268258), (0.2631944, -0.09974315, 0.16268258), (0.2631944, -0.09974315, 0.16268258), (0.2631944, 0.0073536723, 0.16268258), (0.2631944, 0.0073536723, 0.16268258), (0.2631944, -0.11860048, 0.16268258), (0.2631944, -0.11860048, 0.16268258), (0.30263737, 0.11304747, 0.16268258), (0.30263737, 0.11304747, 0.16268258), (0.29534316, -0.1065174, 0.16268258), (0.29534316, -0.1065174, 0.16268258), (0.29534316, 0.027354047, 0.16268258), (0.29534316, 0.027354047, 0.16268258), (0.29534316, -0.079742774, 0.16268258), (0.29534316, -0.079742774, 0.16268258), (0.29534316, 0.022044795, 0.16268258), (0.29534316, 0.022044795, 0.16268258), (0.29534316, -0.08505203, 0.16268258), (0.29534316, -0.08505203, 0.16268258), (0.29534316, 0.00057984155, 0.16268258), (0.29534316, 0.00057984155, 0.16268258), (0.29534316, -0.0047294106, 0.16268258), (0.29534316, -0.0047294106, 0.16268258), (0.29534316, -0.11182623, 0.16268258), (0.29534316, -0.11182623, 0.16268258), (0.29534316, -0.026194364, 0.16268258), (0.29534316, -0.026194364, 0.16268258), (0.29534316, -0.031503614, 0.16268258), (0.29534316, -0.031503614, 0.16268258), (0.3143411, 0.07824783, 0.16268258), (0.3143411, 0.07824783, 0.16268258), (0.29475543, 0.1621901, 0.16268258), (0.29475543, 0.1621901, 0.16268258), (0.29475543, -0.1839196, 0.16268258), (0.29475543, -0.1839196, 0.16268258), (0.29475543, -0.15391965, 0.16268258), (0.29475543, -0.15391965, 0.16268258), (0.27076977, -0.055623196, 0.16268258), (0.27076977, -0.055623196, 0.16268258), (0.27076977, 0.02469942, 0.16268258), (0.27076977, 0.02469942, 0.16268258), (0.27076977, -0.0823974, 0.16268258), (0.27076977, -0.0823974, 0.16268258), (0.27076977, -0.0020747846, 0.16268258), (0.27076977, -0.0020747846, 0.16268258), (0.27076977, -0.10917161, 0.16268258), (0.27076977, -0.10917161, 0.16268258), (0.27076977, -0.028848989, 0.16268258), (0.27076977, -0.028848989, 0.16268258), (0.30433905, 0.1431801, 0.16268258), (0.30433905, 0.1431801, 0.16268258), (0.26845375, 0.08913504, 0.16268258), (0.26845375, 0.08913504, 0.16268258), (0.26845375, -0.003472394, 0.16268258), (0.26845375, -0.003472394, 0.16268258), (0.26845375, -0.11056922, 0.16268258), (0.26845375, -0.11056922, 0.16268258), (0.26845375, -0.00067717506, 0.16268258), (0.26845375, -0.00067717506, 0.16268258), (0.26845375, -0.107774, 0.16268258), (0.26845375, -0.107774, 0.16268258), (0.26845375, 0.04058683, 0.16268258), (0.26845375, 0.04058683, 0.16268258), (0.26845375, 0.062360838, 0.16268258), (0.26845375, 0.062360838, 0.16268258), (0.26845375, -0.030246599, 0.16268258), (0.26845375, -0.030246599, 0.16268258), (0.26845375, -0.02745138, 0.16268258), (0.26845375, -0.02745138, 0.16268258), (0.26845375, -0.054225586, 0.16268258), (0.26845375, -0.054225586, 0.16268258), (0.26845375, -0.057020806, 0.16268258), (0.26845375, -0.057020806, 0.16268258), (0.26845375, 0.02330181, 0.16268258), (0.26845375, 0.02330181, 0.16268258), (0.26845375, -0.08379501, 0.16268258), (0.26845375, -0.08379501, 0.16268258), (0.26845375, 0.02609703, 0.16268258), (0.26845375, 0.02609703, 0.16268258), (0.26845375, -0.08099979, 0.16268258), (0.26845375, -0.08099979, 0.16268258), (0.26845375, 0.067361034, 0.16268258), (0.26845375, 0.067361034, 0.16268258), (0.29217318, -0.1119897, 0.16268258), (0.29217318, -0.1119897, 0.16268258), (0.29217318, -0.052805513, 0.16268258), (0.29217318, -0.052805513, 0.16268258), (0.29217318, 0.02188174, 0.16268258), (0.29217318, 0.02188174, 0.16268258), (0.29217318, -0.08521508, 0.16268258), (0.29217318, -0.08521508, 0.16268258), (0.29217318, -0.07957972, 0.16268258), (0.29217318, -0.07957972, 0.16268258), (0.29217318, -0.004892465, 0.16268258), (0.29217318, -0.004892465, 0.16268258), (0.29217318, 0.000742896, 0.16268258), (0.29217318, 0.000742896, 0.16268258), (0.29217318, -0.10635392, 0.16268258), (0.29217318, -0.10635392, 0.16268258), (0.29217318, -0.03166667, 0.16268258), (0.29217318, -0.03166667, 0.16268258), (0.29217318, 0.027517516, 0.16268258), (0.29217318, 0.027517516, 0.16268258), (0.29217318, -0.02603131, 0.16268258), (0.29217318, -0.02603131, 0.16268258), (0.29217318, -0.058440875, 0.16268258), (0.29217318, -0.058440875, 0.16268258), (0.22652547, 0.07280464, 0.16268258), (0.22652547, 0.07280464, 0.16268258), (0.22652547, 0.08369143, 0.16268258), (0.22652547, 0.08369143, 0.16268258), (0.29729193, 0.10947608, 0.16268258), (0.29729193, 0.10947608, 0.16268258), (0.23506877, 0.11509023, 0.16268258), (0.23506877, 0.11509023, 0.16268258), (0.23506877, 0.1431801, 0.16268258), (0.23506877, 0.1431801, 0.16268258), (0.268638, -0.055623196, 0.16268258), (0.268638, -0.055623196, 0.16268258), (0.268638, 0.02469942, 0.16268258), (0.268638, 0.02469942, 0.16268258), (0.268638, -0.0823974, 0.16268258), (0.268638, -0.0823974, 0.16268258), (0.268638, -0.0020747846, 0.16268258), (0.268638, -0.0020747846, 0.16268258), (0.268638, -0.10917161, 0.16268258), (0.268638, -0.10917161, 0.16268258), (0.268638, -0.028848989, 0.16268258), (0.268638, -0.028848989, 0.16268258), (0.31288233, 0.07280464, 0.16268258), (0.31288233, 0.07280464, 0.16268258), (0.31288233, 0.08369143, 0.16268258), (0.31288233, 0.08369143, 0.16268258), (0.24723463, -0.1119897, 0.16268258), (0.24723463, -0.1119897, 0.16268258), (0.24723463, -0.052805513, 0.16268258), (0.24723463, -0.052805513, 0.16268258), (0.24723463, 0.02188174, 0.16268258), (0.24723463, 0.02188174, 0.16268258), (0.24723463, -0.08521508, 0.16268258), (0.24723463, -0.08521508, 0.16268258), (0.24723463, -0.07957972, 0.16268258), (0.24723463, -0.07957972, 0.16268258), (0.24723463, -0.004892465, 0.16268258), (0.24723463, -0.004892465, 0.16268258), (0.24723463, 0.000742896, 0.16268258), (0.24723463, 0.000742896, 0.16268258), (0.24723463, -0.10635392, 0.16268258), (0.24723463, -0.10635392, 0.16268258), (0.24723463, -0.03166667, 0.16268258), (0.24723463, -0.03166667, 0.16268258), (0.24723463, 0.027517516, 0.16268258), (0.24723463, 0.027517516, 0.16268258), (0.24723463, -0.02603131, 0.16268258), (0.24723463, -0.02603131, 0.16268258), (0.24723463, -0.058440875, 0.16268258), (0.24723463, -0.058440875, 0.16268258), (0.27095404, 0.08913504, 0.16268258), (0.27095404, 0.08913504, 0.16268258), (0.27095404, -0.003472394, 0.16268258), (0.27095404, -0.003472394, 0.16268258), (0.27095404, -0.11056922, 0.16268258), (0.27095404, -0.11056922, 0.16268258), (0.27095404, -0.00067717506, 0.16268258), (0.27095404, -0.00067717506, 0.16268258), (0.27095404, -0.107774, 0.16268258), (0.27095404, -0.107774, 0.16268258), (0.27095404, 0.04058683, 0.16268258), (0.27095404, 0.04058683, 0.16268258), (0.27095404, 0.062360838, 0.16268258), (0.27095404, 0.062360838, 0.16268258), (0.27095404, -0.030246599, 0.16268258), (0.27095404, -0.030246599, 0.16268258), (0.27095404, -0.02745138, 0.16268258), (0.27095404, -0.02745138, 0.16268258), (0.27095404, -0.054225586, 0.16268258), (0.27095404, -0.054225586, 0.16268258), (0.27095404, -0.057020806, 0.16268258), (0.27095404, -0.057020806, 0.16268258), (0.27095404, 0.02330181, 0.16268258), (0.27095404, 0.02330181, 0.16268258), (0.27095404, -0.08379501, 0.16268258), (0.27095404, -0.08379501, 0.16268258), (0.27095404, 0.02609703, 0.16268258), (0.27095404, 0.02609703, 0.16268258), (0.27095404, -0.08099979, 0.16268258), (0.27095404, -0.08099979, 0.16268258), (0.27095404, 0.067361034, 0.16268258), (0.27095404, 0.067361034, 0.16268258), (0.2250667, 0.07824783, 0.16268258), (0.2250667, 0.07824783, 0.16268258), (0.24406463, 0.00057984155, 0.16268258), (0.24406463, 0.00057984155, 0.16268258), (0.24406463, -0.0047294106, 0.16268258), (0.24406463, -0.0047294106, 0.16268258), (0.22503053, 0.054128252, 0.16268258), (0.22503053, 0.054128252, 0.16268258), (0.22503053, -0.05296857, 0.16268258), (0.22503053, -0.05296857, 0.16268258), (0.22503053, -0.05827782, 0.16268258), (0.22503053, -0.05827782, 0.16268258), (0.22503053, 0.027354047, 0.16268258), (0.22503053, 0.027354047, 0.16268258), (0.22503053, 0.022044795, 0.16268258), (0.22503053, 0.022044795, 0.16268258), (0.22503053, 0.048819415, 0.16268258), (0.22503053, 0.048819415, 0.16268258), (0.23977862, -0.18641947, 0.16268258), (0.23977862, -0.18641947, 0.16268258), (0.23977862, -0.15641955, 0.16268258), (0.23977862, -0.15641955, 0.16268258), (0.23977862, 0.16468997, 0.16268258), (0.23977862, 0.16468997, 0.16268258), (0.2762134, 0.015270963, 0.16268258), (0.2762134, 0.015270963, 0.16268258), (0.2762134, -0.09182586, 0.16268258), (0.2762134, -0.09182586, 0.16268258), (0.2762134, -0.019420533, 0.16268258), (0.2762134, -0.019420533, 0.16268258), (0.2762134, -0.011503241, 0.16268258), (0.2762134, -0.011503241, 0.16268258), (0.2762134, -0.046194736, 0.16268258), (0.2762134, -0.046194736, 0.16268258), (0.2762134, -0.038277447, 0.16268258), (0.2762134, -0.038277447, 0.16268258), (0.2762134, 0.034127876, 0.16268258), (0.2762134, 0.034127876, 0.16268258), (0.2762134, -0.072968945, 0.16268258), (0.2762134, -0.072968945, 0.16268258), (0.2762134, -0.06505165, 0.16268258), (0.2762134, -0.06505165, 0.16268258), (0.2762134, -0.09974315, 0.16268258), (0.2762134, -0.09974315, 0.16268258), (0.2762134, 0.0073536723, 0.16268258), (0.2762134, 0.0073536723, 0.16268258), (0.2762134, -0.11860048, 0.16268258), (0.2762134, -0.11860048, 0.16268258), (0.30461815, 0.11782971, 0.16268258), (0.30461815, 0.11782971, 0.16268258), (0.3488092, 0.19443785, -0.1573176), (0.3488092, 0.19443785, -0.1573176), (0.3488092, 0.19443785, -0.1573176), (0.3488092, 0.19443785, -0.1573176), (0.3488092, 0.19443785, -0.1573176), (0.3488092, 0.19443785, -0.1573176), (0.3488092, 0.19443785, 0.16268258), (0.3488092, 0.19443785, 0.16268258), (0.3488092, 0.19443785, 0.16268258), (0.3488092, 0.19443785, 0.16268258), (0.3488092, 0.19443785, 0.16268258), (0.3488092, 0.19443785, 0.16268258), (0.3488092, -0.1961674, -0.1573176), (0.3488092, -0.1961674, -0.1573176), (0.3488092, -0.1961674, -0.1573176), (0.3488092, -0.1961674, -0.1573176), (0.3488092, -0.1961674, 0.16268258), (0.3488092, -0.1961674, 0.16268258), (0.3488092, -0.1961674, 0.16268258), (0.3488092, -0.1961674, 0.16268258), (0.26717925, -0.05017959, 0.16268258), (0.26717925, -0.05017959, 0.16268258), (0.26717925, 0.019255815, 0.16268258), (0.26717925, 0.019255815, 0.16268258), (0.26717925, -0.087841004, 0.16268258), (0.26717925, -0.087841004, 0.16268258), (0.26717925, 0.030143026, 0.16268258), (0.26717925, 0.030143026, 0.16268258), (0.26717925, -0.07695379, 0.16268258), (0.26717925, -0.07695379, 0.16268258), (0.26717925, -0.00751839, 0.16268258), (0.26717925, -0.00751839, 0.16268258), (0.26717925, -0.11461521, 0.16268258), (0.26717925, -0.11461521, 0.16268258), (0.26717925, 0.0033688212, 0.16268258), (0.26717925, 0.0033688212, 0.16268258), (0.26717925, -0.103728, 0.16268258), (0.26717925, -0.103728, 0.16268258), (0.26717925, -0.034292594, 0.16268258), (0.26717925, -0.034292594, 0.16268258), (0.26717925, -0.023405384, 0.16268258), (0.26717925, -0.023405384, 0.16268258), (0.26717925, -0.0610668, 0.16268258), (0.26717925, -0.0610668, 0.16268258), (0.23720387, 0.111635305, 0.16268258), (0.23720387, 0.111635305, 0.16268258), (0.23720387, 0.14663503, 0.16268258), (0.23720387, 0.14663503, 0.16268258), (0.24439158, 0.08913504, 0.16268258), (0.24439158, 0.08913504, 0.16268258), (0.24439158, -0.056878548, 0.16268258), (0.24439158, -0.056878548, 0.16268258), (0.24439158, 0.025954774, 0.16268258), (0.24439158, 0.025954774, 0.16268258), (0.24439158, -0.081142046, 0.16268258), (0.24439158, -0.081142046, 0.16268258), (0.24439158, 0.04058683, 0.16268258), (0.24439158, 0.04058683, 0.16268258), (0.24439158, 0.062360838, 0.16268258), (0.24439158, 0.062360838, 0.16268258), (0.24439158, 0.023444068, 0.16268258), (0.24439158, 0.023444068, 0.16268258), (0.24439158, -0.08365275, 0.16268258), (0.24439158, -0.08365275, 0.16268258), (0.24439158, -0.10791625, 0.16268258), (0.24439158, -0.10791625, 0.16268258), (0.24439158, -0.0020747846, 0.16268258), (0.24439158, -0.0020747846, 0.16268258), (0.24439158, -0.110426955, 0.16268258), (0.24439158, -0.110426955, 0.16268258), (0.24439158, -0.027593637, 0.16268258), (0.24439158, -0.027593637, 0.16268258), (0.24439158, -0.030104343, 0.16268258), (0.24439158, -0.030104343, 0.16268258), (0.24439158, -0.05436784, 0.16268258), (0.24439158, -0.05436784, 0.16268258), (0.24439158, 0.067361034, 0.16268258), (0.24439158, 0.067361034, 0.16268258), (0.2654489, 0.03239792, 0.16268258), (0.2654489, 0.03239792, 0.16268258), (0.2654489, 0.017001336, 0.16268258), (0.2654489, 0.017001336, 0.16268258), (0.2654489, -0.03654749, 0.16268258), (0.2654489, -0.03654749, 0.16268258), (0.2654489, 0.0056237145, 0.16268258), (0.2654489, 0.0056237145, 0.16268258), (0.2654489, -0.063321695, 0.16268258), (0.2654489, -0.063321695, 0.16268258), (0.2654489, -0.02115049, 0.16268258), (0.2654489, -0.02115049, 0.16268258), (0.2654489, -0.07469932, 0.16268258), (0.2654489, -0.07469932, 0.16268258), (0.2654489, -0.0900959, 0.16268258), (0.2654489, -0.0900959, 0.16268258), (0.2654489, -0.047924694, 0.16268258), (0.2654489, -0.047924694, 0.16268258), (0.2654489, -0.10147352, 0.16268258), (0.2654489, -0.10147352, 0.16268258), (0.2654489, -0.009773283, 0.16268258), (0.2654489, -0.009773283, 0.16268258), (0.2654489, -0.116870105, 0.16268258), (0.2654489, -0.116870105, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0002"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0002/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0002/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0, 0, 0)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_8" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 10, 20, 21, 11, 1, 10, 0, 22, 23, 1, 11, 10, 22, 16, 17, 23, 11, 16, 22, 28, 29, 23, 17, 16, 28, 4, 5, 29, 17, 4, 28, 36, 37, 29, 5, 4, 36, 38, 39, 37, 5, 38, 36, 32, 33, 37, 39, 38, 32, 44, 45, 33, 39, 44, 32, 46, 47, 33, 45, 44, 46, 12, 13, 47, 45, 12, 46, 48, 49, 47, 13, 12, 48, 42, 43, 49, 13, 42, 48, 30, 31, 49, 43, 42, 30, 40, 41, 31, 43, 40, 30, 34, 35, 31, 41, 40, 34, 6, 7, 35, 41, 6, 34, 26, 27, 35, 7, 6, 26, 14, 15, 27, 7, 14, 26, 24, 25, 27, 15, 14, 24, 8, 9, 25, 15, 8, 24, 2, 3, 25, 9, 8, 2, 18, 19, 3, 9]
                rel material:binding = </world/microwave/link_1/material0003>
                point3f[] points = [(0.23718806, -0.065950945, 0.16268258), (0.23718806, -0.065950945, 0.16268258), (0.23718806, -0.045295443, 0.16268258), (0.23718806, -0.045295443, 0.16268258), (0.22753, -0.06296189, 0.16268258), (0.22753, -0.06296189, 0.16268258), (0.22753, -0.048284497, 0.16268258), (0.22753, -0.048284497, 0.16268258), (0.23193954, -0.045327887, 0.16268258), (0.23193954, -0.045327887, 0.16268258), (0.23193954, -0.065918505, 0.16268258), (0.23193954, -0.065918505, 0.16268258), (0.224704, -0.055623196, 0.16268258), (0.224704, -0.055623196, 0.16268258), (0.22955237, -0.04653457, 0.16268258), (0.22955237, -0.04653457, 0.16268258), (0.22955237, -0.06471182, 0.16268258), (0.22955237, -0.06471182, 0.16268258), (0.23454757, -0.044735983, 0.16268258), (0.23454757, -0.044735983, 0.16268258), (0.23454757, -0.06651041, 0.16268258), (0.23454757, -0.06651041, 0.16268258), (0.239611, -0.06476173, 0.16268258), (0.239611, -0.06476173, 0.16268258), (0.239611, -0.04648466, 0.16268258), (0.239611, -0.04648466, 0.16268258), (0.24166831, -0.04823167, 0.16268258), (0.24166831, -0.04823167, 0.16268258), (0.24166831, -0.063014716, 0.16268258), (0.24166831, -0.063014716, 0.16268258), (0.24421437, -0.052944858, 0.16268258), (0.24421437, -0.052944858, 0.16268258), (0.24421437, -0.05830153, 0.16268258), (0.24421437, -0.05830153, 0.16268258), (0.2432348, -0.050429992, 0.16268258), (0.2432348, -0.050429992, 0.16268258), (0.2432348, -0.060816396, 0.16268258), (0.2432348, -0.060816396, 0.16268258), (0.2259918, -0.06077355, 0.16268258), (0.2259918, -0.06077355, 0.16268258), (0.2259918, -0.050472837, 0.16268258), (0.2259918, -0.050472837, 0.16268258), (0.22503053, -0.05296857, 0.16268258), (0.22503053, -0.05296857, 0.16268258), (0.22503053, -0.05827782, 0.16268258), (0.22503053, -0.05827782, 0.16268258), (0.24439158, -0.056878548, 0.16268258), (0.24439158, -0.056878548, 0.16268258), (0.24439158, -0.05436784, 0.16268258), (0.24439158, -0.05436784, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0003"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0003/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0003/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_9" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [30, 22, 28, 29, 23, 31, 22, 30, 36, 37, 31, 23, 22, 36, 20, 21, 37, 23, 20, 36, 52, 53, 37, 21, 20, 52, 0, 1, 53, 21, 0, 52, 50, 51, 53, 1, 0, 50, 10, 11, 51, 1, 10, 50, 14, 15, 51, 11, 10, 14, 46, 47, 15, 11, 46, 14, 40, 41, 15, 47, 46, 40, 6, 7, 41, 47, 6, 40, 42, 43, 41, 7, 6, 42, 16, 17, 43, 7, 16, 42, 38, 39, 43, 17, 16, 38, 4, 5, 39, 17, 4, 38, 44, 45, 39, 5, 44, 38, 12, 13, 39, 45, 44, 12, 48, 49, 13, 45, 44, 48, 8, 9, 49, 45, 8, 48, 54, 55, 49, 9, 8, 54, 2, 3, 55, 9, 2, 54, 34, 35, 55, 3, 2, 34, 18, 19, 35, 3, 18, 34, 32, 33, 35, 19, 18, 32, 24, 25, 33, 19, 24, 32, 26, 27, 33, 25]
                rel material:binding = </world/microwave/link_1/material0004>
                point3f[] points = [(0.2500523, -0.063321695, 0.16268258), (0.2500523, -0.063321695, 0.16268258), (0.2500523, -0.047924694, 0.16268258), (0.2500523, -0.047924694, 0.16268258), (0.24704744, -0.054225586, 0.16268258), (0.24704744, -0.054225586, 0.16268258), (0.24704744, -0.057020806, 0.16268258), (0.24704744, -0.057020806, 0.16268258), (0.24832235, -0.05017959, 0.16268258), (0.24832235, -0.05017959, 0.16268258), (0.24832235, -0.0610668, 0.16268258), (0.24832235, -0.0610668, 0.16268258), (0.26826698, -0.052805513, 0.16268258), (0.26826698, -0.052805513, 0.16268258), (0.26826698, -0.058440875, 0.16268258), (0.26826698, -0.058440875, 0.16268258), (0.24686359, -0.055623196, 0.16268258), (0.24686359, -0.055623196, 0.16268258), (0.2523072, -0.046194736, 0.16268258), (0.2523072, -0.046194736, 0.16268258), (0.2523072, -0.06505165, 0.16268258), (0.2523072, -0.06505165, 0.16268258), (0.25493312, -0.06613938, 0.16268258), (0.25493312, -0.06613938, 0.16268258), (0.25493312, -0.045107014, 0.16268258), (0.25493312, -0.045107014, 0.16268258), (0.2577508, -0.044735983, 0.16268258), (0.2577508, -0.044735983, 0.16268258), (0.2577508, -0.06651041, 0.16268258), (0.2577508, -0.06651041, 0.16268258), (0.2605685, -0.06613938, 0.16268258), (0.2605685, -0.06613938, 0.16268258), (0.2605685, -0.045107014, 0.16268258), (0.2605685, -0.045107014, 0.16268258), (0.2631944, -0.046194736, 0.16268258), (0.2631944, -0.046194736, 0.16268258), (0.2631944, -0.06505165, 0.16268258), (0.2631944, -0.06505165, 0.16268258), (0.26845375, -0.054225586, 0.16268258), (0.26845375, -0.054225586, 0.16268258), (0.26845375, -0.057020806, 0.16268258), (0.26845375, -0.057020806, 0.16268258), (0.268638, -0.055623196, 0.16268258), (0.268638, -0.055623196, 0.16268258), (0.24723463, -0.052805513, 0.16268258), (0.24723463, -0.052805513, 0.16268258), (0.24723463, -0.058440875, 0.16268258), (0.24723463, -0.058440875, 0.16268258), (0.26717925, -0.05017959, 0.16268258), (0.26717925, -0.05017959, 0.16268258), (0.26717925, -0.0610668, 0.16268258), (0.26717925, -0.0610668, 0.16268258), (0.2654489, -0.063321695, 0.16268258), (0.2654489, -0.063321695, 0.16268258), (0.2654489, -0.047924694, 0.16268258), (0.2654489, -0.047924694, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0004"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0004/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0004/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_10" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [4, 30, 2, 3, 31, 5, 30, 4, 10, 11, 5, 31, 30, 10, 54, 55, 11, 31, 54, 10, 38, 39, 11, 55, 54, 38, 26, 27, 39, 55, 26, 38, 20, 21, 39, 27, 26, 20, 24, 25, 21, 27, 24, 20, 46, 47, 21, 25, 24, 46, 16, 17, 47, 25, 16, 46, 36, 37, 47, 17, 16, 36, 50, 51, 37, 17, 50, 36, 12, 13, 37, 51, 50, 12, 42, 43, 13, 51, 42, 12, 34, 35, 13, 43, 42, 34, 48, 49, 35, 43, 48, 34, 14, 15, 35, 49, 14, 34, 44, 45, 35, 15, 14, 44, 18, 19, 45, 15, 14, 18, 22, 23, 19, 15, 22, 18, 40, 41, 19, 23, 22, 40, 28, 29, 41, 23, 28, 40, 8, 9, 41, 29, 28, 8, 52, 53, 9, 29, 52, 8, 6, 7, 9, 53, 52, 6, 32, 33, 7, 53, 32, 6, 0, 1, 7, 33]
                rel material:binding = </world/microwave/link_1/material0005>
                point3f[] points = [(0.281657, -0.044735983, 0.16268258), (0.281657, -0.044735983, 0.16268258), (0.281657, -0.06651041, 0.16268258), (0.281657, -0.06651041, 0.16268258), (0.28447467, -0.06613938, 0.16268258), (0.28447467, -0.06613938, 0.16268258), (0.28447467, -0.045107014, 0.16268258), (0.28447467, -0.045107014, 0.16268258), (0.2871006, -0.046194736, 0.16268258), (0.2871006, -0.046194736, 0.16268258), (0.2871006, -0.06505165, 0.16268258), (0.2871006, -0.06505165, 0.16268258), (0.29254422, -0.055623196, 0.16268258), (0.29254422, -0.055623196, 0.16268258), (0.2711408, -0.052805513, 0.16268258), (0.2711408, -0.052805513, 0.16268258), (0.2711408, -0.058440875, 0.16268258), (0.2711408, -0.058440875, 0.16268258), (0.29108545, -0.05017959, 0.16268258), (0.29108545, -0.05017959, 0.16268258), (0.29108545, -0.0610668, 0.16268258), (0.29108545, -0.0610668, 0.16268258), (0.27222812, -0.05017959, 0.16268258), (0.27222812, -0.05017959, 0.16268258), (0.27222812, -0.0610668, 0.16268258), (0.27222812, -0.0610668, 0.16268258), (0.2739585, -0.063321695, 0.16268258), (0.2739585, -0.063321695, 0.16268258), (0.2739585, -0.047924694, 0.16268258), (0.2739585, -0.047924694, 0.16268258), (0.2788389, -0.06613938, 0.16268258), (0.2788389, -0.06613938, 0.16268258), (0.2788389, -0.045107014, 0.16268258), (0.2788389, -0.045107014, 0.16268258), (0.29236037, -0.054225586, 0.16268258), (0.29236037, -0.054225586, 0.16268258), (0.29236037, -0.057020806, 0.16268258), (0.29236037, -0.057020806, 0.16268258), (0.2893555, -0.063321695, 0.16268258), (0.2893555, -0.063321695, 0.16268258), (0.2893555, -0.047924694, 0.16268258), (0.2893555, -0.047924694, 0.16268258), (0.27076977, -0.055623196, 0.16268258), (0.27076977, -0.055623196, 0.16268258), (0.29217318, -0.052805513, 0.16268258), (0.29217318, -0.052805513, 0.16268258), (0.29217318, -0.058440875, 0.16268258), (0.29217318, -0.058440875, 0.16268258), (0.27095404, -0.054225586, 0.16268258), (0.27095404, -0.054225586, 0.16268258), (0.27095404, -0.057020806, 0.16268258), (0.27095404, -0.057020806, 0.16268258), (0.2762134, -0.046194736, 0.16268258), (0.2762134, -0.046194736, 0.16268258), (0.2762134, -0.06505165, 0.16268258), (0.2762134, -0.06505165, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0005"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0005/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0005/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_11" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [42, 16, 28, 29, 17, 43, 16, 42, 20, 21, 43, 17, 20, 42, 32, 33, 43, 21, 20, 32, 14, 15, 33, 21, 14, 32, 44, 45, 33, 15, 14, 44, 6, 7, 45, 15, 6, 44, 0, 1, 45, 7, 6, 0, 10, 11, 1, 7, 10, 0, 36, 37, 1, 11, 10, 36, 48, 49, 37, 11, 48, 36, 38, 39, 37, 49, 48, 38, 24, 25, 39, 49, 24, 38, 34, 35, 39, 25, 24, 34, 50, 51, 35, 25, 50, 34, 8, 9, 35, 51, 8, 34, 2, 3, 35, 9, 8, 2, 4, 5, 3, 9, 4, 2, 46, 47, 3, 5, 4, 46, 12, 13, 47, 5, 12, 46, 30, 31, 47, 13, 12, 30, 22, 23, 31, 13, 22, 30, 40, 41, 31, 23, 22, 40, 18, 19, 41, 23, 18, 40, 26, 27, 41, 19]
                rel material:binding = </world/microwave/link_1/material0006>
                point3f[] points = [(0.313416, -0.06077355, 0.16268258), (0.313416, -0.06077355, 0.16268258), (0.313416, -0.050472837, 0.16268258), (0.313416, -0.050472837, 0.16268258), (0.296173, -0.050429992, 0.16268258), (0.296173, -0.050429992, 0.16268258), (0.296173, -0.060816396, 0.16268258), (0.296173, -0.060816396, 0.16268258), (0.29519343, -0.052944858, 0.16268258), (0.29519343, -0.052944858, 0.16268258), (0.29519343, -0.05830153, 0.16268258), (0.29519343, -0.05830153, 0.16268258), (0.2977395, -0.04823167, 0.16268258), (0.2977395, -0.04823167, 0.16268258), (0.2977395, -0.063014716, 0.16268258), (0.2977395, -0.063014716, 0.16268258), (0.30221933, -0.065950945, 0.16268258), (0.30221933, -0.065950945, 0.16268258), (0.30221933, -0.045295443, 0.16268258), (0.30221933, -0.045295443, 0.16268258), (0.29979682, -0.06476173, 0.16268258), (0.29979682, -0.06476173, 0.16268258), (0.29979682, -0.04648466, 0.16268258), (0.29979682, -0.04648466, 0.16268258), (0.29486024, -0.055623196, 0.16268258), (0.29486024, -0.055623196, 0.16268258), (0.30486023, -0.044735983, 0.16268258), (0.30486023, -0.044735983, 0.16268258), (0.30486023, -0.06651041, 0.16268258), (0.30486023, -0.06651041, 0.16268258), (0.30985543, -0.04653457, 0.16268258), (0.30985543, -0.04653457, 0.16268258), (0.30985543, -0.06471182, 0.16268258), (0.30985543, -0.06471182, 0.16268258), (0.31437686, -0.05296857, 0.16268258), (0.31437686, -0.05296857, 0.16268258), (0.31437686, -0.05827782, 0.16268258), (0.31437686, -0.05827782, 0.16268258), (0.31470382, -0.055623196, 0.16268258), (0.31470382, -0.055623196, 0.16268258), (0.30746827, -0.045327887, 0.16268258), (0.30746827, -0.045327887, 0.16268258), (0.30746827, -0.065918505, 0.16268258), (0.30746827, -0.065918505, 0.16268258), (0.31187782, -0.06296189, 0.16268258), (0.31187782, -0.06296189, 0.16268258), (0.31187782, -0.048284497, 0.16268258), (0.31187782, -0.048284497, 0.16268258), (0.29501623, -0.056878548, 0.16268258), (0.29501623, -0.056878548, 0.16268258), (0.29501623, -0.05436784, 0.16268258), (0.29501623, -0.05436784, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0006"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0006/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0006/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_12" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 44, 22, 23, 45, 3, 44, 2, 26, 27, 3, 45, 44, 26, 16, 17, 27, 45, 16, 26, 6, 7, 27, 17, 16, 6, 38, 39, 7, 17, 38, 6, 14, 15, 7, 39, 38, 14, 34, 35, 15, 39, 34, 14, 10, 11, 15, 35, 34, 10, 50, 51, 11, 35, 50, 10, 32, 33, 11, 51, 50, 32, 46, 47, 33, 51, 46, 32, 24, 25, 33, 47, 46, 24, 30, 31, 25, 47, 46, 30, 48, 49, 31, 47, 48, 30, 8, 9, 31, 49, 48, 8, 36, 37, 9, 49, 36, 8, 12, 13, 9, 37, 36, 12, 40, 41, 13, 37, 40, 12, 4, 5, 13, 41, 40, 4, 18, 19, 5, 41, 18, 4, 28, 29, 5, 19, 18, 28, 42, 43, 29, 19, 42, 28, 0, 1, 29, 43, 42, 0, 20, 21, 1, 43]
                rel material:binding = </world/microwave/link_1/material0007>
                point3f[] points = [(0.30750072, -0.018521238, 0.16268258), (0.30750072, -0.018521238, 0.16268258), (0.30750072, -0.03917674, 0.16268258), (0.30750072, -0.03917674, 0.16268258), (0.31198055, -0.021457465, 0.16268258), (0.31198055, -0.021457465, 0.16268258), (0.31198055, -0.036240514, 0.16268258), (0.31198055, -0.036240514, 0.16268258), (0.31452662, -0.026170654, 0.16268258), (0.31452662, -0.026170654, 0.16268258), (0.31452662, -0.031527326, 0.16268258), (0.31452662, -0.031527326, 0.16268258), (0.31354704, -0.023655789, 0.16268258), (0.31354704, -0.023655789, 0.16268258), (0.31354704, -0.03404219, 0.16268258), (0.31354704, -0.03404219, 0.16268258), (0.29986504, -0.03793761, 0.16268258), (0.29986504, -0.03793761, 0.16268258), (0.29986504, -0.019760368, 0.16268258), (0.29986504, -0.019760368, 0.16268258), (0.30486023, -0.017961778, 0.16268258), (0.30486023, -0.017961778, 0.16268258), (0.30486023, -0.0397362, 0.16268258), (0.30486023, -0.0397362, 0.16268258), (0.3148602, -0.028848989, 0.16268258), (0.3148602, -0.028848989, 0.16268258), (0.30992365, -0.037987527, 0.16268258), (0.30992365, -0.037987527, 0.16268258), (0.30992365, -0.019710453, 0.16268258), (0.30992365, -0.019710453, 0.16268258), (0.31470382, -0.027593637, 0.16268258), (0.31470382, -0.027593637, 0.16268258), (0.31470382, -0.030104343, 0.16268258), (0.31470382, -0.030104343, 0.16268258), (0.29630443, -0.033999346, 0.16268258), (0.29630443, -0.033999346, 0.16268258), (0.29630443, -0.023698632, 0.16268258), (0.29630443, -0.023698632, 0.16268258), (0.29784223, -0.036187686, 0.16268258), (0.29784223, -0.036187686, 0.16268258), (0.29784223, -0.021510292, 0.16268258), (0.29784223, -0.021510292, 0.16268258), (0.3022518, -0.018553682, 0.16268258), (0.3022518, -0.018553682, 0.16268258), (0.3022518, -0.039144296, 0.16268258), (0.3022518, -0.039144296, 0.16268258), (0.29501623, -0.028848989, 0.16268258), (0.29501623, -0.028848989, 0.16268258), (0.29534316, -0.026194364, 0.16268258), (0.29534316, -0.026194364, 0.16268258), (0.29534316, -0.031503614, 0.16268258), (0.29534316, -0.031503614, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0007"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0007/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0007/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_13" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [4, 30, 2, 3, 31, 5, 30, 4, 54, 55, 5, 31, 54, 4, 10, 11, 5, 55, 54, 10, 26, 27, 11, 55, 26, 10, 38, 39, 11, 27, 26, 38, 22, 23, 39, 27, 22, 38, 18, 19, 39, 23, 22, 18, 14, 15, 19, 23, 14, 18, 44, 45, 19, 15, 14, 44, 48, 49, 45, 15, 48, 44, 34, 35, 45, 49, 48, 34, 12, 13, 35, 49, 48, 12, 42, 43, 13, 49, 42, 12, 50, 51, 13, 43, 50, 12, 36, 37, 13, 51, 50, 36, 16, 17, 37, 51, 16, 36, 46, 47, 37, 17, 16, 46, 24, 25, 47, 17, 24, 46, 20, 21, 47, 25, 24, 20, 28, 29, 21, 25, 28, 20, 40, 41, 21, 29, 28, 40, 52, 53, 41, 29, 52, 40, 8, 9, 41, 53, 52, 8, 32, 33, 9, 53, 32, 8, 6, 7, 9, 33, 32, 6, 0, 1, 7, 33]
                rel material:binding = </world/microwave/link_1/material0008>
                point3f[] points = [(0.281657, -0.017961778, 0.16268258), (0.281657, -0.017961778, 0.16268258), (0.281657, -0.0397362, 0.16268258), (0.281657, -0.0397362, 0.16268258), (0.28447467, -0.03936517, 0.16268258), (0.28447467, -0.03936517, 0.16268258), (0.28447467, -0.01833281, 0.16268258), (0.28447467, -0.01833281, 0.16268258), (0.2871006, -0.019420533, 0.16268258), (0.2871006, -0.019420533, 0.16268258), (0.2871006, -0.038277447, 0.16268258), (0.2871006, -0.038277447, 0.16268258), (0.29254422, -0.028848989, 0.16268258), (0.29254422, -0.028848989, 0.16268258), (0.2711408, -0.03166667, 0.16268258), (0.2711408, -0.03166667, 0.16268258), (0.2711408, -0.02603131, 0.16268258), (0.2711408, -0.02603131, 0.16268258), (0.29108545, -0.034292594, 0.16268258), (0.29108545, -0.034292594, 0.16268258), (0.29108545, -0.023405384, 0.16268258), (0.29108545, -0.023405384, 0.16268258), (0.27222812, -0.034292594, 0.16268258), (0.27222812, -0.034292594, 0.16268258), (0.27222812, -0.023405384, 0.16268258), (0.27222812, -0.023405384, 0.16268258), (0.2739585, -0.03654749, 0.16268258), (0.2739585, -0.03654749, 0.16268258), (0.2739585, -0.02115049, 0.16268258), (0.2739585, -0.02115049, 0.16268258), (0.2788389, -0.03936517, 0.16268258), (0.2788389, -0.03936517, 0.16268258), (0.2788389, -0.01833281, 0.16268258), (0.2788389, -0.01833281, 0.16268258), (0.29236037, -0.030246599, 0.16268258), (0.29236037, -0.030246599, 0.16268258), (0.29236037, -0.02745138, 0.16268258), (0.29236037, -0.02745138, 0.16268258), (0.2893555, -0.03654749, 0.16268258), (0.2893555, -0.03654749, 0.16268258), (0.2893555, -0.02115049, 0.16268258), (0.2893555, -0.02115049, 0.16268258), (0.27076977, -0.028848989, 0.16268258), (0.27076977, -0.028848989, 0.16268258), (0.29217318, -0.03166667, 0.16268258), (0.29217318, -0.03166667, 0.16268258), (0.29217318, -0.02603131, 0.16268258), (0.29217318, -0.02603131, 0.16268258), (0.27095404, -0.030246599, 0.16268258), (0.27095404, -0.030246599, 0.16268258), (0.27095404, -0.02745138, 0.16268258), (0.27095404, -0.02745138, 0.16268258), (0.2762134, -0.019420533, 0.16268258), (0.2762134, -0.019420533, 0.16268258), (0.2762134, -0.038277447, 0.16268258), (0.2762134, -0.038277447, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0008"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0008/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0008/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_14" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [30, 22, 28, 29, 23, 31, 22, 30, 20, 21, 31, 23, 20, 30, 36, 37, 31, 21, 20, 36, 0, 1, 37, 21, 0, 36, 52, 53, 37, 1, 0, 52, 8, 9, 53, 1, 8, 52, 48, 49, 53, 9, 8, 48, 44, 45, 49, 9, 44, 48, 12, 13, 49, 45, 44, 12, 4, 5, 13, 45, 4, 12, 38, 39, 13, 5, 4, 38, 42, 43, 39, 5, 4, 42, 16, 17, 43, 5, 16, 42, 6, 7, 43, 17, 6, 42, 40, 41, 43, 7, 6, 40, 46, 47, 41, 7, 46, 40, 14, 15, 41, 47, 46, 14, 10, 11, 15, 47, 10, 14, 50, 51, 15, 11, 10, 50, 2, 3, 51, 11, 2, 50, 54, 55, 51, 3, 2, 54, 18, 19, 55, 3, 18, 54, 34, 35, 55, 19, 18, 34, 24, 25, 35, 19, 24, 34, 32, 33, 35, 25, 24, 32, 26, 27, 33, 25]
                rel material:binding = </world/microwave/link_1/material0009>
                point3f[] points = [(0.2500523, -0.03654749, 0.16268258), (0.2500523, -0.03654749, 0.16268258), (0.2500523, -0.02115049, 0.16268258), (0.2500523, -0.02115049, 0.16268258), (0.24704744, -0.030246599, 0.16268258), (0.24704744, -0.030246599, 0.16268258), (0.24704744, -0.02745138, 0.16268258), (0.24704744, -0.02745138, 0.16268258), (0.24832235, -0.034292594, 0.16268258), (0.24832235, -0.034292594, 0.16268258), (0.24832235, -0.023405384, 0.16268258), (0.24832235, -0.023405384, 0.16268258), (0.26826698, -0.03166667, 0.16268258), (0.26826698, -0.03166667, 0.16268258), (0.26826698, -0.02603131, 0.16268258), (0.26826698, -0.02603131, 0.16268258), (0.24686359, -0.028848989, 0.16268258), (0.24686359, -0.028848989, 0.16268258), (0.2523072, -0.019420533, 0.16268258), (0.2523072, -0.019420533, 0.16268258), (0.2523072, -0.038277447, 0.16268258), (0.2523072, -0.038277447, 0.16268258), (0.25493312, -0.03936517, 0.16268258), (0.25493312, -0.03936517, 0.16268258), (0.25493312, -0.01833281, 0.16268258), (0.25493312, -0.01833281, 0.16268258), (0.2577508, -0.017961778, 0.16268258), (0.2577508, -0.017961778, 0.16268258), (0.2577508, -0.0397362, 0.16268258), (0.2577508, -0.0397362, 0.16268258), (0.2605685, -0.03936517, 0.16268258), (0.2605685, -0.03936517, 0.16268258), (0.2605685, -0.01833281, 0.16268258), (0.2605685, -0.01833281, 0.16268258), (0.2631944, -0.019420533, 0.16268258), (0.2631944, -0.019420533, 0.16268258), (0.2631944, -0.038277447, 0.16268258), (0.2631944, -0.038277447, 0.16268258), (0.26845375, -0.030246599, 0.16268258), (0.26845375, -0.030246599, 0.16268258), (0.26845375, -0.02745138, 0.16268258), (0.26845375, -0.02745138, 0.16268258), (0.268638, -0.028848989, 0.16268258), (0.268638, -0.028848989, 0.16268258), (0.24723463, -0.03166667, 0.16268258), (0.24723463, -0.03166667, 0.16268258), (0.24723463, -0.02603131, 0.16268258), (0.24723463, -0.02603131, 0.16268258), (0.26717925, -0.034292594, 0.16268258), (0.26717925, -0.034292594, 0.16268258), (0.26717925, -0.023405384, 0.16268258), (0.26717925, -0.023405384, 0.16268258), (0.2654489, -0.03654749, 0.16268258), (0.2654489, -0.03654749, 0.16268258), (0.2654489, -0.02115049, 0.16268258), (0.2654489, -0.02115049, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0009"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0009/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0009/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_15" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 46, 14, 15, 47, 3, 46, 2, 16, 17, 3, 47, 46, 16, 8, 9, 17, 47, 8, 16, 22, 23, 17, 9, 8, 22, 42, 43, 23, 9, 42, 22, 34, 35, 23, 43, 42, 34, 30, 31, 35, 43, 30, 34, 26, 27, 35, 31, 30, 26, 38, 39, 27, 31, 38, 26, 50, 51, 27, 39, 38, 50, 6, 7, 51, 39, 6, 50, 48, 49, 51, 7, 6, 48, 4, 5, 49, 7, 4, 48, 24, 25, 49, 5, 4, 24, 36, 37, 25, 5, 36, 24, 32, 33, 25, 37, 36, 32, 28, 29, 33, 37, 28, 32, 40, 41, 33, 29, 40, 32, 20, 21, 33, 41, 40, 20, 18, 19, 21, 41, 40, 18, 10, 11, 19, 41, 10, 18, 44, 45, 19, 11, 44, 18, 0, 1, 19, 45, 44, 0, 12, 13, 1, 45]
                rel material:binding = </world/microwave/link_1/material0010>
                point3f[] points = [(0.23718806, -0.018521238, 0.16268258), (0.23718806, -0.018521238, 0.16268258), (0.23718806, -0.03917674, 0.16268258), (0.23718806, -0.03917674, 0.16268258), (0.224704, -0.027593637, 0.16268258), (0.224704, -0.027593637, 0.16268258), (0.224704, -0.030104343, 0.16268258), (0.224704, -0.030104343, 0.16268258), (0.22948416, -0.037987527, 0.16268258), (0.22948416, -0.037987527, 0.16268258), (0.22948416, -0.019710453, 0.16268258), (0.22948416, -0.019710453, 0.16268258), (0.23454757, -0.017961778, 0.16268258), (0.23454757, -0.017961778, 0.16268258), (0.23454757, -0.0397362, 0.16268258), (0.23454757, -0.0397362, 0.16268258), (0.239611, -0.037987527, 0.16268258), (0.239611, -0.037987527, 0.16268258), (0.239611, -0.019710453, 0.16268258), (0.239611, -0.019710453, 0.16268258), (0.24166831, -0.021457465, 0.16268258), (0.24166831, -0.021457465, 0.16268258), (0.24166831, -0.036240514, 0.16268258), (0.24166831, -0.036240514, 0.16268258), (0.24421437, -0.026170654, 0.16268258), (0.24421437, -0.026170654, 0.16268258), (0.24421437, -0.031527326, 0.16268258), (0.24421437, -0.031527326, 0.16268258), (0.22586077, -0.023655789, 0.16268258), (0.22586077, -0.023655789, 0.16268258), (0.22586077, -0.03404219, 0.16268258), (0.22586077, -0.03404219, 0.16268258), (0.2432348, -0.023655789, 0.16268258), (0.2432348, -0.023655789, 0.16268258), (0.2432348, -0.03404219, 0.16268258), (0.2432348, -0.03404219, 0.16268258), (0.22488119, -0.026170654, 0.16268258), (0.22488119, -0.026170654, 0.16268258), (0.22488119, -0.031527326, 0.16268258), (0.22488119, -0.031527326, 0.16268258), (0.22742726, -0.021457465, 0.16268258), (0.22742726, -0.021457465, 0.16268258), (0.22742726, -0.036240514, 0.16268258), (0.22742726, -0.036240514, 0.16268258), (0.2319071, -0.018521238, 0.16268258), (0.2319071, -0.018521238, 0.16268258), (0.2319071, -0.03917674, 0.16268258), (0.2319071, -0.03917674, 0.16268258), (0.24439158, -0.027593637, 0.16268258), (0.24439158, -0.027593637, 0.16268258), (0.24439158, -0.030104343, 0.16268258), (0.24439158, -0.030104343, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0010"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0010/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0010/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_16" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 42, 20, 21, 43, 1, 42, 0, 16, 17, 1, 43, 16, 0, 24, 25, 1, 17, 16, 24, 36, 37, 25, 17, 36, 24, 6, 7, 25, 37, 36, 6, 30, 31, 7, 37, 30, 6, 10, 11, 7, 31, 30, 10, 32, 33, 11, 31, 32, 10, 46, 47, 11, 33, 32, 46, 14, 15, 47, 33, 14, 46, 48, 49, 47, 15, 14, 48, 12, 13, 49, 15, 12, 48, 44, 45, 49, 13, 12, 44, 34, 35, 45, 13, 34, 44, 8, 9, 45, 35, 34, 8, 28, 29, 9, 35, 28, 8, 4, 5, 9, 29, 28, 4, 38, 39, 5, 29, 38, 4, 26, 27, 5, 39, 38, 26, 18, 19, 27, 39, 18, 26, 2, 3, 27, 19, 18, 2, 40, 41, 3, 19, 40, 2, 22, 23, 3, 41]
                rel material:binding = </world/microwave/link_1/material0011>
                point3f[] points = [(0.23715603, -0.012370092, 0.16268258), (0.23715603, -0.012370092, 0.16268258), (0.23715603, 0.008220523, 0.16268258), (0.23715603, 0.008220523, 0.16268258), (0.24156557, 0.005263913, 0.16268258), (0.24156557, 0.005263913, 0.16268258), (0.24156557, -0.009413483, 0.16268258), (0.24156557, -0.009413483, 0.16268258), (0.24310336, 0.003075573, 0.16268258), (0.24310336, 0.003075573, 0.16268258), (0.24310336, -0.007225142, 0.16268258), (0.24310336, -0.007225142, 0.16268258), (0.224704, -0.0008194318, 0.16268258), (0.224704, -0.0008194318, 0.16268258), (0.224704, -0.0033301373, 0.16268258), (0.224704, -0.0033301373, 0.16268258), (0.22948416, -0.01121332, 0.16268258), (0.22948416, -0.01121332, 0.16268258), (0.22948416, 0.0070637516, 0.16268258), (0.22948416, 0.0070637516, 0.16268258), (0.23454757, -0.012961996, 0.16268258), (0.23454757, -0.012961996, 0.16268258), (0.23454757, 0.0088124275, 0.16268258), (0.23454757, 0.0088124275, 0.16268258), (0.23954278, -0.011163406, 0.16268258), (0.23954278, -0.011163406, 0.16268258), (0.23954278, 0.007013837, 0.16268258), (0.23954278, 0.007013837, 0.16268258), (0.22586077, 0.0031184163, 0.16268258), (0.22586077, 0.0031184163, 0.16268258), (0.22586077, -0.0072679855, 0.16268258), (0.22586077, -0.0072679855, 0.16268258), (0.22488119, -0.0047531202, 0.16268258), (0.22488119, -0.0047531202, 0.16268258), (0.22488119, 0.000603551, 0.16268258), (0.22488119, 0.000603551, 0.16268258), (0.22742726, -0.009466309, 0.16268258), (0.22742726, -0.009466309, 0.16268258), (0.22742726, 0.0053167394, 0.16268258), (0.22742726, 0.0053167394, 0.16268258), (0.2319071, 0.008252967, 0.16268258), (0.2319071, 0.008252967, 0.16268258), (0.2319071, -0.012402536, 0.16268258), (0.2319071, -0.012402536, 0.16268258), (0.24406463, 0.00057984155, 0.16268258), (0.24406463, 0.00057984155, 0.16268258), (0.24406463, -0.0047294106, 0.16268258), (0.24406463, -0.0047294106, 0.16268258), (0.24439158, -0.0020747846, 0.16268258), (0.24439158, -0.0020747846, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0011"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0011/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0011/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_17" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [32, 24, 26, 27, 25, 33, 24, 32, 18, 19, 33, 25, 18, 32, 34, 35, 33, 19, 18, 34, 2, 3, 35, 19, 2, 34, 54, 55, 35, 3, 2, 54, 8, 9, 55, 3, 8, 54, 48, 49, 55, 9, 8, 48, 44, 45, 49, 9, 44, 48, 12, 13, 49, 45, 44, 12, 4, 5, 13, 45, 4, 12, 38, 39, 13, 5, 4, 38, 42, 43, 39, 5, 4, 42, 16, 17, 43, 5, 16, 42, 6, 7, 43, 17, 6, 42, 40, 41, 43, 7, 6, 40, 46, 47, 41, 7, 46, 40, 14, 15, 41, 47, 46, 14, 10, 11, 15, 47, 10, 14, 50, 51, 15, 11, 10, 50, 0, 1, 51, 11, 0, 50, 52, 53, 51, 1, 0, 52, 20, 21, 53, 1, 20, 52, 36, 37, 53, 21, 20, 36, 22, 23, 37, 21, 22, 36, 30, 31, 37, 23, 22, 30, 28, 29, 31, 23]
                rel material:binding = </world/microwave/link_1/material0012>
                point3f[] points = [(0.2500523, 0.0056237145, 0.16268258), (0.2500523, 0.0056237145, 0.16268258), (0.2500523, -0.009773283, 0.16268258), (0.2500523, -0.009773283, 0.16268258), (0.24704744, -0.003472394, 0.16268258), (0.24704744, -0.003472394, 0.16268258), (0.24704744, -0.00067717506, 0.16268258), (0.24704744, -0.00067717506, 0.16268258), (0.24832235, -0.00751839, 0.16268258), (0.24832235, -0.00751839, 0.16268258), (0.24832235, 0.0033688212, 0.16268258), (0.24832235, 0.0033688212, 0.16268258), (0.26826698, -0.004892465, 0.16268258), (0.26826698, -0.004892465, 0.16268258), (0.26826698, 0.000742896, 0.16268258), (0.26826698, 0.000742896, 0.16268258), (0.24686359, -0.0020747846, 0.16268258), (0.24686359, -0.0020747846, 0.16268258), (0.2523072, -0.011503241, 0.16268258), (0.2523072, -0.011503241, 0.16268258), (0.2523072, 0.0073536723, 0.16268258), (0.2523072, 0.0073536723, 0.16268258), (0.25493312, 0.008441395, 0.16268258), (0.25493312, 0.008441395, 0.16268258), (0.25493312, -0.012590964, 0.16268258), (0.25493312, -0.012590964, 0.16268258), (0.2577508, -0.012961996, 0.16268258), (0.2577508, -0.012961996, 0.16268258), (0.2577508, 0.0088124275, 0.16268258), (0.2577508, 0.0088124275, 0.16268258), (0.2605685, 0.008441395, 0.16268258), (0.2605685, 0.008441395, 0.16268258), (0.2605685, -0.012590964, 0.16268258), (0.2605685, -0.012590964, 0.16268258), (0.2631944, -0.011503241, 0.16268258), (0.2631944, -0.011503241, 0.16268258), (0.2631944, 0.0073536723, 0.16268258), (0.2631944, 0.0073536723, 0.16268258), (0.26845375, -0.003472394, 0.16268258), (0.26845375, -0.003472394, 0.16268258), (0.26845375, -0.00067717506, 0.16268258), (0.26845375, -0.00067717506, 0.16268258), (0.268638, -0.0020747846, 0.16268258), (0.268638, -0.0020747846, 0.16268258), (0.24723463, -0.004892465, 0.16268258), (0.24723463, -0.004892465, 0.16268258), (0.24723463, 0.000742896, 0.16268258), (0.24723463, 0.000742896, 0.16268258), (0.26717925, -0.00751839, 0.16268258), (0.26717925, -0.00751839, 0.16268258), (0.26717925, 0.0033688212, 0.16268258), (0.26717925, 0.0033688212, 0.16268258), (0.2654489, 0.0056237145, 0.16268258), (0.2654489, 0.0056237145, 0.16268258), (0.2654489, -0.009773283, 0.16268258), (0.2654489, -0.009773283, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0012"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0012/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0012/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_18" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [6, 32, 0, 1, 33, 7, 32, 6, 8, 9, 7, 33, 32, 8, 52, 53, 9, 33, 52, 8, 40, 41, 9, 53, 52, 40, 28, 29, 41, 53, 28, 40, 18, 19, 41, 29, 28, 18, 22, 23, 19, 29, 22, 18, 44, 45, 19, 23, 22, 44, 14, 15, 45, 23, 14, 44, 34, 35, 45, 15, 14, 34, 48, 49, 35, 15, 48, 34, 12, 13, 35, 49, 48, 12, 42, 43, 13, 49, 42, 12, 36, 37, 13, 43, 42, 36, 50, 51, 37, 43, 50, 36, 16, 17, 37, 51, 16, 36, 46, 47, 37, 17, 16, 46, 24, 25, 47, 17, 24, 46, 20, 21, 47, 25, 24, 20, 38, 39, 21, 25, 24, 38, 26, 27, 39, 25, 26, 38, 54, 55, 39, 27, 54, 38, 10, 11, 39, 55, 54, 10, 4, 5, 11, 55, 54, 4, 30, 31, 5, 55, 30, 4, 2, 3, 5, 31]
                rel material:binding = </world/microwave/link_1/material0013>
                point3f[] points = [(0.281657, -0.012961996, 0.16268258), (0.281657, -0.012961996, 0.16268258), (0.281657, 0.0088124275, 0.16268258), (0.281657, 0.0088124275, 0.16268258), (0.28447467, 0.008441395, 0.16268258), (0.28447467, 0.008441395, 0.16268258), (0.28447467, -0.012590964, 0.16268258), (0.28447467, -0.012590964, 0.16268258), (0.2871006, -0.011503241, 0.16268258), (0.2871006, -0.011503241, 0.16268258), (0.2871006, 0.0073536723, 0.16268258), (0.2871006, 0.0073536723, 0.16268258), (0.29254422, -0.0020747846, 0.16268258), (0.29254422, -0.0020747846, 0.16268258), (0.2711408, -0.004892465, 0.16268258), (0.2711408, -0.004892465, 0.16268258), (0.2711408, 0.000742896, 0.16268258), (0.2711408, 0.000742896, 0.16268258), (0.29108545, -0.00751839, 0.16268258), (0.29108545, -0.00751839, 0.16268258), (0.29108545, 0.0033688212, 0.16268258), (0.29108545, 0.0033688212, 0.16268258), (0.27222812, -0.00751839, 0.16268258), (0.27222812, -0.00751839, 0.16268258), (0.27222812, 0.0033688212, 0.16268258), (0.27222812, 0.0033688212, 0.16268258), (0.2739585, 0.0056237145, 0.16268258), (0.2739585, 0.0056237145, 0.16268258), (0.2739585, -0.009773283, 0.16268258), (0.2739585, -0.009773283, 0.16268258), (0.2788389, 0.008441395, 0.16268258), (0.2788389, 0.008441395, 0.16268258), (0.2788389, -0.012590964, 0.16268258), (0.2788389, -0.012590964, 0.16268258), (0.29236037, -0.003472394, 0.16268258), (0.29236037, -0.003472394, 0.16268258), (0.29236037, -0.00067717506, 0.16268258), (0.29236037, -0.00067717506, 0.16268258), (0.2893555, 0.0056237145, 0.16268258), (0.2893555, 0.0056237145, 0.16268258), (0.2893555, -0.009773283, 0.16268258), (0.2893555, -0.009773283, 0.16268258), (0.27076977, -0.0020747846, 0.16268258), (0.27076977, -0.0020747846, 0.16268258), (0.29217318, -0.004892465, 0.16268258), (0.29217318, -0.004892465, 0.16268258), (0.29217318, 0.000742896, 0.16268258), (0.29217318, 0.000742896, 0.16268258), (0.27095404, -0.003472394, 0.16268258), (0.27095404, -0.003472394, 0.16268258), (0.27095404, -0.00067717506, 0.16268258), (0.27095404, -0.00067717506, 0.16268258), (0.2762134, -0.011503241, 0.16268258), (0.2762134, -0.011503241, 0.16268258), (0.2762134, 0.0073536723, 0.16268258), (0.2762134, 0.0073536723, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0013"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0013/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0013/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_19" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [22, 38, 8, 9, 39, 23, 38, 22, 12, 13, 23, 39, 38, 12, 4, 5, 13, 39, 4, 12, 28, 29, 13, 5, 4, 28, 36, 37, 29, 5, 36, 28, 2, 3, 29, 37, 36, 2, 32, 33, 3, 37, 32, 2, 18, 19, 3, 33, 32, 18, 46, 47, 19, 33, 46, 18, 20, 21, 19, 47, 46, 20, 42, 43, 21, 47, 42, 20, 16, 17, 21, 43, 42, 16, 44, 45, 17, 43, 44, 16, 0, 1, 17, 45, 44, 0, 30, 31, 1, 45, 30, 0, 26, 27, 1, 31, 30, 26, 34, 35, 27, 31, 34, 26, 14, 15, 27, 35, 34, 14, 6, 7, 15, 35, 6, 14, 24, 25, 15, 7, 6, 24, 40, 41, 25, 7, 40, 24, 10, 11, 25, 41]
                rel material:binding = </world/microwave/link_1/material0014>
                point3f[] points = [(0.313416, 0.003075573, 0.16268258), (0.313416, 0.003075573, 0.16268258), (0.313416, -0.007225142, 0.16268258), (0.313416, -0.007225142, 0.16268258), (0.29986504, -0.011163406, 0.16268258), (0.29986504, -0.011163406, 0.16268258), (0.29986504, 0.007013837, 0.16268258), (0.29986504, 0.007013837, 0.16268258), (0.30486023, -0.012961996, 0.16268258), (0.30486023, -0.012961996, 0.16268258), (0.30486023, 0.0088124275, 0.16268258), (0.30486023, 0.0088124275, 0.16268258), (0.30985543, -0.011163406, 0.16268258), (0.30985543, -0.011163406, 0.16268258), (0.30985543, 0.007013837, 0.16268258), (0.30985543, 0.007013837, 0.16268258), (0.31437686, 0.00057984155, 0.16268258), (0.31437686, 0.00057984155, 0.16268258), (0.31437686, -0.0047294106, 0.16268258), (0.31437686, -0.0047294106, 0.16268258), (0.31470382, -0.0020747846, 0.16268258), (0.31470382, -0.0020747846, 0.16268258), (0.30746827, -0.012370092, 0.16268258), (0.30746827, -0.012370092, 0.16268258), (0.30746827, 0.008220523, 0.16268258), (0.30746827, 0.008220523, 0.16268258), (0.31187782, 0.005263913, 0.16268258), (0.31187782, 0.005263913, 0.16268258), (0.31187782, -0.009413483, 0.16268258), (0.31187782, -0.009413483, 0.16268258), (0.29630443, 0.003075573, 0.16268258), (0.29630443, 0.003075573, 0.16268258), (0.29630443, -0.007225142, 0.16268258), (0.29630443, -0.007225142, 0.16268258), (0.29784223, 0.005263913, 0.16268258), (0.29784223, 0.005263913, 0.16268258), (0.29784223, -0.009413483, 0.16268258), (0.29784223, -0.009413483, 0.16268258), (0.3022518, -0.012370092, 0.16268258), (0.3022518, -0.012370092, 0.16268258), (0.3022518, 0.008220523, 0.16268258), (0.3022518, 0.008220523, 0.16268258), (0.29501623, -0.0020747846, 0.16268258), (0.29501623, -0.0020747846, 0.16268258), (0.29534316, 0.00057984155, 0.16268258), (0.29534316, 0.00057984155, 0.16268258), (0.29534316, -0.0047294106, 0.16268258), (0.29534316, -0.0047294106, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0014"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0014/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0014/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_20" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 44, 20, 21, 45, 1, 44, 0, 26, 27, 1, 45, 44, 26, 16, 17, 27, 45, 16, 26, 4, 5, 27, 17, 16, 4, 40, 41, 5, 17, 40, 4, 12, 13, 5, 41, 40, 12, 36, 37, 13, 41, 36, 12, 8, 9, 13, 37, 36, 8, 50, 51, 9, 37, 50, 8, 32, 33, 9, 51, 50, 32, 46, 47, 33, 51, 46, 32, 24, 25, 33, 47, 46, 24, 30, 31, 25, 47, 46, 30, 48, 49, 31, 47, 48, 30, 10, 11, 31, 49, 48, 10, 34, 35, 11, 49, 34, 10, 14, 15, 11, 35, 34, 14, 38, 39, 15, 35, 38, 14, 6, 7, 15, 39, 38, 6, 18, 19, 7, 39, 18, 6, 28, 29, 7, 19, 18, 28, 42, 43, 29, 19, 42, 28, 2, 3, 29, 43, 42, 2, 22, 23, 3, 43]
                rel material:binding = </world/microwave/link_1/material0015>
                point3f[] points = [(0.30750072, 0.014371669, 0.16268258), (0.30750072, 0.014371669, 0.16268258), (0.30750072, 0.03502759, 0.16268258), (0.30750072, 0.03502759, 0.16268258), (0.31198055, 0.017308312, 0.16268258), (0.31198055, 0.017308312, 0.16268258), (0.31198055, 0.032090943, 0.16268258), (0.31198055, 0.032090943, 0.16268258), (0.31452662, 0.022021085, 0.16268258), (0.31452662, 0.022021085, 0.16268258), (0.31452662, 0.027377756, 0.16268258), (0.31452662, 0.027377756, 0.16268258), (0.31354704, 0.01950622, 0.16268258), (0.31354704, 0.01950622, 0.16268258), (0.31354704, 0.029893037, 0.16268258), (0.31354704, 0.029893037, 0.16268258), (0.29986504, 0.015610799, 0.16268258), (0.29986504, 0.015610799, 0.16268258), (0.29986504, 0.03378804, 0.16268258), (0.29986504, 0.03378804, 0.16268258), (0.30486023, 0.013812209, 0.16268258), (0.30486023, 0.013812209, 0.16268258), (0.30486023, 0.035586633, 0.16268258), (0.30486023, 0.035586633, 0.16268258), (0.3148602, 0.02469942, 0.16268258), (0.3148602, 0.02469942, 0.16268258), (0.30992365, 0.015560884, 0.16268258), (0.30992365, 0.015560884, 0.16268258), (0.30992365, 0.033837955, 0.16268258), (0.30992365, 0.033837955, 0.16268258), (0.31470382, 0.025954774, 0.16268258), (0.31470382, 0.025954774, 0.16268258), (0.31470382, 0.023444068, 0.16268258), (0.31470382, 0.023444068, 0.16268258), (0.29630443, 0.029850194, 0.16268258), (0.29630443, 0.029850194, 0.16268258), (0.29630443, 0.019549062, 0.16268258), (0.29630443, 0.019549062, 0.16268258), (0.29784223, 0.03203812, 0.16268258), (0.29784223, 0.03203812, 0.16268258), (0.29784223, 0.017360723, 0.16268258), (0.29784223, 0.017360723, 0.16268258), (0.3022518, 0.03499473, 0.16268258), (0.3022518, 0.03499473, 0.16268258), (0.3022518, 0.014404113, 0.16268258), (0.3022518, 0.014404113, 0.16268258), (0.29501623, 0.02469942, 0.16268258), (0.29501623, 0.02469942, 0.16268258), (0.29534316, 0.027354047, 0.16268258), (0.29534316, 0.027354047, 0.16268258), (0.29534316, 0.022044795, 0.16268258), (0.29534316, 0.022044795, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0015"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0015/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0015/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_21" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [6, 32, 0, 1, 33, 7, 32, 6, 8, 9, 7, 33, 32, 8, 52, 53, 9, 33, 52, 8, 40, 41, 9, 53, 52, 40, 28, 29, 41, 53, 28, 40, 18, 19, 41, 29, 28, 18, 22, 23, 19, 29, 22, 18, 44, 45, 19, 23, 22, 44, 14, 15, 45, 23, 14, 44, 34, 35, 45, 15, 14, 34, 48, 49, 35, 15, 48, 34, 42, 43, 35, 49, 42, 34, 12, 13, 35, 43, 42, 12, 36, 37, 13, 43, 42, 36, 50, 51, 37, 43, 50, 36, 46, 47, 37, 51, 50, 46, 16, 17, 47, 51, 16, 46, 20, 21, 47, 17, 16, 20, 24, 25, 21, 17, 24, 20, 38, 39, 21, 25, 24, 38, 26, 27, 39, 25, 26, 38, 10, 11, 39, 27, 26, 10, 54, 55, 11, 27, 54, 10, 4, 5, 11, 55, 54, 4, 30, 31, 5, 55, 30, 4, 2, 3, 5, 31]
                rel material:binding = </world/microwave/link_1/material0016>
                point3f[] points = [(0.281657, 0.013812209, 0.16268258), (0.281657, 0.013812209, 0.16268258), (0.281657, 0.035586633, 0.16268258), (0.281657, 0.035586633, 0.16268258), (0.28447467, 0.0352156, 0.16268258), (0.28447467, 0.0352156, 0.16268258), (0.28447467, 0.014183241, 0.16268258), (0.28447467, 0.014183241, 0.16268258), (0.2871006, 0.015270963, 0.16268258), (0.2871006, 0.015270963, 0.16268258), (0.2871006, 0.034127876, 0.16268258), (0.2871006, 0.034127876, 0.16268258), (0.29254422, 0.02469942, 0.16268258), (0.29254422, 0.02469942, 0.16268258), (0.2711408, 0.02188174, 0.16268258), (0.2711408, 0.02188174, 0.16268258), (0.2711408, 0.027517516, 0.16268258), (0.2711408, 0.027517516, 0.16268258), (0.29108545, 0.019255815, 0.16268258), (0.29108545, 0.019255815, 0.16268258), (0.29108545, 0.030143026, 0.16268258), (0.29108545, 0.030143026, 0.16268258), (0.27222812, 0.019255815, 0.16268258), (0.27222812, 0.019255815, 0.16268258), (0.27222812, 0.030143026, 0.16268258), (0.27222812, 0.030143026, 0.16268258), (0.2739585, 0.03239792, 0.16268258), (0.2739585, 0.03239792, 0.16268258), (0.2739585, 0.017001336, 0.16268258), (0.2739585, 0.017001336, 0.16268258), (0.2788389, 0.0352156, 0.16268258), (0.2788389, 0.0352156, 0.16268258), (0.2788389, 0.014183241, 0.16268258), (0.2788389, 0.014183241, 0.16268258), (0.29236037, 0.02330181, 0.16268258), (0.29236037, 0.02330181, 0.16268258), (0.29236037, 0.02609703, 0.16268258), (0.29236037, 0.02609703, 0.16268258), (0.2893555, 0.03239792, 0.16268258), (0.2893555, 0.03239792, 0.16268258), (0.2893555, 0.017001336, 0.16268258), (0.2893555, 0.017001336, 0.16268258), (0.27076977, 0.02469942, 0.16268258), (0.27076977, 0.02469942, 0.16268258), (0.29217318, 0.02188174, 0.16268258), (0.29217318, 0.02188174, 0.16268258), (0.29217318, 0.027517516, 0.16268258), (0.29217318, 0.027517516, 0.16268258), (0.27095404, 0.02330181, 0.16268258), (0.27095404, 0.02330181, 0.16268258), (0.27095404, 0.02609703, 0.16268258), (0.27095404, 0.02609703, 0.16268258), (0.2762134, 0.015270963, 0.16268258), (0.2762134, 0.015270963, 0.16268258), (0.2762134, 0.034127876, 0.16268258), (0.2762134, 0.034127876, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0016"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0016/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0016/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_22" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [32, 24, 26, 27, 25, 33, 24, 32, 34, 35, 33, 25, 24, 34, 18, 19, 35, 25, 18, 34, 54, 55, 35, 19, 18, 54, 2, 3, 55, 19, 2, 54, 48, 49, 55, 3, 2, 48, 8, 9, 49, 3, 8, 48, 12, 13, 49, 9, 8, 12, 44, 45, 13, 9, 44, 12, 38, 39, 13, 45, 44, 38, 4, 5, 39, 45, 4, 38, 42, 43, 39, 5, 4, 42, 16, 17, 43, 5, 16, 42, 40, 41, 43, 17, 16, 40, 6, 7, 41, 17, 6, 40, 14, 15, 41, 7, 6, 14, 46, 47, 15, 7, 46, 14, 50, 51, 15, 47, 46, 50, 10, 11, 51, 47, 10, 50, 52, 53, 51, 11, 10, 52, 0, 1, 53, 11, 0, 52, 36, 37, 53, 1, 0, 36, 20, 21, 37, 1, 20, 36, 30, 31, 37, 21, 20, 30, 22, 23, 31, 21, 22, 30, 28, 29, 31, 23]
                rel material:binding = </world/microwave/link_1/material0017>
                point3f[] points = [(0.2500523, 0.03239792, 0.16268258), (0.2500523, 0.03239792, 0.16268258), (0.2500523, 0.017001336, 0.16268258), (0.2500523, 0.017001336, 0.16268258), (0.24704744, 0.02330181, 0.16268258), (0.24704744, 0.02330181, 0.16268258), (0.24704744, 0.02609703, 0.16268258), (0.24704744, 0.02609703, 0.16268258), (0.24832235, 0.019255815, 0.16268258), (0.24832235, 0.019255815, 0.16268258), (0.24832235, 0.030143026, 0.16268258), (0.24832235, 0.030143026, 0.16268258), (0.26826698, 0.02188174, 0.16268258), (0.26826698, 0.02188174, 0.16268258), (0.26826698, 0.027517516, 0.16268258), (0.26826698, 0.027517516, 0.16268258), (0.24686359, 0.02469942, 0.16268258), (0.24686359, 0.02469942, 0.16268258), (0.2523072, 0.015270963, 0.16268258), (0.2523072, 0.015270963, 0.16268258), (0.2523072, 0.034127876, 0.16268258), (0.2523072, 0.034127876, 0.16268258), (0.25493312, 0.0352156, 0.16268258), (0.25493312, 0.0352156, 0.16268258), (0.25493312, 0.014183241, 0.16268258), (0.25493312, 0.014183241, 0.16268258), (0.2577508, 0.013812209, 0.16268258), (0.2577508, 0.013812209, 0.16268258), (0.2577508, 0.035586633, 0.16268258), (0.2577508, 0.035586633, 0.16268258), (0.2605685, 0.0352156, 0.16268258), (0.2605685, 0.0352156, 0.16268258), (0.2605685, 0.014183241, 0.16268258), (0.2605685, 0.014183241, 0.16268258), (0.2631944, 0.015270963, 0.16268258), (0.2631944, 0.015270963, 0.16268258), (0.2631944, 0.034127876, 0.16268258), (0.2631944, 0.034127876, 0.16268258), (0.26845375, 0.02330181, 0.16268258), (0.26845375, 0.02330181, 0.16268258), (0.26845375, 0.02609703, 0.16268258), (0.26845375, 0.02609703, 0.16268258), (0.268638, 0.02469942, 0.16268258), (0.268638, 0.02469942, 0.16268258), (0.24723463, 0.02188174, 0.16268258), (0.24723463, 0.02188174, 0.16268258), (0.24723463, 0.027517516, 0.16268258), (0.24723463, 0.027517516, 0.16268258), (0.26717925, 0.019255815, 0.16268258), (0.26717925, 0.019255815, 0.16268258), (0.26717925, 0.030143026, 0.16268258), (0.26717925, 0.030143026, 0.16268258), (0.2654489, 0.03239792, 0.16268258), (0.2654489, 0.03239792, 0.16268258), (0.2654489, 0.017001336, 0.16268258), (0.2654489, 0.017001336, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0017"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0017/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0017/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_23" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 10, 18, 19, 11, 1, 10, 0, 22, 23, 1, 11, 10, 22, 14, 15, 23, 11, 14, 22, 26, 27, 23, 15, 14, 26, 6, 7, 27, 15, 6, 26, 34, 35, 27, 7, 6, 34, 40, 41, 35, 7, 40, 34, 30, 31, 35, 41, 40, 30, 44, 45, 31, 41, 44, 30, 48, 49, 31, 45, 44, 48, 12, 13, 49, 45, 12, 48, 46, 47, 49, 13, 12, 46, 42, 43, 47, 13, 42, 46, 32, 33, 47, 43, 42, 32, 38, 39, 33, 43, 38, 32, 36, 37, 33, 39, 38, 36, 4, 5, 37, 39, 4, 36, 28, 29, 37, 5, 4, 28, 16, 17, 29, 5, 16, 28, 24, 25, 29, 17, 16, 24, 8, 9, 25, 17, 8, 24, 2, 3, 25, 9, 8, 2, 20, 21, 3, 9]
                rel material:binding = </world/microwave/link_1/material0018>
                point3f[] points = [(0.23718806, 0.014371669, 0.16268258), (0.23718806, 0.014371669, 0.16268258), (0.23718806, 0.03502759, 0.16268258), (0.23718806, 0.03502759, 0.16268258), (0.22753, 0.03203812, 0.16268258), (0.22753, 0.03203812, 0.16268258), (0.22753, 0.017360723, 0.16268258), (0.22753, 0.017360723, 0.16268258), (0.23193954, 0.03499473, 0.16268258), (0.23193954, 0.03499473, 0.16268258), (0.23193954, 0.014404113, 0.16268258), (0.23193954, 0.014404113, 0.16268258), (0.224704, 0.02469942, 0.16268258), (0.224704, 0.02469942, 0.16268258), (0.22955237, 0.015610799, 0.16268258), (0.22955237, 0.015610799, 0.16268258), (0.22955237, 0.03378804, 0.16268258), (0.22955237, 0.03378804, 0.16268258), (0.23454757, 0.013812209, 0.16268258), (0.23454757, 0.013812209, 0.16268258), (0.23454757, 0.035586633, 0.16268258), (0.23454757, 0.035586633, 0.16268258), (0.239611, 0.015560884, 0.16268258), (0.239611, 0.015560884, 0.16268258), (0.239611, 0.033837955, 0.16268258), (0.239611, 0.033837955, 0.16268258), (0.24166831, 0.017308312, 0.16268258), (0.24166831, 0.017308312, 0.16268258), (0.24166831, 0.032090943, 0.16268258), (0.24166831, 0.032090943, 0.16268258), (0.24421437, 0.022021085, 0.16268258), (0.24421437, 0.022021085, 0.16268258), (0.24421437, 0.027377756, 0.16268258), (0.24421437, 0.027377756, 0.16268258), (0.2432348, 0.01950622, 0.16268258), (0.2432348, 0.01950622, 0.16268258), (0.2432348, 0.029893037, 0.16268258), (0.2432348, 0.029893037, 0.16268258), (0.2259918, 0.029850194, 0.16268258), (0.2259918, 0.029850194, 0.16268258), (0.2259918, 0.019549062, 0.16268258), (0.2259918, 0.019549062, 0.16268258), (0.22503053, 0.027354047, 0.16268258), (0.22503053, 0.027354047, 0.16268258), (0.22503053, 0.022044795, 0.16268258), (0.22503053, 0.022044795, 0.16268258), (0.24439158, 0.025954774, 0.16268258), (0.24439158, 0.025954774, 0.16268258), (0.24439158, 0.023444068, 0.16268258), (0.24439158, 0.023444068, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0018"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0018/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0018/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_24" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [28, 14, 26, 27, 15, 29, 14, 28, 4, 5, 29, 15, 4, 28, 12, 13, 29, 5, 12, 28, 0, 1, 29, 13, 0, 28, 20, 21, 29, 1, 20, 28, 24, 25, 29, 21, 24, 28, 8, 9, 29, 25, 8, 28, 22, 23, 29, 9, 22, 28, 18, 19, 29, 23, 18, 28, 2, 3, 29, 19, 2, 28, 10, 11, 29, 3, 10, 28, 6, 7, 29, 11, 6, 28, 16, 17, 29, 7]
                rel material:binding = </world/microwave/link_1/material0019>
                point3f[] points = [(0.22753, 0.044134926, 0.16268258), (0.22753, 0.044134926, 0.16268258), (0.22753, 0.058812324, 0.16268258), (0.22753, 0.058812324, 0.16268258), (0.23193954, 0.04117832, 0.16268258), (0.23193954, 0.04117832, 0.16268258), (0.23193954, 0.061769348, 0.16268258), (0.23193954, 0.061769348, 0.16268258), (0.224704, 0.051473625, 0.16268258), (0.224704, 0.051473625, 0.16268258), (0.22955237, 0.060562246, 0.16268258), (0.22955237, 0.060562246, 0.16268258), (0.22955237, 0.04238542, 0.16268258), (0.22955237, 0.04238542, 0.16268258), (0.23454757, 0.04058683, 0.16268258), (0.23454757, 0.04058683, 0.16268258), (0.23454757, 0.062360838, 0.16268258), (0.23454757, 0.062360838, 0.16268258), (0.2259918, 0.056624398, 0.16268258), (0.2259918, 0.056624398, 0.16268258), (0.2259918, 0.04632327, 0.16268258), (0.2259918, 0.04632327, 0.16268258), (0.22503053, 0.054128252, 0.16268258), (0.22503053, 0.054128252, 0.16268258), (0.22503053, 0.048819415, 0.16268258), (0.22503053, 0.048819415, 0.16268258), (0.24439158, 0.04058683, 0.16268258), (0.24439158, 0.04058683, 0.16268258), (0.24439158, 0.062360838, 0.16268258), (0.24439158, 0.062360838, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0019"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0019/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0019/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_25" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3]
                int[] faceVertexIndices = [6, 0, 4, 5, 1, 7, 0, 6, 2, 3, 7, 1]
                rel material:binding = </world/microwave/link_1/material0020>
                point3f[] points = [(0.24704744, 0.04058683, 0.16268258), (0.24704744, 0.04058683, 0.16268258), (0.24704744, 0.062360838, 0.16268258), (0.24704744, 0.062360838, 0.16268258), (0.26845375, 0.04058683, 0.16268258), (0.26845375, 0.04058683, 0.16268258), (0.26845375, 0.062360838, 0.16268258), (0.26845375, 0.062360838, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0020"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0020/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0020/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_26" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3]
                int[] faceVertexIndices = [2, 4, 0, 1, 5, 3, 4, 2, 6, 7, 3, 5]
                rel material:binding = </world/microwave/link_1/material0021>
                point3f[] points = [(0.29236037, 0.04058683, 0.16268258), (0.29236037, 0.04058683, 0.16268258), (0.29236037, 0.062360838, 0.16268258), (0.29236037, 0.062360838, 0.16268258), (0.27095404, 0.04058683, 0.16268258), (0.27095404, 0.04058683, 0.16268258), (0.27095404, 0.062360838, 0.16268258), (0.27095404, 0.062360838, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0021"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0021/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0021/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_27" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [18, 26, 4, 5, 27, 19, 26, 18, 28, 29, 19, 27, 28, 18, 10, 11, 19, 29, 28, 10, 22, 23, 11, 29, 28, 22, 2, 3, 23, 29, 28, 2, 14, 15, 3, 29, 28, 14, 16, 17, 15, 29, 28, 16, 12, 13, 17, 29, 28, 12, 0, 1, 13, 29, 28, 0, 24, 25, 1, 29, 28, 24, 8, 9, 25, 29, 28, 8, 20, 21, 9, 29, 28, 20, 6, 7, 21, 29]
                rel material:binding = </world/microwave/link_1/material0022>
                point3f[] points = [(0.313416, 0.056624398, 0.16268258), (0.313416, 0.056624398, 0.16268258), (0.313416, 0.04632327, 0.16268258), (0.313416, 0.04632327, 0.16268258), (0.30486023, 0.04058683, 0.16268258), (0.30486023, 0.04058683, 0.16268258), (0.30486023, 0.062360838, 0.16268258), (0.30486023, 0.062360838, 0.16268258), (0.30985543, 0.060562246, 0.16268258), (0.30985543, 0.060562246, 0.16268258), (0.30985543, 0.04238542, 0.16268258), (0.30985543, 0.04238542, 0.16268258), (0.31437686, 0.054128252, 0.16268258), (0.31437686, 0.054128252, 0.16268258), (0.31437686, 0.048819415, 0.16268258), (0.31437686, 0.048819415, 0.16268258), (0.31470382, 0.051473625, 0.16268258), (0.31470382, 0.051473625, 0.16268258), (0.30746827, 0.04117832, 0.16268258), (0.30746827, 0.04117832, 0.16268258), (0.30746827, 0.061769348, 0.16268258), (0.30746827, 0.061769348, 0.16268258), (0.31187782, 0.044134926, 0.16268258), (0.31187782, 0.044134926, 0.16268258), (0.31187782, 0.058812324, 0.16268258), (0.31187782, 0.058812324, 0.16268258), (0.29501623, 0.04058683, 0.16268258), (0.29501623, 0.04058683, 0.16268258), (0.29501623, 0.062360838, 0.16268258), (0.29501623, 0.062360838, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0022"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0022/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0022/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_28" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [10, 20, 22, 23, 21, 11, 20, 10, 12, 13, 11, 21, 20, 12, 18, 19, 13, 21, 20, 18, 2, 3, 19, 21, 20, 2, 26, 27, 3, 21, 20, 26, 6, 7, 27, 21, 20, 6, 24, 25, 7, 21, 20, 24, 4, 5, 25, 21, 20, 4, 28, 29, 5, 21, 20, 28, 0, 1, 29, 21, 20, 0, 16, 17, 1, 21, 20, 16, 14, 15, 17, 21, 20, 14, 8, 9, 15, 21]
                rel material:binding = </world/microwave/link_1/material0023>
                point3f[] points = [(0.31115237, 0.08594633, 0.16268258), (0.31115237, 0.08594633, 0.16268258), (0.31115237, 0.07054975, 0.16268258), (0.31115237, 0.07054975, 0.16268258), (0.31397006, 0.08106593, 0.16268258), (0.31397006, 0.08106593, 0.16268258), (0.31397006, 0.07543015, 0.16268258), (0.31397006, 0.07543015, 0.16268258), (0.3034539, 0.08913504, 0.16268258), (0.3034539, 0.08913504, 0.16268258), (0.3034539, 0.067361034, 0.16268258), (0.3034539, 0.067361034, 0.16268258), (0.30627155, 0.067732066, 0.16268258), (0.30627155, 0.067732066, 0.16268258), (0.30627155, 0.08876401, 0.16268258), (0.30627155, 0.08876401, 0.16268258), (0.3088975, 0.087676704, 0.16268258), (0.3088975, 0.087676704, 0.16268258), (0.3088975, 0.068819374, 0.16268258), (0.3088975, 0.068819374, 0.16268258), (0.29501623, 0.08913504, 0.16268258), (0.29501623, 0.08913504, 0.16268258), (0.29501623, 0.067361034, 0.16268258), (0.29501623, 0.067361034, 0.16268258), (0.3143411, 0.07824783, 0.16268258), (0.3143411, 0.07824783, 0.16268258), (0.31288233, 0.07280464, 0.16268258), (0.31288233, 0.07280464, 0.16268258), (0.31288233, 0.08369143, 0.16268258), (0.31288233, 0.08369143, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0023"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0023/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0023/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_29" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 8, 4, 5, 9, 3, 8, 2, 6, 7, 3, 9, 6, 2, 0, 1, 3, 7]
                rel material:binding = </world/microwave/link_1/material0024>
                point3f[] points = [(0.29236037, 0.08913504, 0.16268258), (0.29236037, 0.08913504, 0.16268258), (0.29236037, 0.067361034, 0.16268258), (0.29236037, 0.067361034, 0.16268258), (0.28220397, 0.067361034, 0.16268258), (0.28220397, 0.067361034, 0.16268258), (0.27095404, 0.08913504, 0.16268258), (0.27095404, 0.08913504, 0.16268258), (0.27095404, 0.067361034, 0.16268258), (0.27095404, 0.067361034, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0024"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0024/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0024/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_30" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3]
                int[] faceVertexIndices = [4, 2, 6, 7, 3, 5, 2, 4, 0, 1, 5, 3]
                rel material:binding = </world/microwave/link_1/material0025>
                point3f[] points = [(0.24704744, 0.08913504, 0.16268258), (0.24704744, 0.08913504, 0.16268258), (0.24704744, 0.067361034, 0.16268258), (0.24704744, 0.067361034, 0.16268258), (0.26845375, 0.08913504, 0.16268258), (0.26845375, 0.08913504, 0.16268258), (0.26845375, 0.067361034, 0.16268258), (0.26845375, 0.067361034, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0025"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0025/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0025/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_31" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [26, 10, 28, 29, 11, 27, 10, 26, 4, 5, 27, 11, 4, 26, 2, 3, 27, 5, 2, 26, 18, 19, 27, 3, 18, 26, 20, 21, 27, 19, 20, 26, 14, 15, 27, 21, 14, 26, 24, 25, 27, 15, 24, 26, 12, 13, 27, 25, 12, 26, 22, 23, 27, 13, 22, 26, 16, 17, 27, 23, 16, 26, 0, 1, 27, 17, 0, 26, 6, 7, 27, 1, 6, 26, 8, 9, 27, 7]
                rel material:binding = </world/microwave/link_1/material0026>
                point3f[] points = [(0.23051031, 0.087676704, 0.16268258), (0.23051031, 0.087676704, 0.16268258), (0.23051031, 0.068819374, 0.16268258), (0.23051031, 0.068819374, 0.16268258), (0.23313624, 0.067732066, 0.16268258), (0.23313624, 0.067732066, 0.16268258), (0.23313624, 0.08876401, 0.16268258), (0.23313624, 0.08876401, 0.16268258), (0.23595393, 0.08913504, 0.16268258), (0.23595393, 0.08913504, 0.16268258), (0.23595393, 0.067361034, 0.16268258), (0.23595393, 0.067361034, 0.16268258), (0.22543775, 0.08106593, 0.16268258), (0.22543775, 0.08106593, 0.16268258), (0.22543775, 0.07543015, 0.16268258), (0.22543775, 0.07543015, 0.16268258), (0.22825542, 0.08594633, 0.16268258), (0.22825542, 0.08594633, 0.16268258), (0.22825542, 0.07054975, 0.16268258), (0.22825542, 0.07054975, 0.16268258), (0.22652547, 0.07280464, 0.16268258), (0.22652547, 0.07280464, 0.16268258), (0.22652547, 0.08369143, 0.16268258), (0.22652547, 0.08369143, 0.16268258), (0.2250667, 0.07824783, 0.16268258), (0.2250667, 0.07824783, 0.16268258), (0.24439158, 0.08913504, 0.16268258), (0.24439158, 0.08913504, 0.16268258), (0.24439158, 0.067361034, 0.16268258), (0.24439158, 0.067361034, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0026"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0026/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0026/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "display_panel_32" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3]
                int[] faceVertexIndices = [6, 0, 4, 5, 1, 7, 0, 6, 2, 3, 7, 1]
                rel material:binding = </world/microwave/link_1/material0027>
                point3f[] points = [(0.24470395, 0.11913498, 0.16268258), (0.24470395, 0.11913498, 0.16268258), (0.24470395, 0.13913536, 0.16268258), (0.24470395, 0.13913536, 0.16268258), (0.29470384, 0.11913498, 0.16268258), (0.29470384, 0.11913498, 0.16268258), (0.29470384, 0.13913536, 0.16268258), (0.29470384, 0.13913536, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0027"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0027/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0027/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0, 0, 0)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "display_panel_32_139CAFDE19CF" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 42, 50, 51, 43, 1, 42, 0, 44, 45, 1, 43, 44, 0, 26, 27, 1, 45, 12, 52, 40, 41, 53, 13, 52, 12, 20, 21, 13, 53, 20, 12, 58, 59, 13, 21, 58, 12, 80, 81, 13, 59, 58, 80, 8, 9, 81, 59, 58, 8, 70, 71, 9, 59, 70, 8, 6, 7, 9, 71, 70, 6, 48, 49, 7, 71, 48, 6, 14, 15, 7, 49, 48, 14, 88, 89, 15, 49, 88, 14, 2, 3, 15, 89, 88, 2, 38, 39, 3, 89, 38, 2, 76, 77, 3, 39, 38, 76, 62, 63, 77, 39, 62, 76, 68, 69, 77, 63, 62, 68, 82, 83, 69, 63, 82, 68, 66, 67, 69, 83, 82, 66, 30, 31, 67, 83, 30, 66, 56, 57, 67, 31, 30, 56, 22, 23, 57, 31, 22, 56, 86, 87, 57, 23, 22, 86, 24, 25, 87, 23, 22, 24, 32, 33, 25, 23, 24, 86, 50, 51, 87, 25, 24, 50, 42, 43, 51, 25, 32, 24, 26, 27, 25, 33, 32, 26, 0, 1, 27, 33, 32, 0, 78, 79, 1, 33, 32, 78, 84, 85, 79, 33, 84, 78, 10, 11, 79, 85, 84, 10, 64, 65, 11, 85, 64, 10, 34, 35, 11, 65, 64, 34, 36, 37, 35, 65, 36, 34, 74, 75, 35, 37, 36, 74, 90, 91, 75, 37, 90, 74, 28, 29, 75, 91, 90, 28, 46, 47, 29, 91, 46, 28, 4, 5, 29, 47, 46, 4, 72, 73, 5, 47, 72, 4, 16, 17, 5, 73, 72, 16, 60, 61, 17, 73, 60, 16, 54, 55, 17, 61, 60, 54, 18, 19, 55, 61]
                rel material:binding = </world/microwave/link_1/material0028>
                point3f[] points = [(0.3046693, 0.14185612, 0.16268258), (0.3046693, 0.14185612, 0.16268258), (0.3017751, 0.11206416, 0.16268258), (0.3017751, 0.11206416, 0.16268258), (0.30000645, 0.1482402, 0.16268258), (0.30000645, 0.1482402, 0.16268258), (0.29970405, 0.110474795, 0.16268258), (0.29970405, 0.110474795, 0.16268258), (0.29853064, 0.1098962, 0.16268258), (0.29853064, 0.1098962, 0.16268258), (0.3038091, 0.14443754, 0.16268258), (0.3038091, 0.14443754, 0.16268258), (0.29600912, 0.10922068, 0.16268258), (0.29600912, 0.10922068, 0.16268258), (0.30079135, 0.111201465, 0.16268258), (0.30079135, 0.111201465, 0.16268258), (0.298749, 0.14877054, 0.16268258), (0.298749, 0.14877054, 0.16268258), (0.24198319, 0.14910081, 0.16268258), (0.24198319, 0.14910081, 0.16268258), (0.24198319, 0.10916953, 0.16268258), (0.24198319, 0.10916953, 0.16268258), (0.23470397, 0.11679606, 0.16268258), (0.23470397, 0.11679606, 0.16268258), (0.24470395, 0.11913498, 0.16268258), (0.24470395, 0.11913498, 0.16268258), (0.24470395, 0.13913536, 0.16268258), (0.24470395, 0.13913536, 0.16268258), (0.30116737, 0.14752267, 0.16268258), (0.30116737, 0.14752267, 0.16268258), (0.23473808, 0.11641422, 0.16268258), (0.23473808, 0.11641422, 0.16268258), (0.23473808, 0.14185612, 0.16268258), (0.23473808, 0.14185612, 0.16268258), (0.3030916, 0.14559847, 0.16268258), (0.3030916, 0.14559847, 0.16268258), (0.23631622, 0.14559847, 0.16268258), (0.23631622, 0.14559847, 0.16268258), (0.23631622, 0.11267187, 0.16268258), (0.23631622, 0.11267187, 0.16268258), (0.29470384, 0.109135, 0.16268258), (0.29470384, 0.109135, 0.16268258), (0.29470384, 0.11913498, 0.16268258), (0.29470384, 0.11913498, 0.16268258), (0.29470384, 0.13913536, 0.16268258), (0.29470384, 0.13913536, 0.16268258), (0.23824042, 0.14752267, 0.16268258), (0.23824042, 0.14752267, 0.16268258), (0.23824042, 0.11074766, 0.16268258), (0.23824042, 0.11074766, 0.16268258), (0.30470383, 0.11913498, 0.16268258), (0.30470383, 0.11913498, 0.16268258), (0.24236462, 0.109135, 0.16268258), (0.24236462, 0.109135, 0.16268258), (0.2974246, 0.14910081, 0.16268258), (0.2974246, 0.14910081, 0.16268258), (0.30436316, 0.11654691, 0.16268258), (0.30436316, 0.11654691, 0.16268258), (0.24065879, 0.10949979, 0.16268258), (0.24065879, 0.10949979, 0.16268258), (0.24065879, 0.14877054, 0.16268258), (0.24065879, 0.14877054, 0.16268258), (0.2355987, 0.1138328, 0.16268258), (0.2355987, 0.1138328, 0.16268258), (0.2355987, 0.14443754, 0.16268258), (0.2355987, 0.14443754, 0.16268258), (0.30394262, 0.11530819, 0.16268258), (0.30394262, 0.11530819, 0.16268258), (0.30336446, 0.1141352, 0.16268258), (0.30336446, 0.1141352, 0.16268258), (0.23940136, 0.11003014, 0.16268258), (0.23940136, 0.11003014, 0.16268258), (0.23940136, 0.1482402, 0.16268258), (0.23940136, 0.1482402, 0.16268258), (0.30220395, 0.14663503, 0.16268258), (0.30220395, 0.14663503, 0.16268258), (0.30263737, 0.11304747, 0.16268258), (0.30263737, 0.11304747, 0.16268258), (0.30433905, 0.1431801, 0.16268258), (0.30433905, 0.1431801, 0.16268258), (0.29729193, 0.10947608, 0.16268258), (0.29729193, 0.10947608, 0.16268258), (0.23506877, 0.11509023, 0.16268258), (0.23506877, 0.11509023, 0.16268258), (0.23506877, 0.1431801, 0.16268258), (0.23506877, 0.1431801, 0.16268258), (0.30461815, 0.11782971, 0.16268258), (0.30461815, 0.11782971, 0.16268258), (0.23720387, 0.111635305, 0.16268258), (0.23720387, 0.111635305, 0.16268258), (0.23720387, 0.14663503, 0.16268258), (0.23720387, 0.14663503, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0028"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0028/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0028/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_33" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 44, 20, 21, 45, 3, 44, 2, 26, 27, 3, 45, 44, 26, 16, 17, 27, 45, 16, 26, 6, 7, 27, 17, 16, 6, 40, 41, 7, 17, 40, 6, 14, 15, 7, 41, 40, 14, 36, 37, 15, 41, 36, 14, 8, 9, 15, 37, 36, 8, 50, 51, 9, 37, 50, 8, 32, 33, 9, 51, 50, 32, 46, 47, 33, 51, 46, 32, 24, 25, 33, 47, 46, 24, 30, 31, 25, 47, 46, 30, 48, 49, 31, 47, 48, 30, 10, 11, 31, 49, 48, 10, 34, 35, 11, 49, 34, 10, 12, 13, 11, 35, 34, 12, 38, 39, 13, 35, 38, 12, 4, 5, 13, 39, 38, 4, 18, 19, 5, 39, 18, 4, 28, 29, 5, 19, 18, 28, 42, 43, 29, 19, 42, 28, 0, 1, 29, 43, 42, 0, 22, 23, 1, 43]
                rel material:binding = </world/microwave/link_1/material0029>
                point3f[] points = [(0.30750072, -0.072069645, 0.16268258), (0.30750072, -0.072069645, 0.16268258), (0.30750072, -0.09272515, 0.16268258), (0.30750072, -0.09272515, 0.16268258), (0.31198055, -0.07500629, 0.16268258), (0.31198055, -0.07500629, 0.16268258), (0.31198055, -0.08978892, 0.16268258), (0.31198055, -0.08978892, 0.16268258), (0.31452662, -0.085075736, 0.16268258), (0.31452662, -0.085075736, 0.16268258), (0.31452662, -0.07971907, 0.16268258), (0.31452662, -0.07971907, 0.16268258), (0.31354704, -0.0772042, 0.16268258), (0.31354704, -0.0772042, 0.16268258), (0.31354704, -0.0875906, 0.16268258), (0.31354704, -0.0875906, 0.16268258), (0.29986504, -0.09148602, 0.16268258), (0.29986504, -0.09148602, 0.16268258), (0.29986504, -0.07330878, 0.16268258), (0.29986504, -0.07330878, 0.16268258), (0.30486023, -0.093284614, 0.16268258), (0.30486023, -0.093284614, 0.16268258), (0.30486023, -0.07151019, 0.16268258), (0.30486023, -0.07151019, 0.16268258), (0.3148602, -0.0823974, 0.16268258), (0.3148602, -0.0823974, 0.16268258), (0.30992365, -0.09153593, 0.16268258), (0.30992365, -0.09153593, 0.16268258), (0.30992365, -0.07325928, 0.16268258), (0.30992365, -0.07325928, 0.16268258), (0.31470382, -0.081142046, 0.16268258), (0.31470382, -0.081142046, 0.16268258), (0.31470382, -0.08365275, 0.16268258), (0.31470382, -0.08365275, 0.16268258), (0.29630443, -0.07724704, 0.16268258), (0.29630443, -0.07724704, 0.16268258), (0.29630443, -0.087548174, 0.16268258), (0.29630443, -0.087548174, 0.16268258), (0.29784223, -0.0750587, 0.16268258), (0.29784223, -0.0750587, 0.16268258), (0.29784223, -0.0897361, 0.16268258), (0.29784223, -0.0897361, 0.16268258), (0.3022518, -0.07210209, 0.16268258), (0.3022518, -0.07210209, 0.16268258), (0.3022518, -0.09269271, 0.16268258), (0.3022518, -0.09269271, 0.16268258), (0.29501623, -0.0823974, 0.16268258), (0.29501623, -0.0823974, 0.16268258), (0.29534316, -0.079742774, 0.16268258), (0.29534316, -0.079742774, 0.16268258), (0.29534316, -0.08505203, 0.16268258), (0.29534316, -0.08505203, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0029"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0029/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0029/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_34" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [6, 32, 0, 1, 33, 7, 32, 6, 8, 9, 7, 33, 32, 8, 52, 53, 9, 33, 52, 8, 40, 41, 9, 53, 52, 40, 28, 29, 41, 53, 28, 40, 18, 19, 41, 29, 28, 18, 22, 23, 19, 29, 22, 18, 44, 45, 19, 23, 22, 44, 14, 15, 45, 23, 14, 44, 34, 35, 45, 15, 14, 34, 48, 49, 35, 15, 48, 34, 12, 13, 35, 49, 48, 12, 42, 43, 13, 49, 42, 12, 36, 37, 13, 43, 42, 36, 50, 51, 37, 43, 50, 36, 46, 47, 37, 51, 50, 46, 16, 17, 47, 51, 16, 46, 20, 21, 47, 17, 16, 20, 24, 25, 21, 17, 24, 20, 38, 39, 21, 25, 24, 38, 26, 27, 39, 25, 26, 38, 10, 11, 39, 27, 26, 10, 54, 55, 11, 27, 54, 10, 4, 5, 11, 55, 54, 4, 30, 31, 5, 55, 30, 4, 2, 3, 5, 31]
                rel material:binding = </world/microwave/link_1/material0030>
                point3f[] points = [(0.281657, -0.093284614, 0.16268258), (0.281657, -0.093284614, 0.16268258), (0.281657, -0.07151019, 0.16268258), (0.281657, -0.07151019, 0.16268258), (0.28447467, -0.07188122, 0.16268258), (0.28447467, -0.07188122, 0.16268258), (0.28447467, -0.092913575, 0.16268258), (0.28447467, -0.092913575, 0.16268258), (0.2871006, -0.09182586, 0.16268258), (0.2871006, -0.09182586, 0.16268258), (0.2871006, -0.072968945, 0.16268258), (0.2871006, -0.072968945, 0.16268258), (0.29254422, -0.0823974, 0.16268258), (0.29254422, -0.0823974, 0.16268258), (0.2711408, -0.08521508, 0.16268258), (0.2711408, -0.08521508, 0.16268258), (0.2711408, -0.07957972, 0.16268258), (0.2711408, -0.07957972, 0.16268258), (0.29108545, -0.087841004, 0.16268258), (0.29108545, -0.087841004, 0.16268258), (0.29108545, -0.07695379, 0.16268258), (0.29108545, -0.07695379, 0.16268258), (0.27222812, -0.087841004, 0.16268258), (0.27222812, -0.087841004, 0.16268258), (0.27222812, -0.07695379, 0.16268258), (0.27222812, -0.07695379, 0.16268258), (0.2739585, -0.07469932, 0.16268258), (0.2739585, -0.07469932, 0.16268258), (0.2739585, -0.0900959, 0.16268258), (0.2739585, -0.0900959, 0.16268258), (0.2788389, -0.07188122, 0.16268258), (0.2788389, -0.07188122, 0.16268258), (0.2788389, -0.092913575, 0.16268258), (0.2788389, -0.092913575, 0.16268258), (0.29236037, -0.08379501, 0.16268258), (0.29236037, -0.08379501, 0.16268258), (0.29236037, -0.08099979, 0.16268258), (0.29236037, -0.08099979, 0.16268258), (0.2893555, -0.07469932, 0.16268258), (0.2893555, -0.07469932, 0.16268258), (0.2893555, -0.0900959, 0.16268258), (0.2893555, -0.0900959, 0.16268258), (0.27076977, -0.0823974, 0.16268258), (0.27076977, -0.0823974, 0.16268258), (0.29217318, -0.08521508, 0.16268258), (0.29217318, -0.08521508, 0.16268258), (0.29217318, -0.07957972, 0.16268258), (0.29217318, -0.07957972, 0.16268258), (0.27095404, -0.08379501, 0.16268258), (0.27095404, -0.08379501, 0.16268258), (0.27095404, -0.08099979, 0.16268258), (0.27095404, -0.08099979, 0.16268258), (0.2762134, -0.09182586, 0.16268258), (0.2762134, -0.09182586, 0.16268258), (0.2762134, -0.072968945, 0.16268258), (0.2762134, -0.072968945, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0030"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0030/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0030/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_35" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [32, 24, 26, 27, 25, 33, 24, 32, 18, 19, 33, 25, 18, 32, 34, 35, 33, 19, 18, 34, 2, 3, 35, 19, 2, 34, 54, 55, 35, 3, 2, 54, 8, 9, 55, 3, 8, 54, 48, 49, 55, 9, 8, 48, 44, 45, 49, 9, 44, 48, 12, 13, 49, 45, 44, 12, 4, 5, 13, 45, 4, 12, 38, 39, 13, 5, 4, 38, 42, 43, 39, 5, 4, 42, 16, 17, 43, 5, 16, 42, 6, 7, 43, 17, 6, 42, 40, 41, 43, 7, 6, 40, 46, 47, 41, 7, 46, 40, 14, 15, 41, 47, 46, 14, 10, 11, 15, 47, 10, 14, 50, 51, 15, 11, 10, 50, 0, 1, 51, 11, 0, 50, 52, 53, 51, 1, 0, 52, 20, 21, 53, 1, 20, 52, 36, 37, 53, 21, 20, 36, 22, 23, 37, 21, 22, 36, 30, 31, 37, 23, 22, 30, 28, 29, 31, 23]
                rel material:binding = </world/microwave/link_1/material0031>
                point3f[] points = [(0.2500523, -0.07469932, 0.16268258), (0.2500523, -0.07469932, 0.16268258), (0.2500523, -0.0900959, 0.16268258), (0.2500523, -0.0900959, 0.16268258), (0.24704744, -0.08379501, 0.16268258), (0.24704744, -0.08379501, 0.16268258), (0.24704744, -0.08099979, 0.16268258), (0.24704744, -0.08099979, 0.16268258), (0.24832235, -0.087841004, 0.16268258), (0.24832235, -0.087841004, 0.16268258), (0.24832235, -0.07695379, 0.16268258), (0.24832235, -0.07695379, 0.16268258), (0.26826698, -0.08521508, 0.16268258), (0.26826698, -0.08521508, 0.16268258), (0.26826698, -0.07957972, 0.16268258), (0.26826698, -0.07957972, 0.16268258), (0.24686359, -0.0823974, 0.16268258), (0.24686359, -0.0823974, 0.16268258), (0.2523072, -0.09182586, 0.16268258), (0.2523072, -0.09182586, 0.16268258), (0.2523072, -0.072968945, 0.16268258), (0.2523072, -0.072968945, 0.16268258), (0.25493312, -0.07188122, 0.16268258), (0.25493312, -0.07188122, 0.16268258), (0.25493312, -0.092913575, 0.16268258), (0.25493312, -0.092913575, 0.16268258), (0.2577508, -0.093284614, 0.16268258), (0.2577508, -0.093284614, 0.16268258), (0.2577508, -0.07151019, 0.16268258), (0.2577508, -0.07151019, 0.16268258), (0.2605685, -0.07188122, 0.16268258), (0.2605685, -0.07188122, 0.16268258), (0.2605685, -0.092913575, 0.16268258), (0.2605685, -0.092913575, 0.16268258), (0.2631944, -0.09182586, 0.16268258), (0.2631944, -0.09182586, 0.16268258), (0.2631944, -0.072968945, 0.16268258), (0.2631944, -0.072968945, 0.16268258), (0.26845375, -0.08379501, 0.16268258), (0.26845375, -0.08379501, 0.16268258), (0.26845375, -0.08099979, 0.16268258), (0.26845375, -0.08099979, 0.16268258), (0.268638, -0.0823974, 0.16268258), (0.268638, -0.0823974, 0.16268258), (0.24723463, -0.08521508, 0.16268258), (0.24723463, -0.08521508, 0.16268258), (0.24723463, -0.07957972, 0.16268258), (0.24723463, -0.07957972, 0.16268258), (0.26717925, -0.087841004, 0.16268258), (0.26717925, -0.087841004, 0.16268258), (0.26717925, -0.07695379, 0.16268258), (0.26717925, -0.07695379, 0.16268258), (0.2654489, -0.07469932, 0.16268258), (0.2654489, -0.07469932, 0.16268258), (0.2654489, -0.0900959, 0.16268258), (0.2654489, -0.0900959, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0031"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0031/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0031/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_36" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 46, 12, 13, 47, 3, 46, 2, 16, 17, 3, 47, 46, 16, 8, 9, 17, 47, 8, 16, 22, 23, 17, 9, 8, 22, 42, 43, 23, 9, 42, 22, 34, 35, 23, 43, 42, 34, 30, 31, 35, 43, 30, 34, 24, 25, 35, 31, 30, 24, 36, 37, 25, 31, 36, 24, 50, 51, 25, 37, 36, 50, 6, 7, 51, 37, 6, 50, 48, 49, 51, 7, 6, 48, 4, 5, 49, 7, 4, 48, 26, 27, 49, 5, 4, 26, 38, 39, 27, 5, 38, 26, 32, 33, 27, 39, 38, 32, 28, 29, 33, 39, 28, 32, 20, 21, 33, 29, 28, 20, 40, 41, 21, 29, 40, 20, 18, 19, 21, 41, 40, 18, 10, 11, 19, 41, 10, 18, 0, 1, 19, 11, 10, 0, 44, 45, 1, 11, 44, 0, 14, 15, 1, 45]
                rel material:binding = </world/microwave/link_1/material0032>
                point3f[] points = [(0.23718806, -0.072069645, 0.16268258), (0.23718806, -0.072069645, 0.16268258), (0.23718806, -0.09272515, 0.16268258), (0.23718806, -0.09272515, 0.16268258), (0.224704, -0.081142046, 0.16268258), (0.224704, -0.081142046, 0.16268258), (0.224704, -0.08365275, 0.16268258), (0.224704, -0.08365275, 0.16268258), (0.22948416, -0.09153593, 0.16268258), (0.22948416, -0.09153593, 0.16268258), (0.22948416, -0.07325928, 0.16268258), (0.22948416, -0.07325928, 0.16268258), (0.23454757, -0.093284614, 0.16268258), (0.23454757, -0.093284614, 0.16268258), (0.23454757, -0.07151019, 0.16268258), (0.23454757, -0.07151019, 0.16268258), (0.239611, -0.09153593, 0.16268258), (0.239611, -0.09153593, 0.16268258), (0.239611, -0.07325928, 0.16268258), (0.239611, -0.07325928, 0.16268258), (0.24166831, -0.07500629, 0.16268258), (0.24166831, -0.07500629, 0.16268258), (0.24166831, -0.08978892, 0.16268258), (0.24166831, -0.08978892, 0.16268258), (0.24421437, -0.085075736, 0.16268258), (0.24421437, -0.085075736, 0.16268258), (0.24421437, -0.07971907, 0.16268258), (0.24421437, -0.07971907, 0.16268258), (0.22586077, -0.0772042, 0.16268258), (0.22586077, -0.0772042, 0.16268258), (0.22586077, -0.0875906, 0.16268258), (0.22586077, -0.0875906, 0.16268258), (0.2432348, -0.0772042, 0.16268258), (0.2432348, -0.0772042, 0.16268258), (0.2432348, -0.0875906, 0.16268258), (0.2432348, -0.0875906, 0.16268258), (0.22488119, -0.085075736, 0.16268258), (0.22488119, -0.085075736, 0.16268258), (0.22488119, -0.07971907, 0.16268258), (0.22488119, -0.07971907, 0.16268258), (0.22742726, -0.07500629, 0.16268258), (0.22742726, -0.07500629, 0.16268258), (0.22742726, -0.08978892, 0.16268258), (0.22742726, -0.08978892, 0.16268258), (0.2319071, -0.072069645, 0.16268258), (0.2319071, -0.072069645, 0.16268258), (0.2319071, -0.09272515, 0.16268258), (0.2319071, -0.09272515, 0.16268258), (0.24439158, -0.081142046, 0.16268258), (0.24439158, -0.081142046, 0.16268258), (0.24439158, -0.08365275, 0.16268258), (0.24439158, -0.08365275, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0032"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0032/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0032/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_37" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [22, 38, 8, 9, 39, 23, 38, 22, 14, 15, 23, 39, 38, 14, 6, 7, 15, 39, 6, 14, 28, 29, 15, 7, 6, 28, 36, 37, 29, 7, 36, 28, 2, 3, 29, 37, 36, 2, 32, 33, 3, 37, 32, 2, 18, 19, 3, 33, 32, 18, 46, 47, 19, 33, 46, 18, 20, 21, 19, 47, 46, 20, 42, 43, 21, 47, 42, 20, 16, 17, 21, 43, 42, 16, 44, 45, 17, 43, 44, 16, 0, 1, 17, 45, 44, 0, 30, 31, 1, 45, 30, 0, 26, 27, 1, 31, 30, 26, 34, 35, 27, 31, 34, 26, 12, 13, 27, 35, 34, 12, 4, 5, 13, 35, 4, 12, 24, 25, 13, 5, 4, 24, 40, 41, 25, 5, 40, 24, 10, 11, 25, 41]
                rel material:binding = </world/microwave/link_1/material0033>
                point3f[] points = [(0.313416, -0.104021244, 0.16268258), (0.313416, -0.104021244, 0.16268258), (0.313416, -0.11432238, 0.16268258), (0.313416, -0.11432238, 0.16268258), (0.29986504, -0.100083396, 0.16268258), (0.29986504, -0.100083396, 0.16268258), (0.29986504, -0.11826023, 0.16268258), (0.29986504, -0.11826023, 0.16268258), (0.30486023, -0.12005882, 0.16268258), (0.30486023, -0.12005882, 0.16268258), (0.30486023, -0.09828481, 0.16268258), (0.30486023, -0.09828481, 0.16268258), (0.30985543, -0.100083396, 0.16268258), (0.30985543, -0.100083396, 0.16268258), (0.30985543, -0.11826023, 0.16268258), (0.30985543, -0.11826023, 0.16268258), (0.31437686, -0.1065174, 0.16268258), (0.31437686, -0.1065174, 0.16268258), (0.31437686, -0.11182623, 0.16268258), (0.31437686, -0.11182623, 0.16268258), (0.31470382, -0.10917161, 0.16268258), (0.31470382, -0.10917161, 0.16268258), (0.30746827, -0.11946691, 0.16268258), (0.30746827, -0.11946691, 0.16268258), (0.30746827, -0.0988763, 0.16268258), (0.30746827, -0.0988763, 0.16268258), (0.31187782, -0.101832904, 0.16268258), (0.31187782, -0.101832904, 0.16268258), (0.31187782, -0.11651072, 0.16268258), (0.31187782, -0.11651072, 0.16268258), (0.29630443, -0.104021244, 0.16268258), (0.29630443, -0.104021244, 0.16268258), (0.29630443, -0.11432238, 0.16268258), (0.29630443, -0.11432238, 0.16268258), (0.29784223, -0.101832904, 0.16268258), (0.29784223, -0.101832904, 0.16268258), (0.29784223, -0.11651072, 0.16268258), (0.29784223, -0.11651072, 0.16268258), (0.3022518, -0.11946691, 0.16268258), (0.3022518, -0.11946691, 0.16268258), (0.3022518, -0.0988763, 0.16268258), (0.3022518, -0.0988763, 0.16268258), (0.29501623, -0.10917161, 0.16268258), (0.29501623, -0.10917161, 0.16268258), (0.29534316, -0.1065174, 0.16268258), (0.29534316, -0.1065174, 0.16268258), (0.29534316, -0.11182623, 0.16268258), (0.29534316, -0.11182623, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0033"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0033/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0033/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_38" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [6, 32, 0, 1, 33, 7, 32, 6, 10, 11, 7, 33, 32, 10, 54, 55, 11, 33, 54, 10, 40, 41, 11, 55, 54, 40, 28, 29, 41, 55, 28, 40, 18, 19, 41, 29, 28, 18, 22, 23, 19, 29, 22, 18, 44, 45, 19, 23, 22, 44, 14, 15, 45, 23, 14, 44, 34, 35, 45, 15, 14, 34, 48, 49, 35, 15, 48, 34, 12, 13, 35, 49, 48, 12, 42, 43, 13, 49, 42, 12, 36, 37, 13, 43, 42, 36, 50, 51, 37, 43, 50, 36, 46, 47, 37, 51, 50, 46, 16, 17, 47, 51, 16, 46, 20, 21, 47, 17, 16, 20, 24, 25, 21, 17, 24, 20, 38, 39, 21, 25, 24, 38, 26, 27, 39, 25, 26, 38, 8, 9, 39, 27, 26, 8, 52, 53, 9, 27, 52, 8, 4, 5, 9, 53, 52, 4, 30, 31, 5, 53, 30, 4, 2, 3, 5, 31]
                rel material:binding = </world/microwave/link_1/material0034>
                point3f[] points = [(0.281657, -0.12005882, 0.16268258), (0.281657, -0.12005882, 0.16268258), (0.281657, -0.09828481, 0.16268258), (0.281657, -0.09828481, 0.16268258), (0.28447467, -0.098655425, 0.16268258), (0.28447467, -0.098655425, 0.16268258), (0.28447467, -0.11968778, 0.16268258), (0.28447467, -0.11968778, 0.16268258), (0.2871006, -0.09974315, 0.16268258), (0.2871006, -0.09974315, 0.16268258), (0.2871006, -0.11860048, 0.16268258), (0.2871006, -0.11860048, 0.16268258), (0.29254422, -0.10917161, 0.16268258), (0.29254422, -0.10917161, 0.16268258), (0.2711408, -0.1119897, 0.16268258), (0.2711408, -0.1119897, 0.16268258), (0.2711408, -0.10635392, 0.16268258), (0.2711408, -0.10635392, 0.16268258), (0.29108545, -0.11461521, 0.16268258), (0.29108545, -0.11461521, 0.16268258), (0.29108545, -0.103728, 0.16268258), (0.29108545, -0.103728, 0.16268258), (0.27222812, -0.11461521, 0.16268258), (0.27222812, -0.11461521, 0.16268258), (0.27222812, -0.103728, 0.16268258), (0.27222812, -0.103728, 0.16268258), (0.2739585, -0.10147352, 0.16268258), (0.2739585, -0.10147352, 0.16268258), (0.2739585, -0.116870105, 0.16268258), (0.2739585, -0.116870105, 0.16268258), (0.2788389, -0.098655425, 0.16268258), (0.2788389, -0.098655425, 0.16268258), (0.2788389, -0.11968778, 0.16268258), (0.2788389, -0.11968778, 0.16268258), (0.29236037, -0.11056922, 0.16268258), (0.29236037, -0.11056922, 0.16268258), (0.29236037, -0.107774, 0.16268258), (0.29236037, -0.107774, 0.16268258), (0.2893555, -0.10147352, 0.16268258), (0.2893555, -0.10147352, 0.16268258), (0.2893555, -0.116870105, 0.16268258), (0.2893555, -0.116870105, 0.16268258), (0.27076977, -0.10917161, 0.16268258), (0.27076977, -0.10917161, 0.16268258), (0.29217318, -0.1119897, 0.16268258), (0.29217318, -0.1119897, 0.16268258), (0.29217318, -0.10635392, 0.16268258), (0.29217318, -0.10635392, 0.16268258), (0.27095404, -0.11056922, 0.16268258), (0.27095404, -0.11056922, 0.16268258), (0.27095404, -0.107774, 0.16268258), (0.27095404, -0.107774, 0.16268258), (0.2762134, -0.09974315, 0.16268258), (0.2762134, -0.09974315, 0.16268258), (0.2762134, -0.11860048, 0.16268258), (0.2762134, -0.11860048, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0034"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0034/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0034/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_39" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [32, 24, 26, 27, 25, 33, 24, 32, 36, 37, 33, 25, 24, 36, 20, 21, 37, 25, 20, 36, 54, 55, 37, 21, 20, 54, 2, 3, 55, 21, 2, 54, 48, 49, 55, 3, 2, 48, 8, 9, 49, 3, 8, 48, 12, 13, 49, 9, 8, 12, 44, 45, 13, 9, 44, 12, 38, 39, 13, 45, 44, 38, 4, 5, 39, 45, 4, 38, 42, 43, 39, 5, 4, 42, 16, 17, 43, 5, 16, 42, 40, 41, 43, 17, 16, 40, 6, 7, 41, 17, 6, 40, 14, 15, 41, 7, 6, 14, 46, 47, 15, 7, 46, 14, 50, 51, 15, 47, 46, 50, 10, 11, 51, 47, 10, 50, 52, 53, 51, 11, 10, 52, 0, 1, 53, 11, 0, 52, 34, 35, 53, 1, 0, 34, 18, 19, 35, 1, 18, 34, 30, 31, 35, 19, 18, 30, 22, 23, 31, 19, 22, 30, 28, 29, 31, 23]
                rel material:binding = </world/microwave/link_1/material0035>
                point3f[] points = [(0.2500523, -0.10147352, 0.16268258), (0.2500523, -0.10147352, 0.16268258), (0.2500523, -0.116870105, 0.16268258), (0.2500523, -0.116870105, 0.16268258), (0.24704744, -0.11056922, 0.16268258), (0.24704744, -0.11056922, 0.16268258), (0.24704744, -0.107774, 0.16268258), (0.24704744, -0.107774, 0.16268258), (0.24832235, -0.11461521, 0.16268258), (0.24832235, -0.11461521, 0.16268258), (0.24832235, -0.103728, 0.16268258), (0.24832235, -0.103728, 0.16268258), (0.26826698, -0.1119897, 0.16268258), (0.26826698, -0.1119897, 0.16268258), (0.26826698, -0.10635392, 0.16268258), (0.26826698, -0.10635392, 0.16268258), (0.24686359, -0.10917161, 0.16268258), (0.24686359, -0.10917161, 0.16268258), (0.2523072, -0.09974315, 0.16268258), (0.2523072, -0.09974315, 0.16268258), (0.2523072, -0.11860048, 0.16268258), (0.2523072, -0.11860048, 0.16268258), (0.25493312, -0.098655425, 0.16268258), (0.25493312, -0.098655425, 0.16268258), (0.25493312, -0.11968778, 0.16268258), (0.25493312, -0.11968778, 0.16268258), (0.2577508, -0.12005882, 0.16268258), (0.2577508, -0.12005882, 0.16268258), (0.2577508, -0.09828481, 0.16268258), (0.2577508, -0.09828481, 0.16268258), (0.2605685, -0.098655425, 0.16268258), (0.2605685, -0.098655425, 0.16268258), (0.2605685, -0.11968778, 0.16268258), (0.2605685, -0.11968778, 0.16268258), (0.2631944, -0.09974315, 0.16268258), (0.2631944, -0.09974315, 0.16268258), (0.2631944, -0.11860048, 0.16268258), (0.2631944, -0.11860048, 0.16268258), (0.26845375, -0.11056922, 0.16268258), (0.26845375, -0.11056922, 0.16268258), (0.26845375, -0.107774, 0.16268258), (0.26845375, -0.107774, 0.16268258), (0.268638, -0.10917161, 0.16268258), (0.268638, -0.10917161, 0.16268258), (0.24723463, -0.1119897, 0.16268258), (0.24723463, -0.1119897, 0.16268258), (0.24723463, -0.10635392, 0.16268258), (0.24723463, -0.10635392, 0.16268258), (0.26717925, -0.11461521, 0.16268258), (0.26717925, -0.11461521, 0.16268258), (0.26717925, -0.103728, 0.16268258), (0.26717925, -0.103728, 0.16268258), (0.2654489, -0.10147352, 0.16268258), (0.2654489, -0.10147352, 0.16268258), (0.2654489, -0.116870105, 0.16268258), (0.2654489, -0.116870105, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0035"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0035/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0035/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "control_button_40" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 44, 12, 13, 45, 1, 44, 0, 18, 19, 1, 45, 44, 18, 10, 11, 19, 45, 10, 18, 20, 21, 19, 11, 10, 20, 40, 41, 21, 11, 40, 20, 32, 33, 21, 41, 40, 32, 28, 29, 33, 41, 28, 32, 24, 25, 33, 29, 28, 24, 36, 37, 25, 29, 36, 24, 50, 51, 25, 37, 36, 50, 6, 7, 51, 37, 6, 50, 48, 49, 51, 7, 6, 48, 4, 5, 49, 7, 4, 48, 26, 27, 49, 5, 4, 26, 38, 39, 27, 5, 38, 26, 34, 35, 27, 39, 38, 34, 30, 31, 35, 39, 30, 34, 22, 23, 35, 31, 30, 22, 42, 43, 23, 31, 42, 22, 16, 17, 23, 43, 42, 16, 8, 9, 17, 43, 8, 16, 2, 3, 17, 9, 8, 2, 46, 47, 3, 9, 46, 2, 14, 15, 3, 47]
                rel material:binding = </world/microwave/link_1/material0036>
                point3f[] points = [(0.23718806, -0.11949977, 0.16268258), (0.23718806, -0.11949977, 0.16268258), (0.23718806, -0.09884385, 0.16268258), (0.23718806, -0.09884385, 0.16268258), (0.224704, -0.10791625, 0.16268258), (0.224704, -0.10791625, 0.16268258), (0.224704, -0.110426955, 0.16268258), (0.224704, -0.110426955, 0.16268258), (0.22948416, -0.100033484, 0.16268258), (0.22948416, -0.100033484, 0.16268258), (0.22948416, -0.11831014, 0.16268258), (0.22948416, -0.11831014, 0.16268258), (0.23454757, -0.12005882, 0.16268258), (0.23454757, -0.12005882, 0.16268258), (0.23454757, -0.09828481, 0.16268258), (0.23454757, -0.09828481, 0.16268258), (0.239611, -0.100033484, 0.16268258), (0.239611, -0.100033484, 0.16268258), (0.239611, -0.11831014, 0.16268258), (0.239611, -0.11831014, 0.16268258), (0.24166831, -0.11656313, 0.16268258), (0.24166831, -0.11656313, 0.16268258), (0.24166831, -0.1017805, 0.16268258), (0.24166831, -0.1017805, 0.16268258), (0.24421437, -0.11184994, 0.16268258), (0.24421437, -0.11184994, 0.16268258), (0.24421437, -0.10649327, 0.16268258), (0.24421437, -0.10649327, 0.16268258), (0.22586077, -0.11436522, 0.16268258), (0.22586077, -0.11436522, 0.16268258), (0.22586077, -0.1039784, 0.16268258), (0.22586077, -0.1039784, 0.16268258), (0.2432348, -0.11436522, 0.16268258), (0.2432348, -0.11436522, 0.16268258), (0.2432348, -0.1039784, 0.16268258), (0.2432348, -0.1039784, 0.16268258), (0.22488119, -0.11184994, 0.16268258), (0.22488119, -0.11184994, 0.16268258), (0.22488119, -0.10649327, 0.16268258), (0.22488119, -0.10649327, 0.16268258), (0.22742726, -0.11656313, 0.16268258), (0.22742726, -0.11656313, 0.16268258), (0.22742726, -0.1017805, 0.16268258), (0.22742726, -0.1017805, 0.16268258), (0.2319071, -0.11949977, 0.16268258), (0.2319071, -0.11949977, 0.16268258), (0.2319071, -0.09884385, 0.16268258), (0.2319071, -0.09884385, 0.16268258), (0.24439158, -0.10791625, 0.16268258), (0.24439158, -0.10791625, 0.16268258), (0.24439158, -0.110426955, 0.16268258), (0.24439158, -0.110426955, 0.16268258)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0036"
            {
                token outputs:displacement.connect = </world/microwave/link_1/material0036/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_1/material0036/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }
        }

        def Xform "link_0" (
            prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsMassAPI", "PhysicsFilteredPairsAPI"]
        )
        {
            prepend rel physics:filteredPairs = [
                </world/microwave/link_1/frame_2>,
                </world/microwave/link_1/frame_2_2BEC41AF2F53>,
                </world/microwave/link_1/control_button_8>,
                </world/microwave/link_1/control_button_9>,
                </world/microwave/link_1/control_button_10>,
                </world/microwave/link_1/control_button_11>,
                </world/microwave/link_1/control_button_12>,
                </world/microwave/link_1/control_button_13>,
                </world/microwave/link_1/control_button_14>,
                </world/microwave/link_1/control_button_15>,
                </world/microwave/link_1/control_button_16>,
                </world/microwave/link_1/control_button_17>,
                </world/microwave/link_1/control_button_18>,
                </world/microwave/link_1/control_button_19>,
                </world/microwave/link_1/control_button_20>,
                </world/microwave/link_1/control_button_21>,
                </world/microwave/link_1/control_button_22>,
                </world/microwave/link_1/control_button_23>,
                </world/microwave/link_1/control_button_24>,
                </world/microwave/link_1/control_button_25>,
                </world/microwave/link_1/control_button_26>,
                </world/microwave/link_1/control_button_27>,
                </world/microwave/link_1/control_button_28>,
                </world/microwave/link_1/control_button_29>,
                </world/microwave/link_1/control_button_30>,
                </world/microwave/link_1/control_button_31>,
                </world/microwave/link_1/display_panel_32>,
                </world/microwave/link_1/display_panel_32_139CAFDE19CF>,
                </world/microwave/link_1/control_button_33>,
                </world/microwave/link_1/control_button_34>,
                </world/microwave/link_1/control_button_35>,
                </world/microwave/link_1/control_button_36>,
                </world/microwave/link_1/control_button_37>,
                </world/microwave/link_1/control_button_38>,
                </world/microwave/link_1/control_button_39>,
                </world/microwave/link_1/control_button_40>,
            ]
            quatf xformOp:orient = (0.5, 0.5, -0.5, -0.5)
            double3 xformOp:translate = (-0.15062566289490267, 0.29361208274589895, -0.20083089655629802)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient"]

            def Mesh "door_frame_4" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [54, 80, 34, 35, 81, 55, 80, 54, 72, 73, 55, 81, 72, 54, 64, 65, 55, 73, 64, 54, 78, 79, 55, 65, 60, 24, 12, 13, 25, 61, 24, 60, 76, 77, 61, 25, 24, 76, 74, 75, 77, 25, 24, 74, 62, 63, 75, 25, 24, 62, 70, 71, 63, 25, 24, 70, 78, 79, 71, 25, 24, 78, 54, 55, 79, 25, 32, 58, 36, 37, 59, 33, 58, 32, 46, 47, 33, 59, 46, 32, 40, 41, 33, 47, 52, 58, 46, 47, 59, 53, 26, 66, 68, 69, 67, 27, 66, 26, 2, 3, 27, 67, 2, 26, 56, 57, 27, 3, 2, 56, 50, 51, 57, 3, 44, 14, 20, 21, 15, 45, 14, 44, 38, 39, 45, 15, 1, 43, 19, 18, 42, 0, 43, 1, 49, 48, 0, 42, 17, 11, 23, 22, 10, 16, 11, 17, 7, 6, 16, 10, 29, 9, 5, 4, 8, 28, 9, 29, 31, 30, 28, 8]
                rel material:binding = </world/microwave/link_0/material0037>
                point3f[] points = [(-0.0066838693, 0.3999316, -0.007943459), (-0.0066838693, 0.3999316, -0.007943459), (-0.0066838693, 0.3999316, -0.007943459), (-0.0066838693, 0.3999316, -0.007943459), (-0.0066838693, 0.009966105, -0.012943241), (-0.0066838693, 0.009966105, -0.012943241), (-0.0066838693, 0.009966105, -0.012943241), (-0.0066838693, 0.009966105, -0.012943241), (-0.0066838693, 0.009966105, -0.007943459), (-0.0066838693, 0.009966105, -0.007943459), (-0.0066838693, 0.009966105, -0.007943459), (-0.0066838693, 0.009966105, -0.007943459), (-0.0066838693, 0.3605219, 0.012056915), (-0.0066838693, 0.3605219, 0.012056915), (-0.0066838693, 0.38996616, -0.012943241), (-0.0066838693, 0.38996616, -0.012943241), (-0.0066838693, 0.38996616, -0.012943241), (-0.0066838693, 0.38996616, -0.012943241), (-0.0066838693, 0.38996616, -0.007943459), (-0.0066838693, 0.38996616, -0.007943459), (-0.0066838693, 0.38996616, -0.007943459), (-0.0066838693, 0.38996616, -0.007943459), (-0.0066838693, 0.38996616, -0.007943459), (-0.0066838693, 0.38996616, -0.007943459), (-0.0066838693, 0.39996612, 0.012056915), (-0.0066838693, 0.39996612, 0.012056915), (-0.0066838693, 0.39996612, 0.012056915), (-0.0066838693, 0.39996612, 0.012056915), (0.48831615, 0.009966105, -0.012943241), (0.48831615, 0.009966105, -0.012943241), (0.48831615, 0.009966105, -0.007943459), (0.48831615, 0.009966105, -0.007943459), (0.48831615, 0.3671144, -0.012943241), (0.48831615, 0.3671144, -0.012943241), (0.48831615, 0.3671144, 0.012056915), (0.48831615, 0.3671144, 0.012056915), (0.48831615, 0.3671144, 0.012056915), (0.48831615, 0.3671144, 0.012056915), (0.48831615, 0.38996616, -0.012943241), (0.48831615, 0.38996616, -0.012943241), (0.48831615, 0.38996616, -0.012943241), (0.48831615, 0.38996616, -0.012943241), (0.48831615, 0.38996616, -0.007943459), (0.48831615, 0.38996616, -0.007943459), (0.48831615, 0.38996616, -0.007943459), (0.48831615, 0.38996616, -0.007943459), (0.48831615, 0.38996616, -0.007943459), (0.48831615, 0.38996616, -0.007943459), (0.48831615, 0.39996612, -0.007943459), (0.48831615, 0.39996612, -0.007943459), (0.48831615, 0.39996612, -0.007943459), (0.48831615, 0.39996612, -0.007943459), (0.48831615, 0.39996612, -0.007943459), (0.48831615, 0.39996612, -0.007943459), (0.48831615, 0.39996612, 0.012056915), (0.48831615, 0.39996612, 0.012056915), (0.48831615, 0.39996612, 0.012056915), (0.48831615, 0.39996612, 0.012056915), (0.48831615, 0.39996612, 0.012056915), (0.48831615, 0.39996612, 0.012056915), (0.038264666, 0.363021, 0.012056915), (0.038264666, 0.363021, 0.012056915), (0.20325622, 0.36885476, 0.012056915), (0.20325622, 0.36885476, 0.012056915), (0.36834884, 0.36968833, 0.012056915), (0.36834884, 0.36968833, 0.012056915), (-0.009405049, 0.3999316, -0.007943459), (-0.009405049, 0.3999316, -0.007943459), (-0.009405049, 0.3999316, 0.012056915), (-0.009405049, 0.3999316, 0.012056915), (0.25828335, 0.36968833, 0.012056915), (0.25828335, 0.36968833, 0.012056915), (0.42337596, 0.36885476, 0.012056915), (0.42337596, 0.36885476, 0.012056915), (0.14824031, 0.36746547, 0.012056915), (0.14824031, 0.36746547, 0.012056915), (0.09324105, 0.36552086, 0.012056915), (0.09324105, 0.36552086, 0.012056915), (0.31331587, 0.36996618, 0.012056915), (0.31331587, 0.36996618, 0.012056915), (0.47839144, 0.36746547, 0.012056915), (0.47839144, 0.36746547, 0.012056915)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0037"
            {
                token outputs:displacement.connect = </world/microwave/link_0/material0037/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_0/material0037/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "door_frame_4_D9A7C631BE3A" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [16, 258, 2, 3, 259, 17, 258, 16, 136, 137, 17, 259, 136, 16, 208, 209, 17, 137, 208, 16, 88, 89, 17, 209, 88, 16, 276, 277, 17, 89, 276, 16, 60, 61, 17, 277, 60, 16, 160, 161, 17, 61, 160, 16, 100, 101, 17, 161, 100, 16, 36, 37, 17, 101, 36, 16, 24, 25, 17, 37, 24, 16, 8, 9, 17, 25, 24, 8, 10, 11, 9, 25, 24, 10, 14, 15, 11, 25, 24, 14, 112, 113, 15, 25, 112, 14, 148, 149, 15, 113, 148, 14, 48, 49, 15, 149, 48, 14, 288, 289, 15, 49, 288, 14, 76, 77, 15, 289, 76, 14, 220, 221, 15, 77, 220, 14, 124, 125, 15, 221, 124, 14, 248, 249, 15, 125, 22, 40, 28, 27, 39, 21, 40, 22, 34, 33, 21, 39, 35, 104, 41, 38, 103, 32, 104, 35, 98, 97, 32, 103, 99, 164, 105, 102, 163, 96, 164, 99, 158, 157, 96, 163, 159, 64, 165, 162, 63, 156, 64, 159, 58, 57, 156, 63, 59, 280, 65, 62, 279, 56, 280, 59, 274, 273, 56, 279, 86, 281, 275, 272, 278, 85, 281, 86, 92, 91, 85, 278, 206, 93, 87, 84, 90, 205, 93, 206, 212, 211, 205, 90, 134, 213, 207, 204, 210, 133, 213, 134, 140, 139, 133, 210, 257, 141, 135, 132, 138, 256, 141, 257, 263, 262, 256, 138, 169, 261, 255, 254, 260, 168, 261, 169, 5, 4, 168, 260, 5, 169, 175, 174, 168, 4, 172, 324, 2, 3, 325, 173, 324, 172, 192, 193, 173, 325, 2, 324, 298, 299, 325, 3, 2, 298, 238, 239, 299, 3, 2, 238, 316, 317, 239, 3, 2, 228, 16, 17, 229, 3, 228, 2, 310, 311, 3, 229, 310, 2, 306, 307, 3, 311, 306, 2, 236, 237, 3, 307, 236, 2, 264, 265, 3, 237, 264, 2, 316, 317, 3, 265, 240, 266, 318, 319, 267, 241, 266, 240, 232, 233, 241, 267, 232, 240, 294, 295, 241, 233, 232, 294, 326, 327, 295, 233, 232, 326, 308, 309, 327, 233, 308, 326, 198, 199, 327, 309, 308, 198, 312, 313, 199, 309, 312, 198, 300, 301, 199, 313, 300, 198, 186, 187, 199, 301, 312, 300, 230, 231, 301, 313, 230, 300, 8, 9, 301, 231, 300, 186, 302, 303, 187, 301, 302, 186, 68, 69, 187, 303, 68, 186, 10, 11, 187, 69, 10, 186, 226, 227, 187, 11, 226, 186, 314, 315, 187, 227, 314, 186, 304, 305, 187, 315, 304, 186, 322, 323, 187, 305, 304, 322, 234, 235, 323, 305, 234, 322, 296, 297, 323, 235, 234, 296, 242, 243, 297, 235, 234, 242, 268, 269, 243, 235, 268, 242, 320, 321, 243, 269, 8, 66, 10, 11, 67, 9, 66, 8, 300, 301, 9, 67, 10, 66, 68, 69, 67, 11, 251, 123, 129, 126, 120, 250, 123, 251, 247, 246, 250, 120, 128, 219, 225, 222, 216, 127, 219, 128, 122, 121, 127, 216, 224, 75, 81, 78, 72, 223, 75, 224, 218, 217, 223, 72, 80, 287, 293, 290, 284, 79, 287, 80, 74, 73, 79, 284, 286, 53, 292, 291, 50, 285, 53, 286, 47, 44, 285, 50, 46, 153, 52, 51, 150, 45, 153, 46, 147, 144, 45, 150, 146, 117, 152, 151, 114, 145, 117, 146, 111, 108, 145, 114, 110, 29, 116, 115, 26, 109, 29, 110, 23, 20, 109, 26, 19, 7, 31, 30, 6, 18, 7, 19, 13, 12, 18, 6, 13, 19, 1, 0, 18, 12, 1, 19, 107, 106, 18, 0, 1, 107, 143, 142, 106, 0, 1, 143, 43, 42, 142, 0, 1, 43, 283, 282, 42, 0, 1, 283, 71, 70, 282, 0, 1, 71, 215, 214, 70, 0, 1, 215, 119, 118, 214, 0, 1, 119, 245, 244, 118, 0, 253, 181, 167, 166, 180, 252, 181, 253, 131, 130, 252, 180, 181, 131, 203, 202, 130, 180, 181, 203, 83, 82, 202, 180, 181, 83, 271, 270, 82, 180, 181, 271, 55, 54, 270, 180, 181, 55, 155, 154, 54, 180, 181, 155, 95, 94, 154, 180, 181, 95, 31, 30, 94, 180, 181, 31, 7, 6, 30, 180, 170, 194, 176, 177, 195, 171, 194, 170, 182, 183, 171, 195, 194, 182, 190, 191, 183, 195, 190, 182, 178, 179, 183, 191, 196, 188, 200, 201, 189, 197, 188, 196, 184, 185, 197, 189]
                rel material:binding = </world/microwave/link_0/material0038>
                point3f[] points = [(-0.0066838693, 0.3999316, -0.007943459), (-0.0066838693, 0.3999316, -0.007943459), (-0.0066838693, -0.000033874327, 0.012056915), (-0.0066838693, -0.000033874327, 0.012056915), (-0.0066838693, -0.000033874327, 0.012056915), (-0.0066838693, -0.000033874327, 0.012056915), (-0.0066838693, 0.009966105, -0.007943459), (-0.0066838693, 0.009966105, -0.007943459), (-0.0066838693, 0.049410306, 0.012056915), (-0.0066838693, 0.049410306, 0.012056915), (-0.0066838693, 0.3605219, 0.012056915), (-0.0066838693, 0.3605219, 0.012056915), (-0.0066838693, 0.38996616, -0.007943459), (-0.0066838693, 0.38996616, -0.007943459), (-0.0066838693, 0.39996612, 0.012056915), (-0.0066838693, 0.39996612, 0.012056915), (-0.0066838693, 0.019409953, 0.012056915), (-0.0066838693, 0.019409953, 0.012056915), (-0.01664974, 0.3926869, -0.007943459), (-0.01664974, 0.3926869, -0.007943459), (-0.01664974, 0.3926869, -0.007943459), (-0.01664974, 0.3926869, -0.007943459), (-0.01664974, 0.3926869, -0.007943459), (-0.01664974, 0.3926869, -0.007943459), (-0.01664974, 0.3926869, 0.012056915), (-0.01664974, 0.3926869, 0.012056915), (-0.01664974, 0.3926869, 0.012056915), (-0.01664974, 0.3926869, 0.012056915), (-0.01664974, 0.3926869, 0.012056915), (-0.01664974, 0.3926869, 0.012056915), (-0.01664974, 0.007244926, -0.007943459), (-0.01664974, 0.007244926, -0.007943459), (-0.01664974, 0.007244926, -0.007943459), (-0.01664974, 0.007244926, -0.007943459), (-0.01664974, 0.007244926, -0.007943459), (-0.01664974, 0.007244926, -0.007943459), (-0.01664974, 0.007244926, 0.012056915), (-0.01664974, 0.007244926, 0.012056915), (-0.01664974, 0.007244926, 0.012056915), (-0.01664974, 0.007244926, 0.012056915), (-0.01664974, 0.007244926, 0.012056915), (-0.01664974, 0.007244926, 0.012056915), (-0.015071606, 0.39642927, -0.007943459), (-0.015071606, 0.39642927, -0.007943459), (-0.015071606, 0.39642927, -0.007943459), (-0.015071606, 0.39642927, -0.007943459), (-0.015071606, 0.39642927, -0.007943459), (-0.015071606, 0.39642927, -0.007943459), (-0.015071606, 0.39642927, 0.012056915), (-0.015071606, 0.39642927, 0.012056915), (-0.015071606, 0.39642927, 0.012056915), (-0.015071606, 0.39642927, 0.012056915), (-0.015071606, 0.39642927, 0.012056915), (-0.015071606, 0.39642927, 0.012056915), (-0.015071606, 0.0035025768, -0.007943459), (-0.015071606, 0.0035025768, -0.007943459), (-0.015071606, 0.0035025768, -0.007943459), (-0.015071606, 0.0035025768, -0.007943459), (-0.015071606, 0.0035025768, -0.007943459), (-0.015071606, 0.0035025768, -0.007943459), (-0.015071606, 0.0035025768, 0.012056915), (-0.015071606, 0.0035025768, 0.012056915), (-0.015071606, 0.0035025768, 0.012056915), (-0.015071606, 0.0035025768, 0.012056915), (-0.015071606, 0.0035025768, 0.012056915), (-0.015071606, 0.0035025768, 0.012056915), (0.033316046, 0.069410264, 0.012056915), (0.033316046, 0.069410264, 0.012056915), (0.033316046, 0.33996624, 0.012056915), (0.033316046, 0.33996624, 0.012056915), (-0.013147397, 0.39835346, -0.007943459), (-0.013147397, 0.39835346, -0.007943459), (-0.013147397, 0.39835346, -0.007943459), (-0.013147397, 0.39835346, -0.007943459), (-0.013147397, 0.39835346, -0.007943459), (-0.013147397, 0.39835346, -0.007943459), (-0.013147397, 0.39835346, 0.012056915), (-0.013147397, 0.39835346, 0.012056915), (-0.013147397, 0.39835346, 0.012056915), (-0.013147397, 0.39835346, 0.012056915), (-0.013147397, 0.39835346, 0.012056915), (-0.013147397, 0.39835346, 0.012056915), (-0.013147397, 0.001578368, -0.007943459), (-0.013147397, 0.001578368, -0.007943459), (-0.013147397, 0.001578368, -0.007943459), (-0.013147397, 0.001578368, -0.007943459), (-0.013147397, 0.001578368, -0.007943459), (-0.013147397, 0.001578368, -0.007943459), (-0.013147397, 0.001578368, 0.012056915), (-0.013147397, 0.001578368, 0.012056915), (-0.013147397, 0.001578368, 0.012056915), (-0.013147397, 0.001578368, 0.012056915), (-0.013147397, 0.001578368, 0.012056915), (-0.013147397, 0.001578368, 0.012056915), (-0.016319472, 0.0059209405, -0.007943459), (-0.016319472, 0.0059209405, -0.007943459), (-0.016319472, 0.0059209405, -0.007943459), (-0.016319472, 0.0059209405, -0.007943459), (-0.016319472, 0.0059209405, -0.007943459), (-0.016319472, 0.0059209405, -0.007943459), (-0.016319472, 0.0059209405, 0.012056915), (-0.016319472, 0.0059209405, 0.012056915), (-0.016319472, 0.0059209405, 0.012056915), (-0.016319472, 0.0059209405, 0.012056915), (-0.016319472, 0.0059209405, 0.012056915), (-0.016319472, 0.0059209405, 0.012056915), (-0.016319472, 0.39401132, -0.007943459), (-0.016319472, 0.39401132, -0.007943459), (-0.016319472, 0.39401132, -0.007943459), (-0.016319472, 0.39401132, -0.007943459), (-0.016319472, 0.39401132, -0.007943459), (-0.016319472, 0.39401132, -0.007943459), (-0.016319472, 0.39401132, 0.012056915), (-0.016319472, 0.39401132, 0.012056915), (-0.016319472, 0.39401132, 0.012056915), (-0.016319472, 0.39401132, 0.012056915), (-0.016319472, 0.39401132, 0.012056915), (-0.016319472, 0.39401132, 0.012056915), (-0.0107290335, 0.39960134, -0.007943459), (-0.0107290335, 0.39960134, -0.007943459), (-0.0107290335, 0.39960134, -0.007943459), (-0.0107290335, 0.39960134, -0.007943459), (-0.0107290335, 0.39960134, -0.007943459), (-0.0107290335, 0.39960134, -0.007943459), (-0.0107290335, 0.39960134, 0.012056915), (-0.0107290335, 0.39960134, 0.012056915), (-0.0107290335, 0.39960134, 0.012056915), (-0.0107290335, 0.39960134, 0.012056915), (-0.0107290335, 0.39960134, 0.012056915), (-0.0107290335, 0.39960134, 0.012056915), (-0.0107290335, 0.00033091838, -0.007943459), (-0.0107290335, 0.00033091838, -0.007943459), (-0.0107290335, 0.00033091838, -0.007943459), (-0.0107290335, 0.00033091838, -0.007943459), (-0.0107290335, 0.00033091838, -0.007943459), (-0.0107290335, 0.00033091838, -0.007943459), (-0.0107290335, 0.00033091838, 0.012056915), (-0.0107290335, 0.00033091838, 0.012056915), (-0.0107290335, 0.00033091838, 0.012056915), (-0.0107290335, 0.00033091838, 0.012056915), (-0.0107290335, 0.00033091838, 0.012056915), (-0.0107290335, 0.00033091838, 0.012056915), (-0.015789129, 0.39526874, -0.007943459), (-0.015789129, 0.39526874, -0.007943459), (-0.015789129, 0.39526874, -0.007943459), (-0.015789129, 0.39526874, -0.007943459), (-0.015789129, 0.39526874, -0.007943459), (-0.015789129, 0.39526874, -0.007943459), (-0.015789129, 0.39526874, 0.012056915), (-0.015789129, 0.39526874, 0.012056915), (-0.015789129, 0.39526874, 0.012056915), (-0.015789129, 0.39526874, 0.012056915), (-0.015789129, 0.39526874, 0.012056915), (-0.015789129, 0.39526874, 0.012056915), (-0.015789129, 0.004663508, -0.007943459), (-0.015789129, 0.004663508, -0.007943459), (-0.015789129, 0.004663508, -0.007943459), (-0.015789129, 0.004663508, -0.007943459), (-0.015789129, 0.004663508, -0.007943459), (-0.015789129, 0.004663508, -0.007943459), (-0.015789129, 0.004663508, 0.012056915), (-0.015789129, 0.004663508, 0.012056915), (-0.015789129, 0.004663508, 0.012056915), (-0.015789129, 0.004663508, 0.012056915), (-0.015789129, 0.004663508, 0.012056915), (-0.015789129, 0.004663508, 0.012056915), (0.48831615, -0.000033874327, -0.007943459), (0.48831615, -0.000033874327, -0.007943459), (0.48831615, -0.000033874327, -0.007943459), (0.48831615, -0.000033874327, -0.007943459), (0.48831615, -0.000033874327, -0.007943459), (0.48831615, -0.000033874327, -0.007943459), (0.48831615, -0.000033874327, 0.012056915), (0.48831615, -0.000033874327, 0.012056915), (0.48831615, -0.000033874327, 0.012056915), (0.48831615, -0.000033874327, 0.012056915), (0.48831615, -0.000033874327, 0.012056915), (0.48831615, -0.000033874327, 0.012056915), (0.48831615, 0.009966105, -0.012943241), (0.48831615, 0.009966105, -0.012943241), (0.48831615, 0.009966105, -0.007943459), (0.48831615, 0.009966105, -0.007943459), (0.48831615, 0.009966105, -0.007943459), (0.48831615, 0.009966105, -0.007943459), (0.48831615, 0.3671144, -0.012943241), (0.48831615, 0.3671144, -0.012943241), (0.48831615, 0.3671144, 0.012056915), (0.48831615, 0.3671144, 0.012056915), (0.48831615, 0.3671144, 0.012056915), (0.48831615, 0.3671144, 0.012056915), (0.48831615, 0.012817478, -0.012943241), (0.48831615, 0.012817478, -0.012943241), (0.48831615, 0.012817478, 0.012056915), (0.48831615, 0.012817478, 0.012056915), (0.48831615, 0.012817478, 0.012056915), (0.48831615, 0.012817478, 0.012056915), (0.48831615, 0.042817414, -0.012943241), (0.48831615, 0.042817414, -0.012943241), (0.48831615, 0.042817414, 0.012056915), (0.48831615, 0.042817414, 0.012056915), (0.48831615, 0.042817414, 0.012056915), (0.48831615, 0.042817414, 0.012056915), (-0.011986466, 0.0008608453, -0.007943459), (-0.011986466, 0.0008608453, -0.007943459), (-0.011986466, 0.0008608453, -0.007943459), (-0.011986466, 0.0008608453, -0.007943459), (-0.011986466, 0.0008608453, -0.007943459), (-0.011986466, 0.0008608453, -0.007943459), (-0.011986466, 0.0008608453, 0.012056915), (-0.011986466, 0.0008608453, 0.012056915), (-0.011986466, 0.0008608453, 0.012056915), (-0.011986466, 0.0008608453, 0.012056915), (-0.011986466, 0.0008608453, 0.012056915), (-0.011986466, 0.0008608453, 0.012056915), (-0.011986466, 0.39907098, -0.007943459), (-0.011986466, 0.39907098, -0.007943459), (-0.011986466, 0.39907098, -0.007943459), (-0.011986466, 0.39907098, -0.007943459), (-0.011986466, 0.39907098, -0.007943459), (-0.011986466, 0.39907098, -0.007943459), (-0.011986466, 0.39907098, 0.012056915), (-0.011986466, 0.39907098, 0.012056915), (-0.011986466, 0.39907098, 0.012056915), (-0.011986466, 0.39907098, 0.012056915), (-0.011986466, 0.39907098, 0.012056915), (-0.011986466, 0.39907098, 0.012056915), (0.038264666, 0.363021, 0.012056915), (0.038264666, 0.363021, 0.012056915), (0.038264666, 0.01691131, 0.012056915), (0.038264666, 0.01691131, 0.012056915), (0.038264666, 0.046911247, 0.012056915), (0.038264666, 0.046911247, 0.012056915), (0.20325622, 0.041077476, 0.012056915), (0.20325622, 0.041077476, 0.012056915), (0.20325622, 0.36885476, 0.012056915), (0.20325622, 0.36885476, 0.012056915), (0.20325622, 0.011077537, 0.012056915), (0.20325622, 0.011077537, 0.012056915), (0.36834884, 0.0102439625, 0.012056915), (0.36834884, 0.0102439625, 0.012056915), (0.36834884, 0.0402439, 0.012056915), (0.36834884, 0.0402439, 0.012056915), (0.36834884, 0.36968833, 0.012056915), (0.36834884, 0.36968833, 0.012056915), (-0.009405049, 0.3999316, -0.007943459), (-0.009405049, 0.3999316, -0.007943459), (-0.009405049, 0.3999316, -0.007943459), (-0.009405049, 0.3999316, -0.007943459), (-0.009405049, 0.3999316, 0.012056915), (-0.009405049, 0.3999316, 0.012056915), (-0.009405049, 0.3999316, 0.012056915), (-0.009405049, 0.3999316, 0.012056915), (-0.009405049, 6.4995726e-7, -0.007943459), (-0.009405049, 6.4995726e-7, -0.007943459), (-0.009405049, 6.4995726e-7, -0.007943459), (-0.009405049, 6.4995726e-7, -0.007943459), (-0.009405049, 6.4995726e-7, -0.007943459), (-0.009405049, 6.4995726e-7, -0.007943459), (-0.009405049, 6.4995726e-7, 0.012056915), (-0.009405049, 6.4995726e-7, 0.012056915), (-0.009405049, 6.4995726e-7, 0.012056915), (-0.009405049, 6.4995726e-7, 0.012056915), (-0.009405049, 6.4995726e-7, 0.012056915), (-0.009405049, 6.4995726e-7, 0.012056915), (0.25828335, 0.0102439625, 0.012056915), (0.25828335, 0.0102439625, 0.012056915), (0.25828335, 0.0402439, 0.012056915), (0.25828335, 0.0402439, 0.012056915), (0.25828335, 0.36968833, 0.012056915), (0.25828335, 0.36968833, 0.012056915), (-0.014183958, 0.0024660164, -0.007943459), (-0.014183958, 0.0024660164, -0.007943459), (-0.014183958, 0.0024660164, -0.007943459), (-0.014183958, 0.0024660164, -0.007943459), (-0.014183958, 0.0024660164, -0.007943459), (-0.014183958, 0.0024660164, -0.007943459), (-0.014183958, 0.0024660164, 0.012056915), (-0.014183958, 0.0024660164, 0.012056915), (-0.014183958, 0.0024660164, 0.012056915), (-0.014183958, 0.0024660164, 0.012056915), (-0.014183958, 0.0024660164, 0.012056915), (-0.014183958, 0.0024660164, 0.012056915), (-0.014183958, 0.39746624, -0.007943459), (-0.014183958, 0.39746624, -0.007943459), (-0.014183958, 0.39746624, -0.007943459), (-0.014183958, 0.39746624, -0.007943459), (-0.014183958, 0.39746624, -0.007943459), (-0.014183958, 0.39746624, -0.007943459), (-0.014183958, 0.39746624, 0.012056915), (-0.014183958, 0.39746624, 0.012056915), (-0.014183958, 0.39746624, 0.012056915), (-0.014183958, 0.39746624, 0.012056915), (-0.014183958, 0.39746624, 0.012056915), (-0.014183958, 0.39746624, 0.012056915), (0.42337596, 0.041077476, 0.012056915), (0.42337596, 0.041077476, 0.012056915), (0.42337596, 0.36885476, 0.012056915), (0.42337596, 0.36885476, 0.012056915), (0.42337596, 0.011077537, 0.012056915), (0.42337596, 0.011077537, 0.012056915), (0.4483158, 0.069410264, 0.012056915), (0.4483158, 0.069410264, 0.012056915), (0.4483158, 0.33996624, 0.012056915), (0.4483158, 0.33996624, 0.012056915), (0.14824031, 0.36746547, 0.012056915), (0.14824031, 0.36746547, 0.012056915), (0.14824031, 0.012466827, 0.012056915), (0.14824031, 0.012466827, 0.012056915), (0.14824031, 0.042466763, 0.012056915), (0.14824031, 0.042466763, 0.012056915), (0.09324105, 0.014411418, 0.012056915), (0.09324105, 0.014411418, 0.012056915), (0.09324105, 0.044411357, 0.012056915), (0.09324105, 0.044411357, 0.012056915), (0.09324105, 0.36552086, 0.012056915), (0.09324105, 0.36552086, 0.012056915), (0.31331587, 0.009966105, 0.012056915), (0.31331587, 0.009966105, 0.012056915), (0.31331587, 0.039966043, 0.012056915), (0.31331587, 0.039966043, 0.012056915), (0.31331587, 0.36996618, 0.012056915), (0.31331587, 0.36996618, 0.012056915), (0.47839144, 0.36746547, 0.012056915), (0.47839144, 0.36746547, 0.012056915), (0.47839144, 0.012466827, 0.012056915), (0.47839144, 0.012466827, 0.012056915), (0.47839144, 0.042466763, 0.012056915), (0.47839144, 0.042466763, 0.012056915)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0038"
            {
                token outputs:displacement.connect = </world/microwave/link_0/material0038/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_0/material0038/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0, 0, 0)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "door_frame_4_9FE5DA741A63" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [24, 28, 44, 45, 29, 25, 28, 24, 22, 23, 25, 29, 22, 24, 34, 35, 25, 23, 22, 34, 48, 49, 35, 23, 22, 48, 36, 37, 49, 23, 36, 48, 6, 7, 49, 37, 36, 6, 40, 41, 7, 37, 40, 6, 12, 13, 7, 41, 40, 12, 16, 17, 13, 41, 16, 12, 2, 3, 13, 17, 2, 12, 50, 51, 13, 3, 2, 50, 32, 33, 51, 3, 2, 32, 26, 27, 33, 3, 2, 26, 46, 47, 27, 3, 2, 18, 0, 1, 19, 3, 18, 2, 42, 43, 3, 19, 42, 2, 38, 39, 3, 43, 38, 2, 20, 21, 3, 39, 20, 2, 30, 31, 3, 21, 30, 2, 46, 47, 3, 31, 4, 14, 8, 9, 15, 5, 14, 4, 10, 11, 5, 15]
                rel material:binding = </world/microwave/link_0/material0039>
                point3f[] points = [(-0.0066838693, 0.049410306, 0.012056915), (-0.0066838693, 0.049410306, 0.012056915), (-0.0066838693, 0.019409953, 0.012056915), (-0.0066838693, 0.019409953, 0.012056915), (0.48831615, 0.012817478, -0.012943241), (0.48831615, 0.012817478, -0.012943241), (0.48831615, 0.012817478, 0.012056915), (0.48831615, 0.012817478, 0.012056915), (0.48831615, 0.012817478, 0.012056915), (0.48831615, 0.012817478, 0.012056915), (0.48831615, 0.042817414, -0.012943241), (0.48831615, 0.042817414, -0.012943241), (0.48831615, 0.042817414, 0.012056915), (0.48831615, 0.042817414, 0.012056915), (0.48831615, 0.042817414, 0.012056915), (0.48831615, 0.042817414, 0.012056915), (0.038264666, 0.01691131, 0.012056915), (0.038264666, 0.01691131, 0.012056915), (0.038264666, 0.046911247, 0.012056915), (0.038264666, 0.046911247, 0.012056915), (0.20325622, 0.041077476, 0.012056915), (0.20325622, 0.041077476, 0.012056915), (0.20325622, 0.011077537, 0.012056915), (0.20325622, 0.011077537, 0.012056915), (0.36834884, 0.0102439625, 0.012056915), (0.36834884, 0.0102439625, 0.012056915), (0.36834884, 0.0402439, 0.012056915), (0.36834884, 0.0402439, 0.012056915), (0.25828335, 0.0102439625, 0.012056915), (0.25828335, 0.0102439625, 0.012056915), (0.25828335, 0.0402439, 0.012056915), (0.25828335, 0.0402439, 0.012056915), (0.42337596, 0.041077476, 0.012056915), (0.42337596, 0.041077476, 0.012056915), (0.42337596, 0.011077537, 0.012056915), (0.42337596, 0.011077537, 0.012056915), (0.14824031, 0.012466827, 0.012056915), (0.14824031, 0.012466827, 0.012056915), (0.14824031, 0.042466763, 0.012056915), (0.14824031, 0.042466763, 0.012056915), (0.09324105, 0.014411418, 0.012056915), (0.09324105, 0.014411418, 0.012056915), (0.09324105, 0.044411357, 0.012056915), (0.09324105, 0.044411357, 0.012056915), (0.31331587, 0.009966105, 0.012056915), (0.31331587, 0.009966105, 0.012056915), (0.31331587, 0.039966043, 0.012056915), (0.31331587, 0.039966043, 0.012056915), (0.47839144, 0.012466827, 0.012056915), (0.47839144, 0.012466827, 0.012056915), (0.47839144, 0.042466763, 0.012056915), (0.47839144, 0.042466763, 0.012056915)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0039"
            {
                token outputs:displacement.connect = </world/microwave/link_0/material0039/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_0/material0039/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.6666667, 0.6666667, 0.6666667)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }

            def Mesh "glass_5" (
                prepend apiSchemas = ["PhysicsCollisionAPI"]
            )
            {
                int[] faceVertexCounts = [3, 3, 3, 3]
                int[] faceVertexIndices = [6, 0, 4, 0, 6, 2, 3, 7, 1, 5, 1, 7]
                rel material:binding = </world/microwave/link_0/material0040>
                point3f[] points = [(0.033316046, 0.069410264, 0.012056915), (0.033316046, 0.069410264, 0.012056915), (0.033316046, 0.33996624, 0.012056915), (0.033316046, 0.33996624, 0.012056915), (0.4483158, 0.069410264, 0.012056915), (0.4483158, 0.069410264, 0.012056915), (0.4483158, 0.33996624, 0.012056915), (0.4483158, 0.33996624, 0.012056915)]
                float2[] primvars:st = []
                custom bool singleSided = 1
            }

            def Material "material0040"
            {
                token outputs:displacement.connect = </world/microwave/link_0/material0040/Shader.outputs:displacement>
                token outputs:surface.connect = </world/microwave/link_0/material0040/Shader.outputs:surface>

                def Shader "Shader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.22745098, 0.22745098, 0.22745098)
                    float inputs:metallic = 0
                    normal3f inputs:normal
                    float inputs:roughness = 0.5
                    color3f inputs:specularColor = (0.06666667, 0.06666667, 0.06666667)
                    int inputs:useSpecularWorkflow = 0
                    token outputs:displacement
                    token outputs:surface
                }
            }
        }

        def PhysicsRevoluteJoint "joint_0" (
            prepend apiSchemas = ["PhysxJointAPI"]
        )
        {
            uniform token physics:axis = "Z"
            prepend rel physics:body0 = </world/microwave/link_1>
            prepend rel physics:body1 = </world/microwave/link_0>
            point3f physics:localPos0 = (-0.2936121, -0.20083089, 0.15062566)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.50001734, 0.49998266, -0.50001734, 0.49998266)
            quatf physics:localRot1 = (0.50001734, 0.49998266, -0.50001734, 0.49998266)
            float physics:lowerLimit = 0
            float physics:upperLimit = 90
        }

        def PhysicsFixedJoint "world_fixed_joint" (
            prepend apiSchemas = ["PhysxJointAPI"]
        )
        {
            prepend rel physics:body0 = </world>
            prepend rel physics:body1 = </world/microwave>
            point3f physics:localPos0 = (0.0026824952, 0.019704007, 0.92086476)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (1, 0, 0, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
        }
    }

    def Xform "ball" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysxRigidBodyAPI", "PhysicsMassAPI"]
    )
    {
        quatf xformOp:orient = (0.33635473, 0.00005510633, 0.000019682044, 0.9417354)
        double3 xformOp:translate = (0.08755581848300516, -0.20595757188449923, 1.119973953975767)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient"]

        def Sphere "geometry_0" (
            prepend apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            rel material:binding = </world/ball/material0041>
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.025, 0.025, 0.025)
            double3 xformOp:translate = (-0.00001551854122970424, 0, 0.025)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale", "xformOp:orient"]
        }

        def Material "material0041"
        {
            token outputs:displacement.connect = </world/ball/material0041/Shader.outputs:displacement>
            token outputs:surface.connect = </world/ball/material0041/Shader.outputs:surface>

            def Shader "Shader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 0, 0)
                float inputs:metallic = 0
                normal3f inputs:normal
                float inputs:roughness = 0.5
                color3f inputs:specularColor = (0, 0, 0)
                int inputs:useSpecularWorkflow = 0
                token outputs:displacement
                token outputs:surface
            }
        }
    }

    def PhysicsCollisionGroup "fixed_object_collision_group"
    {
        prepend rel collection:colliders:includes = [
            </world/table>,
            </world/microwave>,
        ]
        prepend rel physics:filteredGroups = </world/fixed_object_collision_group>
    }
}

